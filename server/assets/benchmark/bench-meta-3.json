[
    {
        "tables_used": [
            "representative"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "Give me a histogram for what are the different parties of representative? Show the party name and the number of representatives in each party.",
            "What are the different parties of representative? Show the party name and the number of representatives in each party.",
            "Bar chart of the total number from each party"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "List singer names and number of concerts for each singer by a pie chart.",
            "List singer names and number of concerts for each singer. Show the proportion.",
            "Give the proportion of what are the names of the singers and number of concerts for each person?",
            "Display a pie chart for what are the names of the singers and number of concerts for each person?",
            "What are the names of the singers and number of concerts for each person. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Timbaland",
                        "y_data": 2
                    },
                    {
                        "x_data": "Justin Brown",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Nizinik",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tribal King",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal",
            "journal",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Show the date and the corresponding sales of the journal which did not have any of the listed editors serving on the committee by a bar chart, rank by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "September 9, 2001",
                        "y_data": 798
                    },
                    {
                        "x_data": "October 29, 2001",
                        "y_data": 1763
                    },
                    {
                        "x_data": "October 14, 2001",
                        "y_data": 4798
                    },
                    {
                        "x_data": "November 4, 2001",
                        "y_data": 1232
                    },
                    {
                        "x_data": "November 18, 2001",
                        "y_data": 3421
                    },
                    {
                        "x_data": "November 12, 2001",
                        "y_data": 6532
                    },
                    {
                        "x_data": "December 30, 2001",
                        "y_data": 3798
                    },
                    {
                        "x_data": "December 22, 2001",
                        "y_data": 1934
                    },
                    {
                        "x_data": "December 16, 2001",
                        "y_data": 2804
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Sales"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me a scatter chart that groups acc road, the x-axis is school id and the y-axis is acc percent.",
            "Group by all acc road, show the school id and All_Games_Percent in a scatter plot.",
            "Draw a scatterplot of school id vs acc_percent where school id is on the x-axis and points are colored by ACC_Road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 5,
                        "y_data": 0.563,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.625,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "professionals",
            "Treatments",
            "Treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show how many professionals in a bar chart grouping by professional's first name, I want to rank by the X from low to high.",
            "List the number of professionals in a bar chart that groups by professional's first name, order names from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Danny",
                        "y_data": 1
                    },
                    {
                        "x_data": "Domenica",
                        "y_data": 2
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monte",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ruben",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigurd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Velva",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vernice",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "For each continent where the average life expectancy is shorter than 72, draw a scatter chart shows their average life expectancy and the total population of each continent",
            "Show sum(population) vs mean lifeexpectancy as scatter plot use a different color for each Continent"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 784475000,
                        "y_data": 52.57192982456139,
                        "classify": "Africa"
                    },
                    {
                        "x_data": 3705025700,
                        "y_data": 67.44117647058825,
                        "classify": "Asia"
                    },
                    {
                        "x_data": 30401150,
                        "y_data": 69.715,
                        "classify": "Oceania"
                    },
                    {
                        "x_data": 345780000,
                        "y_data": 70.94615384615386,
                        "classify": "South America"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "sum(Population)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(LifeExpectancy)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Payments"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "List all payment methods and number of payments using each payment methods Plot them as bar chart, display names in ascending order please.",
            "List all payment methods and number of payments using each payment methods by a bar chart, rank by the payment_method_code from low to high.",
            "For each payment method, how many payments were made Show bar chart, and rank in asc by the x-axis please.",
            "Show the total number from each payment method code, rank in asc by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit Card",
                        "y_data": 5
                    },
                    {
                        "x_data": "Direct Debit",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "race"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Show the race class and number of races in each class with a bar chart.",
            "Show the race class and number of races in each class.",
            "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?",
            "Draw a bar chart for what are the different classes of races, and how many races correspond to each?",
            "What are the different classes of races, and how many races correspond to each. Show bar chart.",
            "Give me a bar chart for the total number of each class"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DP/GT",
                        "y_data": 5
                    },
                    {
                        "x_data": "GT",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of name over the name , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and the amount of name , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the amount of name , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of bookings for different guests and group by guest first name in a bar chart, and could you list by the names in ascending please?",
            "How many bookings for different guests? Show me a bar chart grouping by guest first name, could you list by the names in ascending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Else",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Juvenal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lo",
                        "y_data": 2
                    },
                    {
                        "x_data": "Louvenia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mozell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rebeca",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tamia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "guest_first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(guest_first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each office in a stacked bar chart The x-axis is office name and group by course description, order X-axis in ascending order.",
            "How many courses for each office? Show me a stacked bar chart The x-axis is office name and group by course description, and sort by the X-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BBG 208",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents",
            "Catalog_Contents_Additional_Attributes"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "What are the names of catalog entries with level number 8, and count them by a pie chart",
            "Find the names of catalog entries with level number 8, and count them by a pie chart",
            "A pie chart for finding the number of the names of catalog entries with level number 8.",
            "Find the number of the names of catalog entries with level number 8.",
            "A pie chart for what are the number of the names of catalog entries with level number 8?",
            "What are the number of the names of catalog entries with level number 8?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carbonated Water",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cola",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ginger Beer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Root beer",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(catalog_entry_name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the average gpa of all students in each department with a pie chart.",
            "What is the average student GPA for every department? Return a pie chart.",
            "I want to know the proportion of the average student GPA for each dept code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 2.776666666666667
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.18
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(stu_gpa)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Plot how many hire date by grouped by hire date as a bar graph, rank in asc by the total number.",
            "Give a bar chart to show the number of employees by each hire date, note that bin the hire date into the day of week interval, could you rank by the Y in ascending please?",
            "Bin the hire date of employees into the day of week interval and count them for visualizing a bar chart, and rank in asc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of meter_500 and ID .",
            "Show me about the distribution of meter_500 and ID in a bar chart.",
            "Give me the comparison about ID over the meter_500 .",
            "A bar chart shows the distribution of meter_500 and ID .",
            "Draw a bar chart about the distribution of meter_500 and ID .",
            "Show id from each meter 500"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4:54.21",
                        "y_data": 7
                    },
                    {
                        "x_data": "4:55.08",
                        "y_data": 4
                    },
                    {
                        "x_data": "4:54.48",
                        "y_data": 5
                    },
                    {
                        "x_data": "4:52.85",
                        "y_data": 8
                    },
                    {
                        "x_data": "4:57.03",
                        "y_data": 1
                    },
                    {
                        "x_data": "4:56.96",
                        "y_data": 2
                    },
                    {
                        "x_data": "4:56.15",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:54.19",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_500",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" Plot them as bar chart, I want to rank by the bar in ascending please.",
            "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart, list by the X-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "d",
                        "y_data": 3
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "investor_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "hall_of_fame"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Show me a line chart for how many players enter hall of fame each year?",
            "Return a line chart on how many players enter hall of fame each year?",
            "How many players enter hall of fame each year. Show the tendency.",
            "Count the number of players who enter hall of fame for each year with a line chart.",
            "Count the number of players who enter hall of fame for each year. Plot them as line chart.",
            "I want to see trend of the total number by yearid"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1936-01-01",
                        "y_data": 110
                    },
                    {
                        "x_data": "1937-01-01",
                        "y_data": 118
                    },
                    {
                        "x_data": "1938-01-01",
                        "y_data": 122
                    },
                    {
                        "x_data": "1939-01-01",
                        "y_data": 115
                    },
                    {
                        "x_data": "1942-01-01",
                        "y_data": 72
                    },
                    {
                        "x_data": "1944-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1945-01-01",
                        "y_data": 105
                    },
                    {
                        "x_data": "1946-01-01",
                        "y_data": 108
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1948-01-01",
                        "y_data": 106
                    },
                    {
                        "x_data": "1949-01-01",
                        "y_data": 120
                    },
                    {
                        "x_data": "1950-01-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1951-01-01",
                        "y_data": 86
                    },
                    {
                        "x_data": "1952-01-01",
                        "y_data": 75
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 89
                    },
                    {
                        "x_data": "1954-01-01",
                        "y_data": 53
                    },
                    {
                        "x_data": "1955-01-01",
                        "y_data": 66
                    },
                    {
                        "x_data": "1956-01-01",
                        "y_data": 106
                    },
                    {
                        "x_data": "1957-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "1958-01-01",
                        "y_data": 154
                    },
                    {
                        "x_data": "1959-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1960-01-01",
                        "y_data": 134
                    },
                    {
                        "x_data": "1961-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "1962-01-01",
                        "y_data": 81
                    },
                    {
                        "x_data": "1963-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "1964-01-01",
                        "y_data": 94
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 50
                    },
                    {
                        "x_data": "1967-01-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1968-01-01",
                        "y_data": 50
                    },
                    {
                        "x_data": "1969-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1970-01-01",
                        "y_data": 49
                    },
                    {
                        "x_data": "1971-01-01",
                        "y_data": 56
                    },
                    {
                        "x_data": "1972-01-01",
                        "y_data": 51
                    },
                    {
                        "x_data": "1973-01-01",
                        "y_data": 49
                    },
                    {
                        "x_data": "1974-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1975-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1976-01-01",
                        "y_data": 36
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1978-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 56
                    },
                    {
                        "x_data": "1980-01-01",
                        "y_data": 63
                    },
                    {
                        "x_data": "1981-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1982-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1983-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1984-01-01",
                        "y_data": 31
                    },
                    {
                        "x_data": "1985-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1986-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1987-01-01",
                        "y_data": 29
                    },
                    {
                        "x_data": "1988-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1990-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1991-01-01",
                        "y_data": 47
                    },
                    {
                        "x_data": "1992-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1993-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "1994-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1996-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1997-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "1998-01-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1999-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2000-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "2001-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 27
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 46
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 24
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 40
                    },
                    {
                        "x_data": "2014-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 32
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "yearid",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents for different document name in a bar chart.",
            "How many documents for different document name? Draw a bar chart.",
            "Bar chart x axis document name y axis the number of document name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Book on USA files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chapter on private files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Deontae files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jevon Paper",
                        "y_data": 1
                    },
                    {
                        "x_data": "Katheryn statement",
                        "y_data": 1
                    },
                    {
                        "x_data": "King Book",
                        "y_data": 1
                    },
                    {
                        "x_data": "Noel CV",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on Canadian files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on French files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on UK files",
                        "y_data": 3
                    },
                    {
                        "x_data": "Review on USA files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trenton Presentation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winona Book",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the average weight for each pet type, display y axis from low to high order.",
            "Give me a bar chart for the average of weight of each pettype, I want to order from low to high by the Y-axis.",
            "What is the average weight for each type of pet Show bar chart, list in ascending by the y-axis.",
            "Visualize a bar chart for what is the average weight for each type of pet?, and I want to rank by the Y-axis from low to high.",
            "what is the average weight for each type of pet?, could you order by the total number from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "dog",
                        "y_data": 11.35
                    },
                    {
                        "x_data": "cat",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "home_game"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Show the trend about the total average number of attendance at home games change over the years, bin year into year interval.",
            "Can you draw the trend of sum avg(attendance) over the year?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1871~1884",
                        "y_data": 76306
                    },
                    {
                        "x_data": "1885~1898",
                        "y_data": 235196
                    },
                    {
                        "x_data": "1899~1912",
                        "y_data": 216476
                    },
                    {
                        "x_data": "1913~1926",
                        "y_data": 3483527
                    },
                    {
                        "x_data": "1927~1940",
                        "y_data": 5260134
                    },
                    {
                        "x_data": "1941~1954",
                        "y_data": 12585780
                    },
                    {
                        "x_data": "1955~1968",
                        "y_data": 15436797
                    },
                    {
                        "x_data": "1969~1982",
                        "y_data": 18760115
                    },
                    {
                        "x_data": "1983~1996",
                        "y_data": 27746666
                    },
                    {
                        "x_data": "1997~2010",
                        "y_data": 32563010
                    },
                    {
                        "x_data": "2011~2014",
                        "y_data": 9550049
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(attendance))"
                }
            }
        }
    },
    {
        "tables_used": [
            "book_club"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "How many books fall into each category, list by the total number from low to high.",
            "Give me a histogram for how many books fall into each category?, and order by the Y in ascending.",
            "Show the total number from each category, and list by the total number in asc please.",
            "Visualize a bar chart for how many books fall into each category?, order by the Y in ascending.",
            "Show all book categories and the number of books in each category, and list by the total number in asc please.",
            "Show all book categories and the number of books in each category with a bar chart, and rank by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gay SF/F",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gay M/SF",
                        "y_data": 5
                    },
                    {
                        "x_data": "Lesb. M/SF",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all the planned delivery dates and bin by weekday in a bar chart, and rank Y in desc order.",
            "Bar chart of the number of planned delivery date from each planned delivery date, display from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Planned_Delivery_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Planned_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, and could you display the average of department id in ascending order?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, sort by the y-axis in ascending.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, sort by the y-axis in ascending.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, could you order by the the average of department id from low to high?",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the hire_date bin hire_date by time, and could you display in asc by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 46.55172413793103
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 51.851851851851855
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "June",
                        "y_data": 82.5
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Timed_Status_of_Things",
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', sort the number of type of thing code in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commen",
                        "y_data": 4
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, find their name and the number of reviews written by them. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Helen",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "\u5361\u53f7\u6c42\u548c\u65e0\u610f\u4e49",
            "What are card ids, customer ids, card types, and card numbers for each customer card?",
            "Bar graph to show sum card number from different card type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 21491532119475148
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 10744938002896200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(card_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player",
            "tryout"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "A bar chart for what are the number of the names of all students who tried out in alphabetical order?",
            "What are the names of all students who tried out in alphabetical order, and count them by a bar chart",
            "A bar chart for finding the number of the name of all students who were in the tryout sorted in alphabetic order.",
            "Find the number of the name of all students who were in the tryout sorted in alphabetic order.",
            "What are the number of the names of all students who tried out in alphabetical order?",
            "Find the name of all students who were in the tryout sorted in alphabetic order, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andrew",
                        "y_data": 2
                    },
                    {
                        "x_data": "Blake",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charles",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "pName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(pName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Give me a bar chart to show the names and revenue of the company that earns the highest revenue in each headquarter city, list in descending by the y axis.",
            "Please tell the names and revenues of the companies with the highest revenues in each headquarter city, I want to display y axis in desc order please.",
            "Create a bar chart showing maximal revenue across name, order in descending by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, show Y-axis from high to low order.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, and could you display from high to low by the Number_Deaths?",
            "For all storms with at least 1 death, compare the number of deaths by name, order by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9 cyclones",
                        "y_data": 71
                    },
                    {
                        "x_data": "Three",
                        "y_data": 52
                    },
                    {
                        "x_data": "Two",
                        "y_data": 7
                    },
                    {
                        "x_data": "Four",
                        "y_data": 7
                    },
                    {
                        "x_data": "Five",
                        "y_data": 3
                    },
                    {
                        "x_data": "Six",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "order_items",
            "products"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "List the name and count of each product in all orders with a pie chart.",
            "List the name and count of each product in all orders. Plot them as pie chart.",
            "For each product, show its name and the number of times it was ordered. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "book",
                        "y_data": 1
                    },
                    {
                        "x_data": "clothes",
                        "y_data": 1
                    },
                    {
                        "x_data": "food",
                        "y_data": 5
                    },
                    {
                        "x_data": "music",
                        "y_data": 5
                    },
                    {
                        "x_data": "phone",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 203
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 204
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 205
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 192
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 201
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 202
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses provided in each year with a group line chart that groups by semester.",
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester.",
            "I want to see trend the total number over year by semester"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001-01-01",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 9,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 3,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 4,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 8,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 7,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 5,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2001-01-01",
                        "y_data": 3,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 5,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 9,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 6,
                        "classify": "Spring"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute headquarter in a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of courses each teacher teaches in a bar chart, show in ascending by the x axis.",
            "What is the number of courses each teacher teaches? Visualize with a bar chart, and list by the names in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Bar chart x axis name y axis how many name, could you rank in asc by the x axis?",
            "Group and count the name attribute for visualizing a bar chart, display in ascending by the Name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 1
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "STUDENT"
        ],
        "db_id": "voter_2",
        "nl_queries": [
            "For each advisor, report the total number of students advised by him or her. Plot them as scatter chart.",
            "Visualize a scatter chart on how many students does each advisor have?",
            "A scatter chart about how many students does each advisor have?",
            "How many students does each advisor have.",
            "Scatter plot to show advisor on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1121,
                        "y_data": 3
                    },
                    {
                        "x_data": 1148,
                        "y_data": 3
                    },
                    {
                        "x_data": 2192,
                        "y_data": 4
                    },
                    {
                        "x_data": 2311,
                        "y_data": 3
                    },
                    {
                        "x_data": 5718,
                        "y_data": 2
                    },
                    {
                        "x_data": 7134,
                        "y_data": 2
                    },
                    {
                        "x_data": 7271,
                        "y_data": 2
                    },
                    {
                        "x_data": 7712,
                        "y_data": 1
                    },
                    {
                        "x_data": 7723,
                        "y_data": 1
                    },
                    {
                        "x_data": 7792,
                        "y_data": 1
                    },
                    {
                        "x_data": 8423,
                        "y_data": 1
                    },
                    {
                        "x_data": 8721,
                        "y_data": 1
                    },
                    {
                        "x_data": 8722,
                        "y_data": 3
                    },
                    {
                        "x_data": 8723,
                        "y_data": 1
                    },
                    {
                        "x_data": 8741,
                        "y_data": 1
                    },
                    {
                        "x_data": 8772,
                        "y_data": 3
                    },
                    {
                        "x_data": 8918,
                        "y_data": 1
                    },
                    {
                        "x_data": 9172,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Advisor"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture",
            "furniture_manufacte)"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Visualize names and market shares of furnitures which no any company is producing in our records by a pie chart.",
            "Please give me a pie chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bench",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Four-poster bed",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Market_Rate"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Compute the number of each type of job ids for employees who make more than the highest-earning employee with title PU_MAN, with a bar chart, and show by the the number of job id in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_MAN",
                        "y_data": 3
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "",
            "Show me a scatter plot of major and the total number for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 50,
                        "y_data": 2
                    },
                    {
                        "x_data": 520,
                        "y_data": 6
                    },
                    {
                        "x_data": 540,
                        "y_data": 2
                    },
                    {
                        "x_data": 550,
                        "y_data": 5
                    },
                    {
                        "x_data": 600,
                        "y_data": 18
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Major"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manager"
        ],
        "db_id": "railway",
        "nl_queries": [
            "A line chart for showing the number of the working years of managers in descending order of their level.",
            "Show the number of the working years of managers in descending order of their level.",
            "Show the working years of managers in descending order of their level, and count them by a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1985~1986",
                        "y_data": 1
                    },
                    {
                        "x_data": "1987~1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991~1992",
                        "y_data": 0
                    },
                    {
                        "x_data": "1993~1994",
                        "y_data": 1
                    },
                    {
                        "x_data": "1995~1996",
                        "y_data": 0
                    },
                    {
                        "x_data": "1997~1998",
                        "y_data": 0
                    },
                    {
                        "x_data": "1999~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2002",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003~2004",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005~2006",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Working_year_starts",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Working_year_starts)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mailshot_customers"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show the outcome code of mailshots along with the number of mailshots in each outcome code in a bar chart.",
            "Show the outcome code of mailshots along with the number of mailshots in each outcome code. Plot them as bar chart.",
            "Show me the total number by outcome code in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "No Response",
                        "y_data": 5
                    },
                    {
                        "x_data": "Order",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "outcome_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show how many installation date from each installation date, list in desc by the Y-axis please.",
            "Bin the installation date into the day of week interval, and then you can draw a bar chart to tell me how many stations each year, and list Y in desc order.",
            "Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis, and count for showing how many stations are installed each year, display by the Y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 2506
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1957
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1694
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1469
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1369
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 964
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "installation_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(installation_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Charges"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List each charge type and its amount Show bar chart, and I want to show X-axis in desc order.",
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount, and could you order names from high to low order?",
            "List each charge type and its amount in a bar chart, order charge_type in desc order.",
            "Give me a bar chart for charge_amount of each charge type, could you list by the bars from high to low?",
            "How much does each charge type costs? List both charge type and amount, and I want to show X-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Health Check",
                        "y_data": 640
                    },
                    {
                        "x_data": "Drugs",
                        "y_data": 322
                    },
                    {
                        "x_data": "Daily Accommodation",
                        "y_data": 98
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "charge_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "charge_amount"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "List the number of documents for each receipt date and bin by year with a line chart, order by the X in ascending.",
            "Show the number of documents for each receipt date and bin by year with a line chart, show in asc by the receipt_date.",
            "I want to see trend of how many receipt date by receipt date, I want to display from low to high by the X.",
            "Give me the trend of how many receipt date by receipt date, and could you show in asc by the receipt_date?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1973~1977",
                        "y_data": 3
                    },
                    {
                        "x_data": "1978~1982",
                        "y_data": 1
                    },
                    {
                        "x_data": "1983~1987",
                        "y_data": 3
                    },
                    {
                        "x_data": "1988~1992",
                        "y_data": 0
                    },
                    {
                        "x_data": "1993~1997",
                        "y_data": 2
                    },
                    {
                        "x_data": "1998~2002",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003~2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008~2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013~2017",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "receipt_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(receipt_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Give me a bar chart, that group by location and count them, rank x axis in ascending order.",
            "Create a bar chart showing how many location across location, sort X from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Heineken Music Hall Amsterdam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam, Heineken Music Hall Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "RAI Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Various locations",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different starting date and group by starting date with a line chart, list by the X from low to high.",
            "How many documents in different starting date? Return a line chart grouping by starting date, and list by the X from low to high.",
            "Plot how many date in location from over date in location from in a line chart, and list by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972-03-31",
                        "y_data": 3
                    },
                    {
                        "x_data": "1985-05-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 2
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "How many flights with price higher than 300 for each destination city? Return a bar chart, display by the x-axis in ascending.",
            "A bar chart showing the number of flights with price higher than 300 for each destination city, show from low to high by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(destination)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A bar chart shows the distribution of Start_from and the average of Shop_ID bin start_from by weekday, list by the Y-axis in asc.",
            "Return a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, sort by the total number in ascending.",
            "Draw a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, and rank in ascending by the y-axis please.",
            "Give me the comparison about the average of Shop_ID over the Start_from bin start_from by weekday by a bar chart, could you order by the y-axis from low to high?",
            "Bar chart x axis start from y axis the average of shop id, and display total number in ascending order.",
            "Visualize a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, display Y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5.5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "actor"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Group and count the durations for each actor with a bar graph, order in descending by the X-axis please.",
            "Bar chart x axis duration y axis how many duration, I want to sort in desc by the bar please.",
            "Calculate the number of actors in each duration of actors using a bar chart, could you list X-axis in desc order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1995, 1996\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994\u2014",
                        "y_data": 2
                    },
                    {
                        "x_data": "1993\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988\u20132008, 2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988, 1992\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1987\u20131991, 1996\u20132009, 2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "1985\u20131992, 1993, 2004\u2014",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Duration",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Duration)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stadium"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me the total number by country in a histogram, and could you display by the x axis in asc?",
            "Draw a bar chart for how many stadiums does each country have?, and could you sort in ascending by the names please?",
            "Show me a bar chart for how many stadiums does each country have?, and show in asc by the Country.",
            "How many stadiums does each country have Show bar chart, and I want to display from low to high by the Country."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Azerbaijan",
                        "y_data": 1
                    },
                    {
                        "x_data": "England",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hungary",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 4
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apple",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 3
                    },
                    {
                        "x_data": "gucci",
                        "y_data": 2
                    },
                    {
                        "x_data": "jcrew",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about Team_ID over the All_Neutral by a bar chart.",
            "Visualize a bar chart about the distribution of All_Neutral and Team_ID .",
            "Give me the comparison about Team_ID over the All_Neutral .",
            "Show me about the distribution of All_Neutral and Team_ID in a bar chart.",
            "Find All_Neutral and Team_ID , and visualize them by a bar chart.",
            "Give me a bar chart for team_id of each all neutral"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 1
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 3
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find Start_from and the amount of Start_from bin start_from by weekday, and visualize them by a bar chart, and list by the how many start from in asc.",
            "Give me the comparison about the amount of Start_from over the Start_from bin start_from by weekday, and list in asc by the y axis.",
            "Show me about the distribution of Start_from and the amount of Start_from bin start_from by weekday in a bar chart, list in asc by the y axis.",
            "Bar chart x axis start from y axis the number of start from, and could you list in asc by the total number?",
            "Return a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday, and list in asc by the y axis.",
            "Visualize a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday, show how many start from in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "For each party, return the name of the party and the number of delegates from that party Plot them as bar chart, and rank in asc by the Y.",
            "Show the name of each party and the corresponding number of delegates from that party with a bar chart, and could you rank by the Y-axis in ascending?",
            "Show the name of each party and the corresponding number of delegates from that party Plot them as bar chart, and list from low to high by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(COUNT(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, a bar chart shows the distribution of name and code , and list in desc by the Y please.",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and code , I want to sort by the Y in desc.",
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and code , and display Code in desc order.",
            "For those products with a price between 60 and 120, find name and code , and visualize them by a bar chart, and list in desc by the Y please.",
            "For those products with a price between 60 and 120, draw a bar chart about the distribution of name and code , I want to order Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course code, list from high to low by the names.",
            "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the instructor's first name and group by course code, and display from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 2,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-362"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each record in schedule, show sum of price for each day in a bar chart, and could you list y-axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "21 May",
                        "y_data": 24
                    },
                    {
                        "x_data": "19 May",
                        "y_data": 15
                    },
                    {
                        "x_data": "2 Aug",
                        "y_data": 12
                    },
                    {
                        "x_data": "20 May",
                        "y_data": 9
                    },
                    {
                        "x_data": "11 July",
                        "y_data": 9
                    },
                    {
                        "x_data": "21 Jun",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "A pie chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?",
            "What are the number of the names of the technicians that are assigned to repair machines with more point values than 70?",
            "What are the names of the technicians that are assigned to repair machines with more point values than 70, and count them by a pie chart",
            "Show names of technicians who are assigned to repair machines with value point more than 70, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a bar chart grouping by course code, list in desc by the total number.",
            "Show the number of courses each instructor taught with a bar chart grouping by course code, and display how many crs code in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    },
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    },
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_CODE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "assignedto",
            "projects",
            "scientists"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, display X-axis from low to high order.",
            "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, I want to rank in ascending by the x axis.",
            "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, I want to rank in ascending by the x axis.",
            "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, could you order names from low to high order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aerodynamics and Gas Mileage",
                        "y_data": 1
                    },
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the sum of capacity of cinemas open for each year, and could you show y axis from high to low order?",
            "Give me a bar chart for total number of capacity of each openning year, order by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1633
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1336
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 368
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 364
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 330
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 305
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route",
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find names of trains that run through stations for the local authority Chiltern, compare the total number of name in a bar graph, and display by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a bar chart for how many people are under 40 for each gender?, and rank from low to high by the the total number .",
            "How many people are under 40 for each gender Plot them as bar chart, list in ascending by the y-axis.",
            "Find the number of people who is under 40 for each gender, and could you order in ascending by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "male",
                        "y_data": 1
                    },
                    {
                        "x_data": "female",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "list"
        ],
        "db_id": "student_1",
        "nl_queries": [
            "For each grade 0 classroom, report the total number of students. Visualize by scatter chart.",
            "For each grade 0 classroom, return the classroom number and the count of students. Show the correlation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 104,
                        "y_data": 4
                    },
                    {
                        "x_data": 105,
                        "y_data": 5
                    },
                    {
                        "x_data": 106,
                        "y_data": 7
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Classroom"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs of the rarest breed in each treatment day with a line chart that groups by date of treatment.",
            "How many dogs of the rarest breed in each treatment day? Draw a line chart that groups by date of treatment."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8th",
                        "y_data": 1
                    },
                    {
                        "x_data": "9th",
                        "y_data": 0
                    },
                    {
                        "x_data": "10th",
                        "y_data": 0
                    },
                    {
                        "x_data": "11th",
                        "y_data": 0
                    },
                    {
                        "x_data": "12th",
                        "y_data": 0
                    },
                    {
                        "x_data": "13th",
                        "y_data": 0
                    },
                    {
                        "x_data": "14th",
                        "y_data": 1
                    },
                    {
                        "x_data": "15th",
                        "y_data": 2
                    },
                    {
                        "x_data": "16th",
                        "y_data": 0
                    },
                    {
                        "x_data": "17th",
                        "y_data": 0
                    },
                    {
                        "x_data": "18th",
                        "y_data": 0
                    },
                    {
                        "x_data": "19th",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "payments"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart, order by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart.",
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abscond or bolster",
                        "y_data": 51
                    },
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 69
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 66
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 60
                    },
                    {
                        "x_data": "Immutable before decorum",
                        "y_data": 63
                    },
                    {
                        "x_data": "Interim but salutary",
                        "y_data": 59
                    },
                    {
                        "x_data": "Mendicant with cryptic",
                        "y_data": 56
                    },
                    {
                        "x_data": "Recluse and defiance",
                        "y_data": 62
                    },
                    {
                        "x_data": "Riddle to exculpate",
                        "y_data": 55
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 59
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Give me the comparison about Height over the Name by a bar chart, and could you rank y-axis in desc order please?",
            "Find Name and Height , and visualize them by a bar chart, and order by the y axis in desc.",
            "A bar chart shows the distribution of Name and Height , and I want to show by the y axis in descending.",
            "Draw a bar chart of name versus height, order by the y axis in desc.",
            "Draw a bar chart about the distribution of Name and Height , and rank y-axis in descending order.",
            "Return a bar chart about the distribution of Name and Height , and show Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Laurent Capet",
                        "y_data": 202
                    },
                    {
                        "x_data": "St\u00e9phane Antiga",
                        "y_data": 200
                    },
                    {
                        "x_data": "Dominique Daquin",
                        "y_data": 197
                    },
                    {
                        "x_data": "Vincent Montm\u00e9at",
                        "y_data": 196
                    },
                    {
                        "x_data": "Guillaume Samica",
                        "y_data": 196
                    },
                    {
                        "x_data": "Frantz Granvorka",
                        "y_data": 195
                    },
                    {
                        "x_data": "Philippe Bar\u00e7a-Cysique",
                        "y_data": 194
                    },
                    {
                        "x_data": "Lo\u00efc De Kergret",
                        "y_data": 193
                    },
                    {
                        "x_data": "Hubert Henno",
                        "y_data": 188
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "Charges"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount, and I want to sort by the Y in asc please.",
            "List each charge type and its amount in a bar chart, and sort in asc by the y axis.",
            "List each charge type and its amount Show bar chart, display by the Y in asc.",
            "Give me a bar chart for charge_amount of each charge type, order Y from low to high order.",
            "How much does each charge type costs? List both charge type and amount, and could you display in ascending by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Daily Accommodation",
                        "y_data": 98
                    },
                    {
                        "x_data": "Drugs",
                        "y_data": 322
                    },
                    {
                        "x_data": "Health Check",
                        "y_data": 640
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "charge_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "charge_amount"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "poker_player",
        "nl_queries": [
            "what are different nationalities of people and the corresponding number of people from each nation?, order from high to low by the y axis.",
            "Draw a bar chart for how many people are there of each nationality?, order from high to low by the y-axis.",
            "What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, and order from high to low by the Y-axis.",
            "Visualize a bar chart for how many people are there of each nationality?, list in descending by the Y please.",
            "How many people are there of each nationality Visualize by bar chart, order Y from high to low order please.",
            "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?, and order Y from high to low order please.",
            "Draw a bar chart of nationality versus the total number, and sort from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Russia",
                        "y_data": 6
                    },
                    {
                        "x_data": "Bulgaria",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show the name of all trains, count the name and show them with a bar chart, and could you list Y from low to high order?",
            "Plot the number of name by grouped by name as a bar graph, could you list Y in ascending order?",
            "Visualize a bar chart, group by name and compute each group's total number, could you show by the the number of name in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parasuram Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Plot the number of county by grouped by county as a bar graph, and list by the y axis in descending.",
            "List the number of counties of all appellations in a bar chart, and list by the Y-axis in descending.",
            "What is the number of counties for all appellations?, and list by the Y-axis in descending.",
            "Return a bar chart about the number of counties for all appellations?, and list by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sonoma",
                        "y_data": 11
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 11
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 8
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 5
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 4
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 3
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 3
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "Contra Costa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "list"
        ],
        "db_id": "student_1",
        "nl_queries": [
            "For each grade, report the correlation between grade and the total number of students in the grade.",
            "For each grade, show me the relationships between grade and the total number of students in the grade.",
            "A scatter plot shows the correlation between grade and the total number of students in the grade.",
            "Scatter plot to show grade on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 16
                    },
                    {
                        "x_data": 1,
                        "y_data": 12
                    },
                    {
                        "x_data": 2,
                        "y_data": 3
                    },
                    {
                        "x_data": 3,
                        "y_data": 6
                    },
                    {
                        "x_data": 4,
                        "y_data": 12
                    },
                    {
                        "x_data": 5,
                        "y_data": 8
                    },
                    {
                        "x_data": 6,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Grade"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show the authors of their total submissions with a bar chart, display from low to high by the y-axis.",
            "Create a bar chart showing the number of author across author, and order total number from low to high order.",
            "Visualize a bar chart for how many authors submit to the workshop, order total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Author)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show names of technicians and the number of machines they are assigned to repair Visualize by bar chart, order by the bar in ascending.",
            "What are the names of the technicians and how many machines are they assigned to repair, and could you order bar in ascending order?",
            "Show names of technicians and the number of machines they are assigned to repair with a bar chart, and I want to list bar from low to high order.",
            "Give me a histogram for what are the names of the technicians and how many machines are they assigned to repair?, rank by the Name from low to high.",
            "Display a bar chart for what are the names of the technicians and how many machines are they assigned to repair?, and could you rank in ascending by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Show the average age of singers for each country with a bar chart.",
            "What is the average age of singers for each country? Visualize with a bar chart.",
            "Show the average of age from each country"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 34.5
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 52
                    },
                    {
                        "x_data": "United States",
                        "y_data": 32
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the name and capacity of products with price greater than 700 (in USD). Visualize by pie chart.",
            "Pie. which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities with a pie chart.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vimto",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sprite Lemo",
                        "y_data": 8
                    },
                    {
                        "x_data": "Dr Pepper",
                        "y_data": 1
                    },
                    {
                        "x_data": "Diet Pepsi",
                        "y_data": 9
                    },
                    {
                        "x_data": "Diet Mountain Dew",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "capacity"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Plot the average of shop id by grouped by is full time as a bar graph, and I want to rank from high to low by the x-axis.",
            "Find Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, and visualize them by a bar chart, and sort in desc by the Is_full_time.",
            "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart, list in descending by the X.",
            "Return a bar chart about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, could you show X-axis in descending order?",
            "Show me about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time in a bar chart, I want to rank from high to low by the x-axis.",
            "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time, list by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 3.4
                    },
                    {
                        "x_data": "F",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "For all artist names who are not from the United States, show the total number of each year with a bar chart, could you order by the y axis in descending?",
            "For all artist names who are not from the United States, show the total number of each year, and rank y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1998",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994",
                        "y_data": 1
                    },
                    {
                        "x_data": "1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1996",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year_Join",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year_Join)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What are the number of the names of products with price at most 200?, and I want to show by the X in desc.",
            "What are the names of products with price at most 200, and count them by a bar chart, and display in desc by the Name please.",
            "A bar chart for what are the number of the names of products with price at most 200?, and list by the bars in descending please.",
            "Select the name of the products with a price less than or equal to $200, and count them by a bar chart, and could you display Name from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "A bar chart showing the number of debates in each venue for those on the affirmative side, I want to list X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the employee's last name and their department's id using a bar chart, display by the DEPARTMENT_ID in descending.",
            "Bar graph to show department_id from different last name, I want to sort in descending by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 100
                    },
                    {
                        "x_data": "King",
                        "y_data": 90
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 80
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 60
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 50
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES",
            "car_makers"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Draw a bar chart for how many car makers are there in each continents? List the continent name and the count.",
            "how many car makers are there in each continents? List the continent name and the count.",
            "How many car makers are there in each continents? List the continent name and the count by a bar chart.",
            "How many car makers are there in each continents? List the continent name and the count. Visualize by bar chart.",
            "A bar chart about what is the name of each continent and how many car makers are there in each one?",
            "Display a bar chart for what is the name of each continent and how many car makers are there in each one?",
            "What is the name of each continent and how many car makers are there in each one. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "america",
                        "y_data": 4
                    },
                    {
                        "x_data": "asia",
                        "y_data": 7
                    },
                    {
                        "x_data": "europe",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ref_product_categories",
            "products"
        ],
        "db_id": "products_gen_characteristics",
        "nl_queries": [
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, I want to display by the names in descending please.",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, could you order by the names in descending?",
            "Find the number of the category descriptions of the products whose descriptions include letter 't', could you order by the names in descending?",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, and display from high to low by the bars.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, and I want to display by the names in descending please.",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and I want to display by the bar from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Spices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Seeds",
                        "y_data": 3
                    },
                    {
                        "x_data": "Herbs",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_category_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Compare the total number of different ranks using a bar graph.",
            "Show me a bar chart comparing the total number of captains in each rank.",
            "Bar graph to show the number of rank from different rank"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Rank)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show maximal lat from each city, and could you list by the total number in asc?",
            "For each city, what is the highest latitude for its stations Visualize by bar chart, and could you display total number from low to high order please?",
            "For each city, return the highest latitude among its stations Show bar chart, could you list by the total number in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "San Jose",
                        "y_data": 37.352601
                    },
                    {
                        "x_data": "Mountain View",
                        "y_data": 37.40694000000001
                    },
                    {
                        "x_data": "Palo Alto",
                        "y_data": 37.448598
                    },
                    {
                        "x_data": "Redwood City",
                        "y_data": 37.491269
                    },
                    {
                        "x_data": "San Francisco",
                        "y_data": 37.80477
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(lat)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, sort bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Bar chart x axis document description y axis how many document description, and display in ascending by the total number.",
            "List the number of documents for each document description in a bar chart, display the number of document description in asc order.",
            "How many documents for each document description? Show me a bar chart, list total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 1
                    },
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "f",
                        "y_data": 1
                    },
                    {
                        "x_data": "k",
                        "y_data": 1
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "z",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 2
                    },
                    {
                        "x_data": "w",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Bar graph to show minimal room count from different apt type code, rank names from high to low order.",
            "Return a bar chart showing the minimum room count of apartments in different type, and I want to show by the bars in descending.",
            "Show the minimum room count of apartments in different type with a bar chart, I want to order by the X-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Studio",
                        "y_data": 6
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Duplex",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(room_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each party and the corresponding number of delegates from that party Plot them as bar chart, and I want to list by the X in descending.",
            "For each party, return the name of the party and the number of delegates from that party Plot them as bar chart, rank by the bars in desc.",
            "Show the name of each party and the corresponding number of delegates from that party with a bar chart, I want to order in desc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(COUNT(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of salary bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of salary over the hire_date bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 5740
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6286.666666666667
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 7775
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 6762.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6320
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6493.333333333333
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5746.666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, and could you rank in asc by the Y-axis?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, could you rank in asc by the Y-axis?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, rank by the total number in asc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and display y axis in ascending order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, and could you rank in asc by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the names and average salaries of all departments whose average salary is greater than 42000.",
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?",
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?",
            "What are the names and average salaries for departments with average salary higher than 42000. Plot them as bar chart.",
            "Bar chart of mean salary from each dept name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 48716.5925
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 79070.08
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 77098.198
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 61287.25
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 98133.47
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 96346.5675
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 74162.73999999999
                    },
                    {
                        "x_data": "English",
                        "y_data": 72089.04999999999
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 105311.38
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 99382.59
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 57421.85666666668
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 84097.4375
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 79813.02
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 114576.9
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 100053.07333333332
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 61143.05
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 67795.44166666668
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "actor",
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart.",
            "Show names of musicals and the number of actors who have appeared in the musicals. Show bar chart.",
            "how many actors have appeared in each musical?",
            "Return a histogram on how many actors have appeared in each musical?",
            "How many actors have appeared in each musical. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Phantom of the Opera",
                        "y_data": 2
                    },
                    {
                        "x_data": "Les Mis\u00e9rables",
                        "y_data": 2
                    },
                    {
                        "x_data": "West Side Story",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Book of Mormon",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "What about the average amounts of payments by each method code? You can give me a bar chart.",
            "Please use a bar chart to show the average amount of payment by each payment method code.",
            "Bar graph to show the average of amount payment from different payment method code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American Express",
                        "y_data": 177130
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 77608.33333333333
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 361695
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 198678.25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year, show by the Y from low to high.",
            "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year, show from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Summer"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Compare the number of winery of the wines whose price is bigger than 100, I want to show by the y axis from high to low.",
            "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and order from high to low by the Y-axis.",
            "List the number of winery of the wines whose price is bigger than 100 in a bar chart, could you display in descending by the total number please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 4
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the names of people and the number of times they have been on the affirmative side of debates by a bar chart, and sort from low to high by the Y-axis please.",
            "Show the names of people and the number of times they have been on the affirmative side of debates, could you show by the Y in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player",
            "team"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\", list Years_Played from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Return a bar chart about the number of companies for each industry.",
            "Bar chart x axis industry y axis the number of industry"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Automotive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 7
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 8
                    },
                    {
                        "x_data": "Retailing",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Industry",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer",
            "record",
            "event",
            "stadium"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, I want to show by the y-axis from high to low.",
            "A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, could you list by the total number from high to low?",
            "Find the number of the names of stadiums that some Australian swimmers have been to, I want to show by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nou Mestalla",
                        "y_data": 2
                    },
                    {
                        "x_data": "Yubileyniy Stadium",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gazprom Arena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baku Olympic Stadium",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL. Could you plot the result with a bar chart?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Cameron",
                        "y_data": 5
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 3
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 4
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "What are the ids and details of events that have more than one participants Visualize by bar chart, order by the bar in ascending.",
            "Return a bar chart on what are the ids and details of events that have more than one participants?, could you order in ascending by the X?",
            "Draw a bar chart for what are the ids and details of events that have more than one participants?, and sort by the X in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 23.333333333333332
                    },
                    {
                        "x_data": "Success",
                        "y_data": 41.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Event_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Plot sum capacity over openning year in a line chart, I want to display by the X in descending.",
            "What is the sum of capacity of cinemas open for each year? Return a line chart, could you show in descending by the X-axis?",
            "What is the sum of capacity of cinemas open for each year? Return a line chart, could you sort by the X-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015",
                        "y_data": 364
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2013",
                        "y_data": 330
                    },
                    {
                        "x_data": "2012",
                        "y_data": 368
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1336
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1633
                    },
                    {
                        "x_data": "2009",
                        "y_data": 305
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Show how many country from each country, and display total number from high to low order.",
            "Give me a bar chart about the number of countries in the artist table, and list total number in descending order.",
            "Compare all countries with a bar chart, display Y-axis in desc order.",
            "What is the number of countries in the artist table?, and I want to rank how many country in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 5
                    },
                    {
                        "x_data": "Zimbabwe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fiji",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses provided in each year with a line chart.",
            "How many courses are provided in each year? Visualize with a line chart.",
            "Plot year by sum count(*) as a trend line"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001",
                        "y_data": 5
                    },
                    {
                        "x_data": "2002",
                        "y_data": 13
                    },
                    {
                        "x_data": "2003",
                        "y_data": 12
                    },
                    {
                        "x_data": "2004",
                        "y_data": 7
                    },
                    {
                        "x_data": "2005",
                        "y_data": 8
                    },
                    {
                        "x_data": "2006",
                        "y_data": 13
                    },
                    {
                        "x_data": "2007",
                        "y_data": 12
                    },
                    {
                        "x_data": "2008",
                        "y_data": 10
                    },
                    {
                        "x_data": "2009",
                        "y_data": 9
                    },
                    {
                        "x_data": "2010",
                        "y_data": 11
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Games in a scatter chart.",
            "Return a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Games.",
            "What is the relationship between ACC_Percent and All_Games_Percent , and group by attribute All_Games?",
            "Draw a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Games.",
            "Visualize a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Games.",
            "Draw a scatterplot of acc percent vs all_games_percent where acc percent is on the x-axis and points are colored by All_Games"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.563,
                        "y_data": 0.6,
                        "classify": "21\u201314"
                    },
                    {
                        "x_data": 0.625,
                        "y_data": 0.706,
                        "classify": "24\u201310"
                    },
                    {
                        "x_data": 0.813,
                        "y_data": 0.8240000000000001,
                        "classify": "28\u20136"
                    },
                    {
                        "x_data": 0.875,
                        "y_data": 0.946,
                        "classify": "35\u20132"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' by a bar chart, and rank from high to low by the mean num employees please.",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' Visualize by bar chart, list from high to low by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 115897
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Num_Employees)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total number of students in each department. Show bar chart.",
            "Visualize a bar chart for how many students are in each department?",
            "how many students are in each department?",
            "How many students are in each department. Plot them as bar chart.",
            "Give me a bar chart for the total number of each dept name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 99
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 106
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 92
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 120
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 108
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 86
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 98
                    },
                    {
                        "x_data": "English",
                        "y_data": 95
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 97
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 92
                    },
                    {
                        "x_data": "History",
                        "y_data": 117
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 119
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 85
                    },
                    {
                        "x_data": "Math",
                        "y_data": 91
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 105
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 96
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 109
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 85
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?, and could you rank by the X-axis from high to low?",
            "Give a bar chart showing how many shops in each carrier, I want to show by the bars from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vodafone AU",
                        "y_data": 5
                    },
                    {
                        "x_data": "Bell Mobility",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Carrier)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy, sort X-axis in ascending order.",
            "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72, show by the names in asc.",
            "Draw a bar chart of continent versus mean lifeexpectancy, order by the bars in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Africa",
                        "y_data": 52.57192982456139
                    },
                    {
                        "x_data": "Asia",
                        "y_data": 67.44117647058825
                    },
                    {
                        "x_data": "Oceania",
                        "y_data": 69.715
                    },
                    {
                        "x_data": "South America",
                        "y_data": 70.94615384615386
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(LifeExpectancy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hall_of_fame"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "bin the yearid into the day of the week interval and count them for visualizing a bar chart.",
            "Bar graph to show how many yearid from different yearid"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 10
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 11
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 11
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 12
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 11
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 12
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "yearid",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(yearid)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a scatter chart about the correlation between Team_ID and School_ID , and group by attribute ACC_Home.",
            "A scatter chart shows the correlation between Team_ID and School_ID , and group by attribute ACC_Home.",
            "Return a scatter chart about the correlation between Team_ID and School_ID , and group by attribute ACC_Home.",
            "Visualize the relationship between Team_ID and School_ID , and group by attribute ACC_Home.",
            "Visualize a scatter chart about the correlation between Team_ID and School_ID , and group by attribute ACC_Home.",
            "Scatterplot of school_id vs team id by ACC_Home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 5,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "List department id and their salaries with a scatter plot.",
            "Visualize a scatter to show the department id and the corresponding salaries."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 90
                    },
                    {
                        "x_data": 9000,
                        "y_data": 60
                    },
                    {
                        "x_data": 12000,
                        "y_data": 100
                    },
                    {
                        "x_data": 11000,
                        "y_data": 30
                    },
                    {
                        "x_data": 8200,
                        "y_data": 50
                    },
                    {
                        "x_data": 14000,
                        "y_data": 80
                    },
                    {
                        "x_data": 4400,
                        "y_data": 10
                    },
                    {
                        "x_data": 13000,
                        "y_data": 20
                    },
                    {
                        "x_data": 6500,
                        "y_data": 40
                    },
                    {
                        "x_data": 10000,
                        "y_data": 70
                    },
                    {
                        "x_data": 12000,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "What is the number of platforms for each location? Show the proportion with a pie chart.",
            "Give me a pie chart about the proportion of the number of platforms in different locations.",
            "Compute the total sum number of platforms across location as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "London",
                        "y_data": 140
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Number_of_Platforms)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Bar chart of how many date of completion from each date of completion, I want to sort by the y axis in ascending please.",
            "How many completion students in each day? Return a bar chart binning date of completion by weekday, and I want to sort y-axis in asc order.",
            "List the number of completion students in each day and bin date of completion by weekday with a bar chart, rank in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the average of price supplied by supplier id 3 for different product type code in a bar chart, rank y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 817
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, visualize a bar chart to show each employee's salary by the last name, and could you show in desc by the y-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gietz",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Kaufling",
                        "y_data": 7900
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 7400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Show the average age of members for each coffee shop address in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bridgeport",
                        "y_data": 42
                    },
                    {
                        "x_data": "Cheshire",
                        "y_data": 41.5
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 38
                    },
                    {
                        "x_data": "Waterbury",
                        "y_data": 49.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "What are the ids and names of the medicine that can interact with two or more enzymes Visualize by bar chart, show by the x-axis in asc.",
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?, and rank by the bars in ascending.",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, could you order by the X in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aripiprazole",
                        "y_data": 2
                    },
                    {
                        "x_data": "Asenapine",
                        "y_data": 3
                    },
                    {
                        "x_data": "Iloperidone",
                        "y_data": 8
                    },
                    {
                        "x_data": "Ziprasidone",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees in the same department and with the first name Clara, please give me a bar chart that bins hire date into the Month interval, and count how many employees in each month, and rank y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "invoices"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "Show me a bar chart for how many invoices were billed from each state?, could you sort Y-axis in asc order?",
            "List the number of invoices from the US, grouped by state Visualize by bar chart, sort in asc by the total number.",
            "List the number of invoices from the US, grouped by state by a bar chart, show by the Y-axis from low to high.",
            "How many invoices were billed from each state Plot them as bar chart, and order by the Y-axis from low to high.",
            "Return a histogram on how many invoices were billed from each state?, and display total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 7
                    },
                    {
                        "x_data": "FL",
                        "y_data": 7
                    },
                    {
                        "x_data": "IL",
                        "y_data": 7
                    },
                    {
                        "x_data": "MA",
                        "y_data": 7
                    },
                    {
                        "x_data": "NV",
                        "y_data": 7
                    },
                    {
                        "x_data": "NY",
                        "y_data": 7
                    },
                    {
                        "x_data": "TX",
                        "y_data": 7
                    },
                    {
                        "x_data": "UT",
                        "y_data": 7
                    },
                    {
                        "x_data": "WA",
                        "y_data": 7
                    },
                    {
                        "x_data": "WI",
                        "y_data": 7
                    },
                    {
                        "x_data": "CA",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "billing_state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Accounts"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Give me a bar chart showing the number of customers who has an account for each customer last name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Effertz",
                        "y_data": 2
                    },
                    {
                        "x_data": "Huels",
                        "y_data": 1
                    },
                    {
                        "x_data": "Langworth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lind",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rath",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schinner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turcotte",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wiza",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name by a bar chart, and could you sort by the mean code in descending please?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, and list Y in descending order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and I want to list Y in desc order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, and display from high to low by the y-axis please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, sort in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "club",
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "For the names and the players of clubs, count the names by names in a bar chart, list from high to low by the x-axis.",
            "For all players, show the number of different club names they come from, and rank by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IFG",
                        "y_data": 1
                    },
                    {
                        "x_data": "HGS2",
                        "y_data": 2
                    },
                    {
                        "x_data": "BK Slide",
                        "y_data": 6
                    },
                    {
                        "x_data": "ASC",
                        "y_data": 4
                    },
                    {
                        "x_data": "AIB",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted in a bar chart, and rank x-axis in descending order please.",
            "Return a bar chart on how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, and show in descending by the X.",
            "Give me a histogram for how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, and list by the bar in desc.",
            "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted Plot them as bar chart, and could you list names in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rodger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oren",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kadin",
                        "y_data": 4
                    },
                    {
                        "x_data": "Edmond",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cyrus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Christophe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Berneice",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "staff_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a pie chart",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a pie chart",
            "A pie chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Korea",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Paragraph_Text)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Paragraph_Text"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber",
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "What is the number of climbers for each mountain? Show me a bar chart, order bar in descending order please.",
            "Show the number of climbers for each mountain in a bar chart, and sort Name in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mount Kenya (Lenana)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mount Kenya (Batian)",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mawenzi (Hans Meyer Pk)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kibo (Uhuru Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Duwoni / Mt Speke (Vittorio Emanuele Pk)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, and I want to order in ascending by the Y.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, show in ascending by the y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, list y-axis in ascending order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, sort y-axis in ascending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, and I want to order in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2107
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2265
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2280
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2295
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2325
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2440
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2456
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "payments"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart, and show X from high to low order.",
            "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart, and display in descending by the payment_date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-23",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-17",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-03",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "Please show the number of films for each type in a bar chart, could you sort names from high to low order?",
            "How many films for each type? Return a bar chart, show in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mass suicide murder",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mass suicide",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mass human sacrifice",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Visualize a line chart that bins the open date into the Year interval and counts them, I want to rank in ascending by the x-axis please.",
            "Please show the trend of the number of the church by open date (bin into the year) using a line chart, and I want to rank x axis from low to high order.",
            "I want to see trend of the number of open date by open date, and list by the X-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1830",
                        "y_data": 1
                    },
                    {
                        "x_data": "1831",
                        "y_data": 1
                    },
                    {
                        "x_data": "1832",
                        "y_data": 1
                    },
                    {
                        "x_data": "1833",
                        "y_data": 0
                    },
                    {
                        "x_data": "1834",
                        "y_data": 0
                    },
                    {
                        "x_data": "1835",
                        "y_data": 0
                    },
                    {
                        "x_data": "1836",
                        "y_data": 1
                    },
                    {
                        "x_data": "1837",
                        "y_data": 1
                    },
                    {
                        "x_data": "1838",
                        "y_data": 0
                    },
                    {
                        "x_data": "1839",
                        "y_data": 1
                    },
                    {
                        "x_data": "1840",
                        "y_data": 1
                    },
                    {
                        "x_data": "1841",
                        "y_data": 0
                    },
                    {
                        "x_data": "1842",
                        "y_data": 1
                    },
                    {
                        "x_data": "1843",
                        "y_data": 0
                    },
                    {
                        "x_data": "1844",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give me a bar chart showing the number of products supplied by supplier id 3 for different product type code, display by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 1
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, list by the Y from low to high.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, rank from low to high by the Y-axis.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, order in asc by the y-axis please.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and display from low to high by the y axis please.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, and could you list in asc by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 203
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 610
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4935
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the dog name and weight of the dogs who have been abandoned in a bar chart.",
            "What is the weight of each dog that was abandoned? Show in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kacey",
                        "y_data": 7.57
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 4.36
                    },
                    {
                        "x_data": "Evangeline",
                        "y_data": 4.01
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the average age for students with different sex in a pie chart.",
            "What is the average age for each gender of student? Return a pie chart.",
            "Compute the total mean age across sex as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 19.7
                    },
                    {
                        "x_data": "M",
                        "y_data": 19.5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a scatter chart about the correlation between salary and manager_id .",
            "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between salary and manager_id .",
            "For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between salary and manager_id .",
            "For all employees who have the letters D or S in their first name, show me about the correlation between salary and manager_id in a scatter chart.",
            "For all employees who have the letters D or S in their first name, a scatter chart shows the correlation between salary and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 0
                    },
                    {
                        "x_data": 12000,
                        "y_data": 101
                    },
                    {
                        "x_data": 11500,
                        "y_data": 148
                    },
                    {
                        "x_data": 11000,
                        "y_data": 100
                    },
                    {
                        "x_data": 11000,
                        "y_data": 100
                    },
                    {
                        "x_data": 10000,
                        "y_data": 148
                    },
                    {
                        "x_data": 9500,
                        "y_data": 145
                    },
                    {
                        "x_data": 9500,
                        "y_data": 147
                    },
                    {
                        "x_data": 9000,
                        "y_data": 102
                    },
                    {
                        "x_data": 9000,
                        "y_data": 108
                    },
                    {
                        "x_data": 8800,
                        "y_data": 149
                    },
                    {
                        "x_data": 8200,
                        "y_data": 100
                    },
                    {
                        "x_data": 8000,
                        "y_data": 145
                    },
                    {
                        "x_data": 8000,
                        "y_data": 146
                    },
                    {
                        "x_data": 7800,
                        "y_data": 108
                    },
                    {
                        "x_data": 7700,
                        "y_data": 108
                    },
                    {
                        "x_data": 7500,
                        "y_data": 146
                    },
                    {
                        "x_data": 7000,
                        "y_data": 146
                    },
                    {
                        "x_data": 6900,
                        "y_data": 108
                    },
                    {
                        "x_data": 6800,
                        "y_data": 147
                    },
                    {
                        "x_data": 6500,
                        "y_data": 100
                    },
                    {
                        "x_data": 6500,
                        "y_data": 101
                    },
                    {
                        "x_data": 6400,
                        "y_data": 147
                    },
                    {
                        "x_data": 6200,
                        "y_data": 149
                    },
                    {
                        "x_data": 6100,
                        "y_data": 148
                    },
                    {
                        "x_data": 4800,
                        "y_data": 103
                    },
                    {
                        "x_data": 4200,
                        "y_data": 103
                    },
                    {
                        "x_data": 4200,
                        "y_data": 121
                    },
                    {
                        "x_data": 4100,
                        "y_data": 121
                    },
                    {
                        "x_data": 4000,
                        "y_data": 123
                    },
                    {
                        "x_data": 3600,
                        "y_data": 123
                    },
                    {
                        "x_data": 3300,
                        "y_data": 122
                    },
                    {
                        "x_data": 3200,
                        "y_data": 123
                    },
                    {
                        "x_data": 3200,
                        "y_data": 120
                    },
                    {
                        "x_data": 3200,
                        "y_data": 123
                    },
                    {
                        "x_data": 3100,
                        "y_data": 114
                    },
                    {
                        "x_data": 3100,
                        "y_data": 124
                    },
                    {
                        "x_data": 2900,
                        "y_data": 114
                    },
                    {
                        "x_data": 2800,
                        "y_data": 114
                    },
                    {
                        "x_data": 2800,
                        "y_data": 120
                    },
                    {
                        "x_data": 2600,
                        "y_data": 124
                    },
                    {
                        "x_data": 2600,
                        "y_data": 124
                    },
                    {
                        "x_data": 2600,
                        "y_data": 124
                    },
                    {
                        "x_data": 2500,
                        "y_data": 121
                    },
                    {
                        "x_data": 2500,
                        "y_data": 123
                    },
                    {
                        "x_data": 2500,
                        "y_data": 122
                    },
                    {
                        "x_data": 2400,
                        "y_data": 120
                    },
                    {
                        "x_data": 2200,
                        "y_data": 120
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Tell me how many cinemas open for each year in a bar chart.",
            "Bar chart of how many openning year from each openning year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Openning_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Show the different countries and the number of members from each with a bar chart, list Y in desc order.",
            "Show the different countries and the number of members from each Visualize by bar chart, list by the total number in descending.",
            "Plot the total number by grouped by country as a bar graph, and display y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 6
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "A bar chart showing the number of tourist attractions for each attraction name, show bars in ascending order.",
            "How many tourist attractions for each attraction name? Visualize by a bar chart, could you show X in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "UK gallery",
                        "y_data": 1
                    },
                    {
                        "x_data": "US museum",
                        "y_data": 4
                    },
                    {
                        "x_data": "exploration trial",
                        "y_data": 4
                    },
                    {
                        "x_data": "flying elephant",
                        "y_data": 1
                    },
                    {
                        "x_data": "fun games",
                        "y_data": 2
                    },
                    {
                        "x_data": "fun shops",
                        "y_data": 1
                    },
                    {
                        "x_data": "history gallery",
                        "y_data": 1
                    },
                    {
                        "x_data": "jungle cruise",
                        "y_data": 3
                    },
                    {
                        "x_data": "parking",
                        "y_data": 2
                    },
                    {
                        "x_data": "presidents hall",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What are the allergy types and how many allergies correspond to each one, and sort names in desc order.",
            "what are the allergy types and how many allergies correspond to each one?, and order by the x axis from high to low.",
            "Return a bar chart on what are the allergy types and how many allergies correspond to each one?, and rank X-axis from high to low order.",
            "Show all allergy types and the number of allergies in each type Plot them as bar chart, show by the x-axis in desc.",
            "Show all allergy types and the number of allergies in each type in a bar chart, I want to order by the bars in descending.",
            "Bar graph to show the total number from different allergytype, and order by the x axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "food",
                        "y_data": 7
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "animal",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Bar chart x axis location y axis sum total passengers, and sort by the total number in desc.",
            "Visualize a bar chart showing each location's total number of passengers, show by the y-axis from high to low.",
            "Show the total number of passengers of each location in a bar chart, and sort in desc by the total number of total passengers."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London",
                        "y_data": 498.50700000000006
                    },
                    {
                        "x_data": "Birmingham",
                        "y_data": 36.330999999999996
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 29.658
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(total_passengers)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Just give me a pie chart that X is the details of the organization and the Y-axis is the number of things they own.",
            "Show the number of items by the details of the organization that owns it using a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 10
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Show the number of names of phones in a bar chart, and could you show the number of name in descending order?",
            "I want to compare the number of the names of phones by a bar chart, could you rank by the the number of name in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone X",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show names of technicians who are assigned to repair machines with value point more than 70, and count them by a bar chart, could you order in asc by the bars?",
            "What are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, sort by the x-axis from low to high.",
            "What are the names of the technicians that are assigned to repair machines with more point values than 70, and count them by a bar chart, and sort in ascending by the x-axis.",
            "A bar chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, list in asc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie that the student with first name Lisa has? Draw a bar chart, and could you list by the x-axis in ascending?",
            "What is the number of each allergie the girl named Lisa has? Plot them as bar chart, could you list by the x-axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anchovies",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Allergy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "How many faculty members do we have for each rank and gender? Plot them as bar chart, and list from low to high by the names.",
            "Show all the ranks and the number of male and female faculty for each rank in a bar chart, and I want to rank X in asc order please.",
            "Stacked bar chart of the total number for with each Sex in each rank, and show names from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 7,
                        "classify": "M"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 12,
                        "classify": "M"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 5,
                        "classify": "M"
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27,
                        "classify": "M"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_player",
        "nl_queries": [
            "For each denomination, return the denomination and the count of schools with that denomination. Visualize by bar chart.",
            "Create a bar chart showing the total number across denomination"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anglican",
                        "y_data": 3
                    },
                    {
                        "x_data": "Catholic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Uniting Church",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Denomination",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Compare the average age of drivers from the same home city with a bar chart, display bars in ascending order please.",
            "Show the average age of drivers from the same home city using a bar graph, and show X in asc order please.",
            "Plot the average of age by grouped by home city as a bar graph, and show X in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bethel",
                        "y_data": 30
                    },
                    {
                        "x_data": "Coventry",
                        "y_data": 35
                    },
                    {
                        "x_data": "East Hartford",
                        "y_data": 37
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 43.5
                    },
                    {
                        "x_data": "Manchester",
                        "y_data": 52
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_city",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize the relationship between Team_ID and All_Games_Percent , and group by attribute ACC_Home.",
            "Draw a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute ACC_Home.",
            "A scatter chart shows the correlation between Team_ID and All_Games_Percent , and group by attribute ACC_Home.",
            "Show me about the correlation between Team_ID and All_Games_Percent , and group by attribute ACC_Home in a scatter chart.",
            "Return a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute ACC_Home.",
            "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by ACC_Home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.6,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.706,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Bar chart of the total number from each headquarters, order in asc by the Headquarters.",
            "List all headquarters and the number of companies in each headquarter with a bar chart, show from low to high by the Headquarters.",
            "For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and rank in asc by the x axis please.",
            "List all headquarters and the number of companies in each headquarter, and order bar in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show different teams of technicians and the number of technicians in each team with a bar chart.",
            "Show different teams of technicians and the number of technicians in each team.",
            "For each team, how many technicians are there.",
            "Create a bar chart showing the total number across team"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CHC",
                        "y_data": 1
                    },
                    {
                        "x_data": "CLE",
                        "y_data": 4
                    },
                    {
                        "x_data": "CWS",
                        "y_data": 2
                    },
                    {
                        "x_data": "NYY",
                        "y_data": 2
                    },
                    {
                        "x_data": "PHA",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the booking end dates of the apartments with type code \"Duplex\"? Bin the year into weekday interval with a bar chart.",
            "Return the booking end dates for the apartments that have type code \"Duplex\" and bin the year into weekday interval with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show each gender code and the corresponding count of guests sorted by the count in descending order by a bar chart.",
            "Show each gender code and the corresponding count of guests sorted by the count in descending order. Show bar chart.",
            "Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts in a bar chart.",
            "Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Female",
                        "y_data": 9
                    },
                    {
                        "x_data": "Male",
                        "y_data": 3
                    },
                    {
                        "x_data": "Unknown",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Draw a bar chart of asset make versus the number of asset make, and display in asc by the X.",
            "Show the number of assets and group by asset make in a bar chart, and display by the asset_make in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CN",
                        "y_data": 2
                    },
                    {
                        "x_data": "DE",
                        "y_data": 2
                    },
                    {
                        "x_data": "FR",
                        "y_data": 2
                    },
                    {
                        "x_data": "GB",
                        "y_data": 1
                    },
                    {
                        "x_data": "IE",
                        "y_data": 1
                    },
                    {
                        "x_data": "IN",
                        "y_data": 2
                    },
                    {
                        "x_data": "IT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "RU",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "asset_make",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(asset_make)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manager"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show the number of the countries that have managers of age above 50 or below 46.",
            "Show the countries that have managers of age above 50 or below 46, and count them by a pie chart",
            "A pie chart for showing the number of the countries that have managers of age above 50 or below 46."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "England",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "school_bus",
            "school"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the type of school and the number of buses for each type in a bar chart.",
            "Show the type of school and the number of buses for each type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private",
                        "y_data": 3
                    },
                    {
                        "x_data": "Public",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products",
            "Products_in_Events"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Show the names of products and the number of events they are in Visualize by bar chart, and I want to sort by the total number in asc.",
            "Show the names of products and the number of events they are in by a bar chart, and display Y in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Conference Equipments",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trading Policy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trading Policy B",
                        "y_data": 1
                    },
                    {
                        "x_data": "Men suits",
                        "y_data": 2
                    },
                    {
                        "x_data": "Special Dinning",
                        "y_data": 4
                    },
                    {
                        "x_data": "TV Equipments",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of teachers of each course with a bar chart.",
            "Return a bar chart showing the number of teachers of each course."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bible",
                        "y_data": 1
                    },
                    {
                        "x_data": "History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Math",
                        "y_data": 2
                    },
                    {
                        "x_data": "Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Science",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Course",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Course)"
                }
            }
        }
    },
    {
        "tables_used": [
            "files"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "For each file format, return the number of artists who released songs in that format. Show bar chart.",
            "how many songs were released for each format?",
            "A bar chart about how many songs were released for each format?",
            "How many songs were released for each format. Show bar chart.",
            "Bar graph to show the total number from different formats"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "mp3",
                        "y_data": 2
                    },
                    {
                        "x_data": "mp4",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "formats",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of founder over the founder , and group by attribute founder by a bar chart, display in ascending by the Y.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, and order Y-axis in ascending order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, and order Y-axis in ascending order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the amount of founder , and group by attribute founder in a bar chart, and sort by the total number in ascending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, and order Y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 1
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 2
                    },
                    {
                        "x_data": "James",
                        "y_data": 3
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Founder)"
                }
            }
        }
    },
    {
        "tables_used": [
            "gas_station"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the number of gas stations for each manager in a bar chart.",
            "How many gas stations dors each manager have? Plot a bar chart.",
            "Draw a bar chart of manager name versus how many manager name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BrianWingrave",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bryan Taylor",
                        "y_data": 1
                    },
                    {
                        "x_data": "BryanDenman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Colin Denman",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jon Rowe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luke Rowe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Cope Derek Marloe",
                        "y_data": 1
                    },
                    {
                        "x_data": "SimonMarloe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Whit",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Bristow",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Manager_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Manager_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "What is the proportion of each customer's move in date? Show me the bar chart, sort X from low to high order please.",
            "Please use a bar chart to compare the number of customers of each customer's move in date, and order by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    },
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and salary , and order by the X in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and salary , and order by the X in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and salary in a bar chart, and sort x axis from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and salary , and visualize them by a bar chart, sort by the bar from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the job_id , and order by the X in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 7000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "HOST"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "A bar chart about how many hosts does each nationality have? List the nationality and the count, show in descending by the y axis please.",
            "How many hosts does each nationality have? List the nationality and the count Visualize by bar chart, order in descending by the Y-axis please.",
            "Bar chart x axis nationality y axis the total number, sort in descending by the total number please.",
            "Show different nationalities along with the number of hosts of each nationality Visualize by bar chart, and display from high to low by the Y.",
            "How many hosts does each nationality have? List the nationality and the count with a bar chart, display in descending by the Y.",
            "Return a histogram on how many hosts does each nationality have? List the nationality and the count, could you list in desc by the y axis?",
            "Show different nationalities along with the number of hosts of each nationality in a bar chart, and display y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 8
                    },
                    {
                        "x_data": "Hungary",
                        "y_data": 1
                    },
                    {
                        "x_data": "Argentina",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "What is the number of courses each teacher teaches? Visualze with a bar chart, and list by the bars from low to high.",
            "Show the number of courses each teacher teaches in a bar chart, and order X-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "countrylanguage"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart, and rank in desc by the x axis.",
            "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, list by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Papiamento",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dutch",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Language",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Language)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city"
        ],
        "db_id": "farm",
        "nl_queries": [
            "What are the statuses and average populations of each city Plot them as bar chart, and list by the y-axis in asc.",
            "Show the average of population from each status, list by the the average of population in asc.",
            "A bar chart about what are the statuses and average populations of each city?, I want to sort by the the average of population in ascending.",
            "Give me a histogram for what are the statuses and average populations of each city?, I want to sort by the the average of population in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Village",
                        "y_data": 1009.75
                    },
                    {
                        "x_data": "Town",
                        "y_data": 5706
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Status",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Parts",
            "Part_Faults"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "which parts have more than 2 faults? Show the part name and id.",
            "Give me a histogram for which parts have more than 2 faults? Show the part name and id.",
            "Which parts have more than 2 faults? Show the part name and id in a bar chart.",
            "Which parts have more than 2 faults? Show the part name and id. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "top",
                        "y_data": 1
                    },
                    {
                        "x_data": "package",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "part_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "part_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names and their average grades of each high schooler, order X-axis in asc order.",
            "Bar graph to show mean grade from different name, could you list by the name from low to high?",
            "Display a bar chart for what are the names and the average grades for each high schooler?, list in asc by the x axis.",
            "Show the names and their average grades of each high schooler with a bar chart, list in asc by the x axis.",
            "Draw a bar chart for what are the names and the average grades for each high schooler?, and display in ascending by the bar please.",
            "What are the names and the average grades for each high schooler Plot them as a bar chart, I want to show X-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 11
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 10
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 11
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 10
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 9
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 10
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 10
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 11
                    },
                    {
                        "x_data": "John",
                        "y_data": 12
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 10
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 12
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 12
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(grade)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Bar chart x axis acc road y axis the average of school id, and sort bar in asc order please.",
            "Visualize a bar chart about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, could you order in ascending by the names?",
            "A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, and I want to show names from low to high order.",
            "Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart, sort bar in asc order please.",
            "Find ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, I want to list by the bar from low to high.",
            "Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and could you sort from low to high by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "order_items",
            "products"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "Compare the number of names of each product by a bar chart.",
            "For each product, show the frequency of the name with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "book",
                        "y_data": 1
                    },
                    {
                        "x_data": "clothes",
                        "y_data": 1
                    },
                    {
                        "x_data": "food",
                        "y_data": 3
                    },
                    {
                        "x_data": "music",
                        "y_data": 2
                    },
                    {
                        "x_data": "phone",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Show the total number of the last year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the last year into weekday interval, and count the first year.",
            "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Bin the last year into weekday interval and count them."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Last_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Last_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the first name of the employee and list their manager's id in the Y-axis of the bar chart, could you rank in desc by the y-axis?",
            "You can return a bar chart to show the employees' first name and the corresponding manager's id, order in desc by the y axis.",
            "Draw a bar chart of first name versus manager_id, could you rank in desc by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexander",
                        "y_data": 102
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 101
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    },
                    {
                        "x_data": "John",
                        "y_data": 100
                    },
                    {
                        "x_data": "Den",
                        "y_data": 100
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 100
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the job_id , and sort in asc by the bar.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and employee_id in a bar chart, display by the x axis from low to high please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and employee_id , display in ascending by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and employee_id , and visualize them by a bar chart, show by the x axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and employee_id , and sort in asc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 178
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "For each phone, show its names and total number of stocks Visualize by bar chart, and could you sort in ascending by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2914
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 4324
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 874
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2540
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.Num_of_stock)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commen",
                        "y_data": 5,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 1,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 1,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 0,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 2,
                        "classify": "Robel-Schulist Group"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 0,
                        "classify": "Robel-Schulist Group"
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1,
                        "classify": "Robel-Schulist Group"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "PURCHASES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?",
            "What are the number of the purchase details of transactions with amount bigger than 10000?",
            "What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 2
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "purchase_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(purchase_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a line chart about the change of manager_id over hire_date .",
            "For those employees who did not have any job in the past, for manager_id, hire_date, visualize the trend.",
            "For those employees who did not have any job in the past, show me the trend about manager_id over hire_date with a line chart.",
            "For those employees who did not have any job in the past, a line chart shows the trend of manager_id over hire_date .",
            "For those employees who did not have any job in the past, show me about the change of manager_id over hire_date in a line chart.",
            "For those employees who did not have any job in the past, return a line chart about the change of manager_id over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of every ship type by categorizing by nationality?, and sort the number of type in ascending order.",
            "Stack bar chart of the number of type vs Nationality based on type, I want to rank the number of type in asc order.",
            "Draw a bar chart showing the total number of every ship type by categorizing by nationality, I want to list by the y-axis in asc.",
            "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality, and rank Y from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 2,
                        "classify": "United Kingdom"
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 3,
                        "classify": "United Kingdom"
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 1,
                        "classify": "United States"
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 2,
                        "classify": "United States"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, and could you list bar in asc order?",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id by a bar chart, and list in asc by the JOB_ID.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and I want to order in ascending by the bars.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, could you list bar in asc order?",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and list in asc by the JOB_ID."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 445
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 315
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 348
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 148
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2142
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1706
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1219
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 244
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "elimination"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "What is the number of their teams in elimination? Draw a bar chart, and list x axis in desc order.",
            "Show the number of teams in elimination in a bar chart, could you sort by the x-axis from high to low?",
            "Create a bar chart showing how many team across team, and I want to order in descending by the names.",
            "Visualize a bar chart for what is the number of their teams in elimination?, and rank X-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Team Orton",
                        "y_data": 2
                    },
                    {
                        "x_data": "Team Batista",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Professionals",
            "Professionals",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a pie chart.",
            "How many professionals did not operate any treatment on dogs for each role? Draw a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Employee",
                        "y_data": 5
                    },
                    {
                        "x_data": "Veterenarian",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(role_code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Sections"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Display a bar chart for what are the names and id of courses having at most 2 sections?, order by the x axis in desc please.",
            "what are the names and id of courses having at most 2 sections?, and I want to rank in desc by the course_name.",
            "What are the names and ids of every course with less than 2 sections Visualize by bar chart, and order by the x axis in desc please.",
            "Display a bar chart for what are the names and ids of every course with less than 2 sections?, order from high to low by the bars.",
            "What are the names and id of courses having at most 2 sections, and I want to display in desc by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "pl",
                        "y_data": 14
                    },
                    {
                        "x_data": "nlp",
                        "y_data": 8
                    },
                    {
                        "x_data": "ml",
                        "y_data": 10
                    },
                    {
                        "x_data": "math",
                        "y_data": 2
                    },
                    {
                        "x_data": "la",
                        "y_data": 6
                    },
                    {
                        "x_data": "fr",
                        "y_data": 5
                    },
                    {
                        "x_data": "en",
                        "y_data": 4
                    },
                    {
                        "x_data": "ds",
                        "y_data": 1
                    },
                    {
                        "x_data": "dl",
                        "y_data": 9
                    },
                    {
                        "x_data": "db",
                        "y_data": 12
                    },
                    {
                        "x_data": "cal",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "course_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of teachers of each course with a bar chart, could you show by the Course in desc?",
            "Return a bar chart showing the number of teachers of each course, and order from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Science",
                        "y_data": 1
                    },
                    {
                        "x_data": "Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Math",
                        "y_data": 2
                    },
                    {
                        "x_data": "History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bible",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Course",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Course)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Visualize a bar chart for simply show the department of the employee and the corresponding salary, order bar in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 8200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Visualize a bar chart for what is average age for different job title?",
            "A bar chart about what is average age for different job title?",
            "What is average age for different job title. Visualize by bar chart.",
            "Return a histogram on how old is the average person for each job?",
            "Display a bar chart for how old is the average person for each job?",
            "How old is the average person for each job. Show bar chart.",
            "Bar chart x axis job y axis the average of age"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "student",
                        "y_data": 25.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVOICES"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all payment method codes and the number of orders for each code by a pie chart.",
            "Show all payment method codes and the number of orders for each code. Visualize by pie chart.",
            "List the distinct payment method codes with the number of orders mad by a pie chart.",
            "List the distinct payment method codes with the number of orders mad. Plot them as pie chart.",
            "Give me a pie to show the total number from different payment method code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American E",
                        "y_data": 4
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 6
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "gas_station"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the number of gas stations for each manager in a bar chart, and show by the names in ascending.",
            "How many gas stations dors each manager have? Plot a bar chart, show by the names in ascending.",
            "Draw a bar chart of manager name versus how many manager name, and list X from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BrianWingrave",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bryan Taylor",
                        "y_data": 1
                    },
                    {
                        "x_data": "BryanDenman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Colin Denman",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jon Rowe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luke Rowe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Cope Derek Marloe",
                        "y_data": 1
                    },
                    {
                        "x_data": "SimonMarloe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Whit",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Bristow",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Manager_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Manager_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the change of employee_id over hire_date in a line chart, and list by the x-axis from low to high.",
            "For all employees who have the letters D or S in their first name, a line chart shows the change of employee_id over hire_date, and could you sort by the X in ascending?",
            "For all employees who have the letters D or S in their first name, draw a line chart about the change of employee_id over hire_date , and sort HIRE_DATE in asc order.",
            "For all employees who have the letters D or S in their first name, return a line chart about the change of employee_id over hire_date , and order by the X in ascending.",
            "For all employees who have the letters D or S in their first name, show me the trend about employee_id over hire_date with a line chart, sort HIRE_DATE in asc order.",
            "For all employees who have the letters D or S in their first name, give me the trend about employee_id over hire_date , show from low to high by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 105
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 107
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 109
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 111
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 112
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 113
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 115
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 116
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 117
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 127
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 128
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 131
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 133
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 137
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 138
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 140
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 142
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 143
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 151
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 153
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 159
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 160
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 161
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 163
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 165
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 166
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 168
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 169
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 173
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 175
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 179
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 180
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 183
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 184
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 185
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 191
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 192
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 194
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 198
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 199
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 203
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 205
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "mailshot_campaigns"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show all distinct product categories along with the number of mailshots in each category in a bar chart, and show from high to low by the total number please.",
            "Show me the total number by product category in a histogram, I want to show from high to low by the Y.",
            "Show all distinct product categories along with the number of mailshots in each category Visualize by bar chart, and show from high to low by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "food",
                        "y_data": 11
                    },
                    {
                        "x_data": "clothes",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "A bar chart for giveing me the number of the dates when the max temperature was higher than 85, sort Y in asc order.",
            "A bar chart for what are the number of the dates with a maximum temperature higher than 85?, order y axis from low to high order please.",
            "Give me the dates when the max temperature was higher than 85, and count them by a bar chart, and I want to show the number of date from low to high order.",
            "What are the number of the dates with a maximum temperature higher than 85?, I want to show the number of date from low to high order.",
            "Give me the number of the dates when the max temperature was higher than 85, and display from low to high by the Y.",
            "What are the dates with a maximum temperature higher than 85, and count them by a bar chart, display from low to high by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 18
                    },
                    {
                        "x_data": "2015",
                        "y_data": 62
                    },
                    {
                        "x_data": "2014",
                        "y_data": 99
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Bar chart of mean price from each name, I want to display from low to high by the y axis.",
            "Return a histogram on what are the names and prices of all products in the store?, show from low to high by the total number.",
            "What are the names and prices of all products in the store Plot them as bar chart, and show mean price in ascending order please.",
            "Return a bar chart on what are the names and prices of all products in the store?, and I want to sort by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 165
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about ID over the meter_400 by a bar chart, show in descending by the ID.",
            "Visualize a bar chart about the distribution of meter_400 and ID , order by the total number from high to low.",
            "Find meter_400 and ID , and visualize them by a bar chart, and list by the Y from high to low please.",
            "Show id from each meter 400, show in descending by the ID.",
            "A bar chart shows the distribution of meter_400 and ID , and order by the total number from high to low.",
            "Show me about the distribution of meter_400 and ID in a bar chart, and could you order in descending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3:52.93",
                        "y_data": 8
                    },
                    {
                        "x_data": "3:55.36",
                        "y_data": 7
                    },
                    {
                        "x_data": "3:56.34",
                        "y_data": 6
                    },
                    {
                        "x_data": "3:55.37",
                        "y_data": 5
                    },
                    {
                        "x_data": "3:55.72",
                        "y_data": 4
                    },
                    {
                        "x_data": "3:55.49",
                        "y_data": 3
                    },
                    {
                        "x_data": "3:57.00",
                        "y_data": 2
                    },
                    {
                        "x_data": "3:57.12",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_400",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Draw a bar chart about the distribution of date_address_from and the amount of date_address_from bin date_address_from by weekday.",
            "A bar chart shows the distribution of date_address_from and the amount of date_address_from bin date_address_from by weekday.",
            "Find date_address_from and the amount of date_address_from bin date_address_from by weekday, and visualize them by a bar chart.",
            "Give me the comparison about the amount of date_address_from over the date_address_from bin date_address_from by weekday.",
            "Give me the comparison about the amount of date_address_from over the date_address_from bin date_address_from by weekday by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_address_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, and I want to rank in asc by the total number.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, rank by the total number of department id in asc please.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart, display y-axis in ascending order.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and could you rank by the total number of department id in asc?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, display by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 200
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show all customer ids and the number of cards owned by each customer with a scatter chart.",
            "Show all customer ids and the number of cards owned by each customer. Show the correlation.",
            "Show me a scatter chart for what are the different customer ids, and how many cards does each one hold?",
            "Draw a scatter chart for what are the different customer ids, and how many cards does each one hold?",
            "What are the different customer ids, and how many cards does each one hold. Plot them as scatter chart.",
            "Plot a scatter chart, customer id by the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 2
                    },
                    {
                        "x_data": 3,
                        "y_data": 2
                    },
                    {
                        "x_data": 5,
                        "y_data": 1
                    },
                    {
                        "x_data": 6,
                        "y_data": 1
                    },
                    {
                        "x_data": 8,
                        "y_data": 1
                    },
                    {
                        "x_data": 9,
                        "y_data": 2
                    },
                    {
                        "x_data": 10,
                        "y_data": 2
                    },
                    {
                        "x_data": 12,
                        "y_data": 1
                    },
                    {
                        "x_data": 13,
                        "y_data": 1
                    },
                    {
                        "x_data": 14,
                        "y_data": 1
                    },
                    {
                        "x_data": 15,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "customer_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalogs"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a bar chart.",
            "Bar chart x axis date of latest revision y axis the number of date of latest revision"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_latest_revision",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_latest_revision)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the number of the name of rooms booked by some customers whose first name contains ROY, rank X-axis in descending order.",
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, could you display from high to low by the names?",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, and could you rank by the x axis from high to low?",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, display X-axis in descending order.",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, could you display from high to low by the names?",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, sort x-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 3
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(roomName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts in a pie chart that groups by other account details.",
            "How many accounts for different account details? Draw a pie chart.",
            "Give me a pie to show how many other account details from different other account details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Regular",
                        "y_data": 8
                    },
                    {
                        "x_data": "VIP",
                        "y_data": 7
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_account_details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_account_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the minimum gpa of all students in each department with a bar chart.",
            "What is the lowest student GPA for every department? Return a bar chart.",
            "Bar chart x axis dept code y axis minimal stu gpa"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 2.26
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.09
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Bookings",
            "Drama_Workshop_Groups"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "A bar chart for what are the number of the names of the workshop groups that have bookings with status code \"stop\"?, list bars from low to high order please.",
            "What are the names of the workshop groups that have bookings with status code \"stop\", and count them by a bar chart, rank X-axis from low to high order.",
            "What are the number of the names of the workshop groups that have bookings with status code \"stop\"?, and list bars from low to high order.",
            "Which workshop groups have bookings with status code \"stop\"? Give me the names, and count them by a bar chart, list bars from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bednar Film",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kling Workshop",
                        "y_data": 1
                    },
                    {
                        "x_data": "Queen Art",
                        "y_data": 1
                    },
                    {
                        "x_data": "Warino Photo",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Store_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Store_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A bar chart groups the lot details, and computes the number of each lot details, and list by the how many lot details in desc.",
            "Bar chart x axis lot details y axis the number of lot details, and list by the Y-axis in desc please.",
            "Return the lot details, group the lot details, and compute the number of each lot details, list in desc by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 3
                    },
                    {
                        "x_data": "d",
                        "y_data": 3
                    },
                    {
                        "x_data": "s",
                        "y_data": 2
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "h",
                        "y_data": 2
                    },
                    {
                        "x_data": "x",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mission"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Compare the total number of each fate with a bar chart.",
            "What is the total number of each fate? Give me the result in a bar graph.",
            "Show the number of fate from each fate"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Decommissioned 1950",
                        "y_data": 2
                    },
                    {
                        "x_data": "Decommissioned 1959",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decommissioned 1960",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lost (burned and sunk) 1933",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lost (burned) 1931",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retired 1939",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fate",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show how many customer addresses in each address type code with a bar chart, show y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Shipping",
                        "y_data": 7
                    },
                    {
                        "x_data": "Billing",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "address_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(address_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each teacher? Show me a bar chart, and sort bar from high to low order.",
            "Show the number of courses for each instructor in a bar chart, and display bar in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop",
            "happy_hour)"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Find the address and staff number of the shops that do not have any happy hour. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "909 Walnut Street",
                        "y_data": 27
                    },
                    {
                        "x_data": "1201 Walnut Street",
                        "y_data": 34
                    },
                    {
                        "x_data": "2345 McGee Street",
                        "y_data": 425
                    },
                    {
                        "x_data": "909 Main Street",
                        "y_data": 28
                    },
                    {
                        "x_data": "1100 Main Street",
                        "y_data": 23
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_staff"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about School_ID over the All_Games by a bar chart, could you list by the names in asc?",
            "Return a bar chart about the distribution of All_Games and School_ID , and show in ascending by the bar.",
            "Find All_Games and School_ID , and visualize them by a bar chart, and show in ascending by the bar.",
            "Draw a bar chart about the distribution of All_Games and School_ID , could you show in asc by the All_Games?",
            "A bar chart shows the distribution of All_Games and School_ID , show in ascending by the bar.",
            "Bar chart of school_id from each all games, and list in asc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "21\u201314",
                        "y_data": 5
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 4
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Give me a bar chart for the number of year of each year, order by the how many year in ascending.",
            "Bin the year attribute into the Year interval and count them for a bar chart, and order by the how many year in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer",
            "concert"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "What are the names of the singers who performed in a concert in 2014, and count them by a pie chart",
            "List all singer names in concerts in year 2014, and count them by a pie chart",
            "A pie chart for what are the number of the names of the singers who performed in a concert in 2014?",
            "What are the number of the names of the singers who performed in a concert in 2014?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John Nizinik",
                        "y_data": 1
                    },
                    {
                        "x_data": "Justin Brown",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tribal King",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all investor details, and count them by a bar chart, and sort from low to high by the x axis please.",
            "Plot the number of investor details by grouped by investor details as a bar graph, and order in ascending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    },
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "l",
                        "y_data": 2
                    },
                    {
                        "x_data": "o",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "w",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 2
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees, rank by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ED",
                        "y_data": 2
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR",
                        "y_data": 1
                    },
                    {
                        "x_data": "PT",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me manager_id by last name in a histogram, show in asc by the y axis.",
            "Just show the employee's last name and their manager's id using a bar chart, could you order MANAGER_ID from low to high order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 100
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 100
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 100
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 101
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 101
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 101
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 101
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 102
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, visualize the relationship between code and price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between code and price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the correlation between code and price , and group by attribute name in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 6,
                        "y_data": 180,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 7,
                        "y_data": 90,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 10,
                        "y_data": 180,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 1,
                        "y_data": 240,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": 8,
                        "y_data": 270,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 9,
                        "y_data": 66,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 11,
                        "y_data": 150,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 3,
                        "y_data": 150,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": 5,
                        "y_data": 240,
                        "classify": "Sony"
                    },
                    {
                        "x_data": 2,
                        "y_data": 120,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": 4,
                        "y_data": 5,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the employee's last name and their employee id using a bar chart, and I want to display by the x axis in desc.",
            "Give me a bar chart for employee_id of each last name, could you display X-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whalen",
                        "y_data": 200
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 145
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 114
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "King",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 103
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 108
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 121
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the email by a bar chart, show by the y axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of email and manager_id , and show by the y axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and manager_id in a bar chart, and display by the y-axis from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and manager_id , and visualize them by a bar chart, show Y in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and manager_id , show by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "WGIETZ",
                        "y_data": 205
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 201
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 149
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 101
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 101
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 101
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give me a bar chart that groups and count the job id for all employees in the Finance department, and could you list by the bar in descending?",
            "For all employees in the Finance department, compare the total number of different job id using a bar chart, and could you list by the bar in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a pie chart about the proportion of ACC_Road and the amount of ACC_Road.",
            "Give me a pie chart to reflect the proportion of ACC_Road and the amount of ACC_Road.",
            "Return a pie chart about the proportion of ACC_Road and the amount of ACC_Road.",
            "A pie chart shows the proportion of ACC_Road and the amount of ACC_Road.",
            "Show me about the proportion of the amount of ACC_Road and the amount of ACC_Road in a pie chart.",
            "Give me a pie to show the number of acc road from different acc road."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 2
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(ACC_Road)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many departments for each building? Draw a bar chart, show Y from high to low order.",
            "Bar chart of how many building from each building, and display total number in desc order.",
            "List the number of departments for each building with a bar chart, show by the how many building from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Taylor",
                        "y_data": 3
                    },
                    {
                        "x_data": "Palmer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Candlestick",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wrigley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thompson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rauch",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Main",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linderman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brodhead",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "List the name of technicians whose team is not \"NYY\", and count them by a bar chart, and show x-axis in descending order please.",
            "What is the name of the technician whose team is not 'NYY', and count them by a bar chart, order by the X-axis in desc.",
            "List the number of the name of technicians whose team is not \"NYY\", order by the X-axis in desc.",
            "A bar chart for listing the number of the name of technicians whose team is not \"NYY\", show x-axis in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mickey Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lou Boudrea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 2
                    },
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm",
            "affected_region"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "List the name for storms and the number of affected regions for each storm with a pie chart.",
            "List the name for storms and the number of affected regions for each storm. Plot them as pie chart.",
            "A pie chart about how many regions were affected by each storm?",
            "Return a pie chart on how many regions were affected by each storm?",
            "How many regions were affected by each storm. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "One",
                        "y_data": 2
                    },
                    {
                        "x_data": "Three",
                        "y_data": 1
                    },
                    {
                        "x_data": "Four",
                        "y_data": 1
                    },
                    {
                        "x_data": "Five",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "shipments"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "On what day was the order with invoice number 10 placed, and count them by a line chart",
            "What is the placement date of the order whose invoice number is 10, and count them by a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1982",
                        "y_data": 1
                    },
                    {
                        "x_data": "1983",
                        "y_data": 1
                    },
                    {
                        "x_data": "1984",
                        "y_data": 0
                    },
                    {
                        "x_data": "1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987",
                        "y_data": 0
                    },
                    {
                        "x_data": "1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992",
                        "y_data": 0
                    },
                    {
                        "x_data": "1993",
                        "y_data": 0
                    },
                    {
                        "x_data": "1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995",
                        "y_data": 0
                    },
                    {
                        "x_data": "1996",
                        "y_data": 0
                    },
                    {
                        "x_data": "1997",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_order_placed",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_order_placed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Show the relationship between the number of dorms and total capacity with a scatter chart.",
            "Scatter plot to show count(*) on x axis and total number of student capacity on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 128
                    },
                    {
                        "x_data": 1,
                        "y_data": 116
                    },
                    {
                        "x_data": 5,
                        "y_data": 1136
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(student_capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "For each faculty rank, show the number of faculty members who have it. Visualize by pie chart.",
            "Return a pie on how many faculty members do we have for each faculty rank?",
            "Visualize a pie chart with how many faculty members do we have for each faculty rank?",
            "How many faculty members do we have for each faculty rank. Show the proportion.",
            "Give me a pie to show the total number from different rank."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking end dates of the apartments with type code \"Duplex\" in each year? Return a bar chart.",
            "Return the number of booking end dates for the apartments that have type code \"Duplex\" for each year in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 6
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter by a bar chart, and show in desc by the x-axis.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and rank by the names in descending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and I want to rank Headquarter in descending order please.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart, order by the x axis in desc please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and could you show by the X from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Stacked bar of year and the number of year colored by Theme, and sort from low to high by the y-axis.",
            "Group by the theme and count the year with a stacked bar chart, I want to list by the the number of year from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Summer"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a line chart about the change of commission_pct over hire_date , and list x-axis in asc order.",
            "For those employees who did not have any job in the past, give me the trend about commission_pct over hire_date , and I want to display by the x axis from low to high.",
            "For those employees who did not have any job in the past, for commission_pct, hire_date, visualize the trend, and sort X in asc order.",
            "For those employees who did not have any job in the past, show me the trend about commission_pct over hire_date with a line chart, show x-axis in ascending order.",
            "For those employees who did not have any job in the past, return a line chart about the change of commission_pct over hire_date , and I want to order by the x axis in ascending.",
            "For those employees who did not have any job in the past, draw a line chart about the change of commission_pct over hire_date , display X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 0.4
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the number of counties of all appellations in a bar chart, and I want to list in ascending by the bars.",
            "What is the number of counties for all appellations?, I want to rank bars in asc order.",
            "Plot the number of county by grouped by county as a bar graph, and I want to list in ascending by the bars.",
            "Return a bar chart about the number of counties for all appellations?, and I want to list in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 3
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Contra Costa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 3
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 8
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 11
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 4
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 5
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sonoma",
                        "y_data": 11
                    },
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and I want to sort in ascending by the x-axis please.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and list in asc by the X.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, sort by the x-axis in asc.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, and sort by the x-axis in asc.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list in asc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 432
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 308
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 342
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1911
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1098
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1100
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different ending date and bin ending date by weekday with a bar chart.",
            "How many documents in different ending date? Return a bar chart binning ending date by weekday.",
            "Create a bar chart showing the number of date in locaton to across date in locaton to"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL. Could you plot the result with a bar chart?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Cameron",
                        "y_data": 5
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 3
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 4
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart, and could you list Y in ascending order?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name, sort by the Y in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart, and order by the Y in asc.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute name in a bar chart, order by the Code in ascending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute name, order by the Code in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name does not contain the letter M, give me a line chart to show the hire date and the corresponding salaries.",
            "For employees without the letter M in their first name, give me a line chart to show the salary change over their hire date using a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 5800
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 2100
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 3500
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 14000
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 13500
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 9600
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 7300
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 8600
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 8400
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 3400
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 3800
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 3900
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 4400
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time.",
            "Give me the trend about the sum of Shop_ID over Start_from bin start_from by time.",
            "For the sum of Shop_ID, Start_from, visualize the trend.",
            "A line chart shows the change of the sum of Shop_ID over Start_from bin start_from by time",
            "Draw a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time.",
            "Show me the trend about the sum of Shop_ID over Start_from bin start_from by time with a line chart.",
            "Plot total number of shop id over start from in a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 1
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011",
                        "y_data": 8
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft",
            "MATCH"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "List the names of aircrafts and the number of times it won matches by a bar chart, and sort x-axis from high to low order.",
            "For each aircraft that has won an award, what is its name and how many time has it won Plot them as bar chart, show in desc by the X-axis please.",
            "List the names of aircrafts and the number of times it won matches Plot them as bar chart, and order by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robinson R-22",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mil Mi-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "CH-53E Super Stallion",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-47D Chinook",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bell 206B3 JetRanger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Aircraft",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, show in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commen",
                        "y_data": 5,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 1,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 1,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 0,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 2,
                        "classify": "Robel-Schulist Group"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 0,
                        "classify": "Robel-Schulist Group"
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1,
                        "classify": "Robel-Schulist Group"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and display Y in desc order.",
            "A bar chart shows the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, sort by the total number in descending please.",
            "Return a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and display in desc by the the number of is full time.",
            "Give me the comparison about the amount of Is_full_time over the Is_full_time , and group by attribute Is_full_time by a bar chart, and sort by the Y from high to low.",
            "Draw a bar chart of is full time versus how many is full time, sort by the Y from high to low.",
            "Show me about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time in a bar chart, and display in desc by the the number of is full time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 5
                    },
                    {
                        "x_data": "F",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Is_full_time)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Use a bar chart to show the number of delegates in each county, and sort x-axis from low to high order.",
            "Show how many delegates in each county with a bar chart, order in asc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Draw a bar chart of founder versus sum revenue, and show y-axis in descending order.",
            "Display a bar chart for what is the total revenue of companies started by founder?, and rank by the Y-axis in desc.",
            "Find the total revenue of companies of each founder Visualize by bar chart, and display by the Y-axis from high to low.",
            "What is the total revenue of companies started by founder Plot them as bar chart, and show in desc by the total number of revenue."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "For the attribute All_Road and All_Games_Percent, show their proportion by a pie chart.",
            "Draw a pie chart about the proportion of All_Road and All_Games_Percent.",
            "Return a pie chart about the proportion of All_Road and All_Games_Percent.",
            "Visualize a pie chart about the proportion of All_Road and All_Games_Percent.",
            "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart.",
            "I want to know the proportion of All_Games_Percent for each all road."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Count those days for each year and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph.",
            "For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each year using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between manufacturer and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between manufacturer and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, show me about the correlation between manufacturer and revenue , and group by attribute headquarter in a scatter chart.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between manufacturer and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between manufacturer and revenue , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 4,
                        "y_data": 200,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 6,
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 6,
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 5,
                        "y_data": 130,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": 1,
                        "y_data": 120,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about Team_ID over the All_Games , and show total number in asc order.",
            "Show me about the distribution of All_Games and Team_ID in a bar chart, and list Team_ID from low to high order please.",
            "Give me the comparison about Team_ID over the All_Games by a bar chart, rank in asc by the Y.",
            "A bar chart shows the distribution of All_Games and Team_ID , and rank in asc by the Y.",
            "Bar chart x axis all games y axis team_id, and I want to list by the y-axis in asc.",
            "Find All_Games and Team_ID , and visualize them by a bar chart, and I want to list by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 3
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each day and group by date to with a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-09",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-11",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_to",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Visualize the title and and the total star rating of the movie using a bar chart.",
            "Please tell me the total star ratings of each movie title using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 8
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 5
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "school_bus",
            "school"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the type of school and the number of buses for each type, rank in asc by the total number.",
            "Show the type of school and the number of buses for each type in a bar chart, rank by the the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Public",
                        "y_data": 2
                    },
                    {
                        "x_data": "Private",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show the names and ids of tourist attractions that are visited at least two times Visualize by bar chart, and I want to show in ascending by the X.",
            "Show the names and ids of tourist attractions that are visited at least two times with a bar chart, and I want to show by the Name from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "US museum",
                        "y_data": 6476
                    },
                    {
                        "x_data": "exploration trial",
                        "y_data": 6852
                    },
                    {
                        "x_data": "fun games",
                        "y_data": 6523
                    },
                    {
                        "x_data": "jungle cruise",
                        "y_data": 8698
                    },
                    {
                        "x_data": "parking",
                        "y_data": 9919
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Tourist_Attraction_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and I want to show by the X-axis in ascending.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and order by the X in asc.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart, and I want to show by the X-axis in ascending.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, order from low to high by the X-axis.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, and show by the X-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2240
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and sort total number in descending order.",
            "Give me the comparison about the amount of ACC_Road over the ACC_Road , and group by attribute ACC_Road, and could you display by the Y from high to low?",
            "Show me about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart, could you display by the Y from high to low?",
            "Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and list in descending by the Y-axis.",
            "Visualize a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, sort total number in descending order.",
            "Bar chart x axis acc road y axis how many acc road, and could you sort how many acc road in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(ACC_Road)"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Find the component amounts and names of all furnitures that have more than 10 components. Show me the proportion of component amounts using a pie chart.",
            "Visualize the name and their component amounts all furnitures that have more than 10 components."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Billiard table",
                        "y_data": 14
                    },
                    {
                        "x_data": "Dining set",
                        "y_data": 12
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_Component"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "CUSTOMER",
            "INVOICE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart, sort in asc by the Y-axis.",
            "A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, rank from low to high by the y axis.",
            "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart, I want to show by the total number from low to high please.",
            "What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, and I want to show by the total number from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2011",
                        "y_data": 0
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2012",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "InvoiceDate",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(InvoiceDate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer",
            "record"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "A bar chart for finding the number of the names of swimmers who has a result of \"win\", could you display by the y-axis from high to low?",
            "Find the number of the names of swimmers who has a result of \"win\", order in desc by the Y.",
            "Find the names of swimmers who has a result of \"win\", and count them by a bar chart, and could you show by the y axis in descending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 3
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 1
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Give me a bar chart that bins the year into day of the week interval, and return the average number of times the team Boston Red Stockings won in the postseasons, and list in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 8.333333333333334
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 10
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the average of revenue , and group by attribute headquarter in a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the headquarter , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 100
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 50
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 30
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "I want to see trend of the number of season by season, and order by the X-axis in ascending.",
            "List the number of games in each season with a line chart, show by the X-axis in ascending.",
            "List the number of games in each season with a line chart, and display X in asc order.",
            "I want to see trend of the number of season by season, order by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about Team_ID over the All_Games .",
            "Find All_Games and Team_ID , and visualize them by a bar chart.",
            "A bar chart shows the distribution of All_Games and Team_ID .",
            "Give me the comparison about Team_ID over the All_Games by a bar chart.",
            "Show me about the distribution of All_Games and Team_ID in a bar chart.",
            "Bar chart x axis all games y axis team_id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 3
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Plot how many minister by grouped by minister as a bar graph, and order by the Minister in ascending.",
            "Give me a bar chart showing the total number of each minister, and show by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kojo Botsio (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Compute the number of services by services and then split by local authorities Show the result with a stacked bar graph, show by the X-axis from low to high.",
            "Stack bar chart of the number of local authority vs services based on local authority, and could you order from low to high by the bars?",
            "count services by services, and split by local authorities with a stacked bar chart, and show by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brentwood",
                        "y_data": 1,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 1,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 2,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "c2c"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, find name and manufacturer , and group by attribute founder, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute founder in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, and show by the y axis in ascending.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart, and show by the y axis in ascending.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, and could you order the average of manager id in ascending order?",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart, and I want to order by the y-axis in asc please.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday, could you rank from low to high by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 105.63636363636364
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 119.2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 121.2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 125
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 126.57142857142857
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 127.11111111111111
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 133
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?",
            "Return the number of the lot details of lots that belong to investors with details \"l\"?",
            "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "h",
                        "y_data": 1
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "z",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name, and I want to list in ascending by the X-axis.",
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, and display first_name from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Danny",
                        "y_data": 1
                    },
                    {
                        "x_data": "Domenica",
                        "y_data": 2
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monte",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ruben",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigurd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Velva",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vernice",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "For the average of Employee_ID, Start_from, visualize the trend, rank in desc by the x axis.",
            "Give me the trend about the average of Employee_ID over Start_from bin start_from by time, rank by the X-axis from high to low.",
            "Return a line chart about the change of the average of Employee_ID over Start_from bin start_from by time, and sort x axis from high to low order.",
            "Plot start from by the average of employee id as a line chart, and sort from high to low by the x-axis.",
            "A line chart shows the change of the average of Employee_ID over Start_from bin start_from by time, show X in desc order.",
            "Draw a line chart about the change of the average of Employee_ID over Start_from bin start_from by time, rank by the X-axis from high to low.",
            "Show me about the change of the average of Employee_ID over Start_from bin start_from by time in a line chart, and rank in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 5
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008",
                        "y_data": 7
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart, could you list by the x axis in ascending please?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name by a bar chart, and could you display x axis in ascending order?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name, and I want to rank in asc by the bar.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name, and could you list by the x axis in ascending please?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of revenue , and group by attribute name, and I want to rank bars from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "A bar chart showing the number of publication dates of books.",
            "Bar chart x axis publication date y axis how many publication date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "April 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "August 2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "June 2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "October 2005",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publication_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Publication_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the average price of each cinema."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 9
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 10.666666666666666
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 12
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 9
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Services"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "what are the event details of the services that have the type code 'Marriage', and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 3
                    },
                    {
                        "x_data": "Success",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Movie",
            "Rating"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Return a bar chart on how many movie reviews does each director get?, and order in asc by the bars.",
            "How many movie reviews does each director get Show bar chart, and order x axis from low to high order.",
            "Show me a bar chart for how many movie reviews does each director get?, and order bars in ascending order.",
            "For each director, how many reviews have they received Visualize by bar chart, and order in asc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 2
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 5
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students living in each city with a bar chart, and display by the Y-axis from high to low please.",
            "How many students live in each city? Show a bar chart, could you sort the total number in desc order?",
            "Create a bar chart showing the total number across city code, and list from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 1
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Group and count the job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN for visualizing a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 3
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the job_id , and display in desc by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and employee_id , list bars from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and employee_id in a bar chart, I want to show in descending by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and employee_id , and visualize them by a bar chart, and rank X-axis in descending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and employee_id , and list bars from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 178
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products",
            "Products_in_Events"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Show the names of products and the number of events they are in Visualize by bar chart, and order by the Y in descending.",
            "Show the names of products and the number of events they are in by a bar chart, order by the y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV Equipments",
                        "y_data": 5
                    },
                    {
                        "x_data": "Special Dinning",
                        "y_data": 4
                    },
                    {
                        "x_data": "Men suits",
                        "y_data": 2
                    },
                    {
                        "x_data": "Trading Policy B",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trading Policy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 1
                    },
                    {
                        "x_data": "Conference Equipments",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Group by services attribute in station table and compute the total number of services with a bar chart, order by the services in ascending.",
            "Give me a bar chart that the x-axis is the services and the Y is the count(services), and could you show bars from low to high order?",
            "Draw a bar chart of services versus the number of services, and sort by the names in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 3
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 1
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                }
            }
        }
    },
    {
        "tables_used": [
            "camera_lens"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Group and count brand for each camera lens using a bar chart, sort by the bar in ascending.",
            "Show the number of brand from each brand, show brand in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Olympus",
                        "y_data": 3
                    },
                    {
                        "x_data": "Panasonic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Schneider Kreuznach",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigma",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "brand",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(brand)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "What is the average age for each gender of student? Return a bar chart, and order by the total number in descending.",
            "Find the average age for students with different sex in a bar chart, could you list Y from high to low order?",
            "Plot mean age by grouped by sex as a bar graph, order by the the average of age in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 19.7
                    },
                    {
                        "x_data": "M",
                        "y_data": 19.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professionals",
            "Treatments",
            "Treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show how many professionals in a bar chart grouping by professional's first name, I want to list by the the number of first name in descending please.",
            "List the number of professionals in a bar chart that groups by professional's first name, and sort by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sigurd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ruben",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monte",
                        "y_data": 2
                    },
                    {
                        "x_data": "Domenica",
                        "y_data": 2
                    },
                    {
                        "x_data": "Vernice",
                        "y_data": 1
                    },
                    {
                        "x_data": "Velva",
                        "y_data": 1
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Danny",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "How many faculty members do we have for each gender? Draw a bar chart, and I want to order by the names in asc please.",
            "Create a bar chart showing sum count(*) across sex, and rank in asc by the x-axis.",
            "A bar chart showing the number of male and female faculty, and could you show by the x-axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 7
                    },
                    {
                        "x_data": "M",
                        "y_data": 51
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, return the number of cinemas showing that fim in a bar chart, and display by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "user_profiles",
            "tweets"
        ],
        "db_id": "twitter_1",
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and rank in descending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tyler Swift",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Iron Man",
                        "y_data": 2
                    },
                    {
                        "x_data": "Celine Dion",
                        "y_data": 2
                    },
                    {
                        "x_data": "Black Widow\n",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the comparison of the total number of the home city of all drivers with a bar chart.",
            "Please give me a pie chart to show the number of home cities of all drivers",
            "Plot the number of home city by grouped by home city as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bethel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Coventry",
                        "y_data": 1
                    },
                    {
                        "x_data": "East Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 6
                    },
                    {
                        "x_data": "Manchester",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_city",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_city)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "A bar graph listing the local authorities and how many local authorities provided by all stations, and show from low to high by the x axis please.",
            "Count the number of local authorities by the local authority, sort X in ascending order.",
            "Compare the number of the local authority by the local authority, show in ascending by the X.",
            "Bar chart of how many local authority from each local authority, and display in asc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brentwood",
                        "y_data": 1
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 3
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Use a bar chart to show the number of start dates of all the apartment bookings made by guests with gender code \"Female\" for each weekday.",
            "A bar chart showing the number of start date of the apartment bookings made by female guests (gender code \"Female\") for each weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the relationship between customer id and account id in a scatter chart.",
            "What is the relationship between customer id and account id? Show me a scatter chart.",
            "Scatter plot to show account id on x axis and customer_id on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 6
                    },
                    {
                        "x_data": 2,
                        "y_data": 14
                    },
                    {
                        "x_data": 3,
                        "y_data": 9
                    },
                    {
                        "x_data": 4,
                        "y_data": 12
                    },
                    {
                        "x_data": 5,
                        "y_data": 13
                    },
                    {
                        "x_data": 6,
                        "y_data": 12
                    },
                    {
                        "x_data": 7,
                        "y_data": 9
                    },
                    {
                        "x_data": 8,
                        "y_data": 8
                    },
                    {
                        "x_data": 9,
                        "y_data": 9
                    },
                    {
                        "x_data": 10,
                        "y_data": 4
                    },
                    {
                        "x_data": 11,
                        "y_data": 4
                    },
                    {
                        "x_data": 12,
                        "y_data": 2
                    },
                    {
                        "x_data": 13,
                        "y_data": 10
                    },
                    {
                        "x_data": 14,
                        "y_data": 9
                    },
                    {
                        "x_data": 15,
                        "y_data": 4
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "account_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Give me a histogram for how old is each gender, on average?, list in ascending by the mean age.",
            "Return a bar chart on what is the average age for each gender?, and rank by the y-axis from low to high.",
            "Draw a bar chart for what is the average age for each gender?, and could you show by the Y from low to high please?",
            "What is the average age for each gender Visualize by bar chart, I want to order by the Y in asc please.",
            "Bar graph to show the average of age from different gender, and could you list total number in asc order?",
            "How old is each gender, on average Plot them as bar chart, I want to order by the Y in asc please.",
            "Return a histogram on how old is each gender, on average?, could you show by the Y from low to high please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "female",
                        "y_data": 25.5
                    },
                    {
                        "x_data": "male",
                        "y_data": 40
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stadium"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me the total number by country in a histogram, I want to show Y-axis from high to low order.",
            "How many stadiums does each country have Show bar chart, and rank by the Y-axis in descending.",
            "Draw a bar chart for how many stadiums does each country have?, and list in descending by the the total number .",
            "Show me a bar chart for how many stadiums does each country have?, list in descending by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Russia",
                        "y_data": 4
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hungary",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "England",
                        "y_data": 1
                    },
                    {
                        "x_data": "Azerbaijan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the number of companies in each headquarter with a bar chart.",
            "How many companies in each headquarter? Plot a bar chart.",
            "Bar chart of how many headquarters from each headquarters"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of Team_Name and School_ID , could you order by the X-axis in ascending?",
            "Visualize a bar chart about the distribution of Team_Name and School_ID , list in ascending by the x-axis.",
            "Bar chart x axis team name y axis school_id, and list in ascending by the x-axis.",
            "Give me the comparison about School_ID over the Team_Name , and sort by the x axis in asc.",
            "A bar chart shows the distribution of Team_Name and School_ID , show by the x-axis in asc.",
            "Show me about the distribution of Team_Name and School_ID in a bar chart, display bars in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clemson",
                        "y_data": 4
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee"
        ],
        "db_id": "company_1",
        "nl_queries": [
            "Find the number of employees of each gender whose salary is lower than 50000 Visualize by bar chart, rank in ascending by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 3
                    },
                    {
                        "x_data": "M",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return the date of birth for all the guests with gender code \"Male\", and count them by a bar chart, I want to order the number of date of birth from high to low order.",
            "Return the number of the date of birth for all the guests with gender code \"Male\", could you rank in desc by the Y?",
            "What are the number of dates of birth of all the guests whose gender is \"Male\"?, list by the y-axis in descending.",
            "What are dates of birth of all the guests whose gender is \"Male\", and count them by a bar chart, and list by the y axis in descending.",
            "A bar chart for returning the number of the date of birth for all the guests with gender code \"Male\", and show Y in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_birth",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Tell me how many songs each singer has, display how many name from low to high order.",
            "Compare the number of songs each singer has, and order in asc by the how many name.",
            "Compare the number of songs each singer has using a bar chart, list Y in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 1
                    },
                    {
                        "x_data": "Christy Walton",
                        "y_data": 2
                    },
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many dorms are there for each gender? Show me a bar chart, order from low to high by the X-axis.",
            "Bar chart x axis gender y axis the total number, and order from low to high by the X-axis.",
            "Find the number of dorms for each gender in a bar chart, list in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 1
                    },
                    {
                        "x_data": "M",
                        "y_data": 1
                    },
                    {
                        "x_data": "X",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Count the number of people of each sex who have a weight higher than 85 by a bar chart.",
            "Count the number of people of each sex who have a weight higher than 85."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "M",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Draw a bar chart about the distribution of Name and Height , I want to order by the Y-axis in asc.",
            "Return a bar chart about the distribution of Name and Height , I want to list Height in asc order.",
            "Draw a bar chart of name versus height, and rank by the y-axis in ascending.",
            "Give me the comparison about Height over the Name by a bar chart, and display by the y-axis from low to high.",
            "Find Name and Height , and visualize them by a bar chart, I want to display by the Y-axis in ascending.",
            "A bar chart shows the distribution of Name and Height , I want to display by the Y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hubert Henno",
                        "y_data": 188
                    },
                    {
                        "x_data": "Lo\u00efc De Kergret",
                        "y_data": 193
                    },
                    {
                        "x_data": "Philippe Bar\u00e7a-Cysique",
                        "y_data": 194
                    },
                    {
                        "x_data": "Frantz Granvorka",
                        "y_data": 195
                    },
                    {
                        "x_data": "Guillaume Samica",
                        "y_data": 196
                    },
                    {
                        "x_data": "Vincent Montm\u00e9at",
                        "y_data": 196
                    },
                    {
                        "x_data": "Dominique Daquin",
                        "y_data": 197
                    },
                    {
                        "x_data": "St\u00e9phane Antiga",
                        "y_data": 200
                    },
                    {
                        "x_data": "Laurent Capet",
                        "y_data": 202
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Stacked bar of took office and how many took office colored by Minister, and sort Y from low to high order.",
            "How many parties of the time they took office, binning the took office into Weekday interval, and then split by the minister's name, list in ascending by the how many took office."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Kojo Botsio (MP)"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Took_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Took_office)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Compare the average salary by each hire date (bin it into month interval) of employees using a bar chart, and sort Y-axis in ascending order.",
            "Give me a bar chart for the average of salary of each hire date, and sort Y-axis in ascending order.",
            "Show the average salary by each hire date of employees, and please bin the hire date into the Month interval for showing a bar chart, rank by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 9180
                    },
                    {
                        "x_data": "July",
                        "y_data": 9600
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 14000
                    },
                    {
                        "x_data": "June",
                        "y_data": 15000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Sum the average weight and bin year into weekday interval for a bar chart.",
            "Plot total number of avg(weight) by grouped by year as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 6474
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5313
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3176
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 9051
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5413
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6234
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2861
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Weight))"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show names of technicians in ascending order of quality rank of the machine they are assigned, and count them by a bar chart",
            "A bar chart for what are the number of the names of the technicians by ascending order of quality rank for the machine they are assigned?",
            "What are the number of the names of the technicians by ascending order of quality rank for the machine they are assigned?",
            "What are the names of the technicians by ascending order of quality rank for the machine they are assigned, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Transaction_Types",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Sale"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, find job_id and the sum of department_id , and group by attribute job_id, and visualize them by a bar chart, display by the total number of department id from high to low.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart, show Y-axis in desc order.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart, and display by the total number of department id from high to low.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, I want to order by the total number from high to low.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, and display by the total number of department id from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 2320
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 250
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 180
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show the names and ids of tourist attractions that are visited at least two times by a pie chart.",
            "Show the names and ids of tourist attractions that are visited at least two times. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "US museum",
                        "y_data": 6476
                    },
                    {
                        "x_data": "fun games",
                        "y_data": 6523
                    },
                    {
                        "x_data": "exploration trial",
                        "y_data": 6852
                    },
                    {
                        "x_data": "jungle cruise",
                        "y_data": 8698
                    },
                    {
                        "x_data": "parking",
                        "y_data": 9919
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Tourist_Attraction_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses that have more than one prerequisites for each title with a bar chart, and list by the Y-axis in ascending please.",
            "How many courses with more than one prerequisite for each title? Return a bar chart, and sort in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 1
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 1
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 1
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 2
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2310
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2149
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2326
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2233
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1963
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2079
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2295
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the relationship between minimum product price and maximum product price and group by product type code in a group scatter chart.",
            "Show max(product price) vs minimal product price as scatter plot use a different color for each product_type_code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 939.57,
                        "y_data": 408.82,
                        "classify": "Clothes"
                    },
                    {
                        "x_data": 971.44,
                        "y_data": 612.46,
                        "classify": "Hardware"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(product_price)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Please draw a bar chart to show the total number of different color, and sort by the Y-axis from high to low.",
            "Bar chart x axis color y axis the number of color, and I want to sort how many color from high to low order.",
            "Compare the number of items in each color scheme using a bar chart, and sort Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "RBG",
                        "y_data": 8
                    },
                    {
                        "x_data": "Black/White",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "color",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(color)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Just list the name and price of its most expensive product in a bar chart, and could you sort in ascending by the bars?",
            "For each manufacturer, what are the names and prices of their most expensive product?, could you sort in ascending by the bars?",
            "Show the product name and price of its most expensive product using a bar chart, could you show by the names from low to high please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 180
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Please tell me how many employees in the department 80 on each type of job titles using a bar chart, and show by the Y-axis in descending.",
            "Compare the total number of different job titles for all those jobs in department 80 using a bar chart, show y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sales Representative",
                        "y_data": 29
                    },
                    {
                        "x_data": "Sales Manager",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_TITLE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of revenue , and group by attribute headquarter in a bar chart, and could you sort Y in desc order?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter, I want to display by the y-axis in desc please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, and I want to list in descending by the y axis.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, order by the y axis in desc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter by a bar chart, and could you sort Y in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 300
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 150
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 60
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Bar chart x axis industry y axis the number of industry, display by the the number of industry from low to high please.",
            "Return a bar chart about the number of companies for each industry, and order in asc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Automotive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retailing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 7
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Industry",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "VOTING_RECORD"
        ],
        "db_id": "voter_2",
        "nl_queries": [
            "Show how many registration date from each registration date, and I want to display by the the number of registration date in ascending.",
            "Report the distinct registration date and bin the date into the weekday interval in a bar chart, and order Y in asc order.",
            "Give me a bar chart shows the distinct registration date, and bin the date into the weekday interval in a bar chart, and show by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Registration_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Registration_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of All_Neutral and Team_ID , rank by the bar in asc.",
            "Show me about the distribution of All_Neutral and Team_ID in a bar chart, list in ascending by the names.",
            "Give me the comparison about Team_ID over the All_Neutral , and display in asc by the bars.",
            "Give me a bar chart for team_id of each all neutral, I want to rank by the bar from low to high.",
            "Find All_Neutral and Team_ID , and visualize them by a bar chart, list in ascending by the names.",
            "Give me the comparison about Team_ID over the All_Neutral by a bar chart, and show from low to high by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 3
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "9\u20131",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "bookings"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "How many bookings did each customer make? Show the customer id as the Y-axis and the first name as the X-axis in a bar chart, rank from high to low by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rosalee",
                        "y_data": 3
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 11
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 7
                    },
                    {
                        "x_data": "Layne",
                        "y_data": 10
                    },
                    {
                        "x_data": "Jamir",
                        "y_data": 15
                    },
                    {
                        "x_data": "German",
                        "y_data": 9
                    },
                    {
                        "x_data": "Elinore",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Bar graph to show the number of booking end date from different booking end date, and could you show in asc by the Y?",
            "How many apartment bookings in each year? Show me a bar chart binning booking end date by year, rank in ascending by the Y.",
            "Show the number of apartment bookings in each year and bin booking end date by year with a bar chart, could you list Y in ascending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 4
                    },
                    {
                        "x_data": "2017",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_end_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_end_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "How many departments are built in each year? Group by creation time in a line chart, display from high to low by the X.",
            "How many departments are built in each year? Group by creation time in a line chart, and rank x axis from high to low order.",
            "I want to see trend of the number of creation by creation, and display from high to low by the X.",
            "I want to see trend of the number of creation by creation, could you list in descending by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2002-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1870-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1849-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1789-01-01",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Creation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts in a bar chart that groups by other account details.",
            "How many accounts for different account details? Draw a bar chart.",
            "Bar chart x axis other account details y axis how many other account details"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Regular",
                        "y_data": 8
                    },
                    {
                        "x_data": "VIP",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_account_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_account_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "trained_in",
            "procedures"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Which physicians are trained in procedures that are more expensive than 5000, and count them by a bar chart, and list Name from high to low order please.",
            "Find the number of the physicians who are trained in a procedure that costs more than 5000, and list by the x axis in descending.",
            "A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000, could you rank x axis in desc order please?",
            "Find the physicians who are trained in a procedure that costs more than 5000, and count them by a bar chart, list by the x axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Todd Quinlan",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Wen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Can you list the employee's last name and the corresponding department id using a bar chart?",
            "Draw a bar chart of last name versus department_id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 90
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 60
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 100
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 30
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 50
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 80
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 10
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses",
            "Ref_budget_codes"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents for different budget type code in a bar chart, I want to show bars in asc order.",
            "Return a bar chart to show how many documents for different budget type code, and I want to sort X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GV",
                        "y_data": 6
                    },
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    },
                    {
                        "x_data": "SF",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Budget_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart listing the number of faults for different description of skills required to fix them, rank y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV, Video",
                        "y_data": 7
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 5
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For the top 3 days with the largest max gust speeds, just show the average temperature and mean humidity using a scatter chart.",
            "Give me a scatter chart with average temperature and mean humidity for the days with the 3 largest maximum gust speeds?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 64,
                        "y_data": 49
                    },
                    {
                        "x_data": 59,
                        "y_data": 54
                    },
                    {
                        "x_data": 68,
                        "y_data": 72
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "mean_temperature_f"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "mean_humidity"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and salary , and sort by the Y-axis in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and salary in a bar chart, list in desc by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name by a bar chart, I want to list Y from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and salary , and list in desc by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name , order by the y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    },
                    {
                        "x_data": "William",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 6000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, and sort Y-axis in ascending order please.",
            "Give me a bar chart about the average of number_of_platforms in different locations, and list by the total number in ascending please.",
            "Bar chart x axis location y axis the average of number of platforms, and show in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    },
                    {
                        "x_data": "London",
                        "y_data": 14
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Number_of_Platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur",
            "people"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "Return the number of the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, and I want to rank by the Date_of_Birth in asc.",
            "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, and count them by a line chart, could you list x axis in ascending order please?",
            "A line chart for what are the number of the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?, and sort from low to high by the X.",
            "What are the number of the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?, and could you list x axis in ascending order please?",
            "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\", and count them by a line chart, show from low to high by the x-axis.",
            "A line chart for returning the number of the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, sort X in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972",
                        "y_data": 1
                    },
                    {
                        "x_data": "1973",
                        "y_data": 0
                    },
                    {
                        "x_data": "1974",
                        "y_data": 0
                    },
                    {
                        "x_data": "1975",
                        "y_data": 0
                    },
                    {
                        "x_data": "1976",
                        "y_data": 0
                    },
                    {
                        "x_data": "1977",
                        "y_data": 0
                    },
                    {
                        "x_data": "1978",
                        "y_data": 0
                    },
                    {
                        "x_data": "1979",
                        "y_data": 0
                    },
                    {
                        "x_data": "1980",
                        "y_data": 0
                    },
                    {
                        "x_data": "1981",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_of_Birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Group and count the years played to draw a bar chart, list y axis in descending order.",
            "Bar chart of the number of years played from each years played, and list from high to low by the Y-axis.",
            "Please give me a bar chart to show the number of players in each years played, list from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 (2003\u20132004, 2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2009\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (1988, 1990)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?",
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Korea",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Paragraph_Text",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Paragraph_Text)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Give me a histogram for what are the names of the singers and number of concerts for each person?, order in asc by the names please.",
            "List singer names and number of concerts for each singer, and could you sort X-axis in asc order?",
            "A bar chart about what are the names of the singers and number of concerts for each person?, and could you display by the x axis in asc?",
            "List singer names and number of concerts for each singer with a bar chart, could you display by the x axis in asc?",
            "What are the names of the singers and number of concerts for each person Show bar chart, and sort X-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John Nizinik",
                        "y_data": 2
                    },
                    {
                        "x_data": "Justin Brown",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tribal King",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the minimum gpa of all students in each department with a bar chart, and could you show from low to high by the DEPT_CODE?",
            "Bar chart x axis dept code y axis minimal stu gpa, display from low to high by the X.",
            "What is the lowest student GPA for every department? Return a bar chart, and could you show from low to high by the DEPT_CODE?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 2.26
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.09
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "HOTELS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show the average price of hotels for each star rating code in a scatter chart",
            "Show the average price of hotels for each star rating code. Show the correlation.",
            "what is the average price range of hotels for each each star rating code?",
            "plot scatter on what is the average price range of hotels for each each star rating code?",
            "What is the average price range of hotels for each each star rating code. Show scatter chart.",
            "Plot a scatter chart, star rating code by the average of price range."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 12725.062543725
                    },
                    {
                        "x_data": 2,
                        "y_data": 96606.48756549998
                    },
                    {
                        "x_data": 3,
                        "y_data": 2763278.3206
                    },
                    {
                        "x_data": 4,
                        "y_data": 19007487.73924
                    },
                    {
                        "x_data": 5,
                        "y_data": 113509913.47843349
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "star_rating_code"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(price_range)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Buildings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Give me a pie chart showing the number of buildings managed by \"Kyle\" and group by apartment type codes .",
            "How many buildings are managed by \"Kyle\"? Please return a pie chart grouping by apartment type codes."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duplex",
                        "y_data": 2
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Studio",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_type_code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and department_id , and I want to list by the Y in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and department_id in a bar chart, and could you show total number from high to low order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and department_id , and could you show total number from high to low order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and department_id , and show in descending by the DEPARTMENT_ID.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and department_id , and visualize them by a bar chart, and I want to show in desc by the DEPARTMENT_ID."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 110
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "has_pet"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Give me a histogram for what are the different first names and ages of the students who do have pets?, rank by the bars from low to high.",
            "What are the different first names and ages of the students who do have pets Visualize by bar chart, list X-axis in ascending order please.",
            "Find the first name and age of students who have a pet, list by the names from low to high.",
            "Draw a bar chart for what are the different first names and ages of the students who do have pets?, rank by the X-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Linda",
                        "y_data": 18
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "List the number of the name of technicians whose team is not \"NYY\", could you show bar in asc order?",
            "List the name of technicians whose team is not \"NYY\", and count them by a bar chart, rank x axis in ascending order.",
            "What is the name of the technician whose team is not 'NYY', and count them by a bar chart, could you show bar in asc order?",
            "A bar chart for listing the number of the name of technicians whose team is not \"NYY\", I want to display from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 2
                    },
                    {
                        "x_data": "Joe Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lou Boudrea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mickey Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course.",
            "Find the number of the the date of enrollment of the \"Spanish\" course.",
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart",
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 0
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 0
                    },
                    {
                        "x_data": "Nov",
                        "y_data": 0
                    },
                    {
                        "x_data": "Dec",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "membership_register_branch",
            "branch"
        ],
        "db_id": "shop_membership",
        "nl_queries": [
            "Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, and sort in descending by the Y please.",
            "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, and list in descending by the total number.",
            "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, and I want to order by the the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexandre",
                        "y_data": 3
                    },
                    {
                        "x_data": "Zytogorski",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taverner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Popert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brooke Greville",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show different types of ships and the average tonnage of ships of each type in a pie chart.",
            "Show different types of ships and the average tonnage of ships of each type.",
            "For each type, what is the average tonnage. Plot them as pie chart.",
            "Give me a pie to show the average of tonnage from different type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 4845
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 3932.2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Tonnage)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Bar chart of the number of years played from each years played, and order x-axis in desc order.",
            "Group and count the years played to draw a bar chart, could you sort X in descending order?",
            "Please give me a bar chart to show the number of players in each years played, show Years_Played in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 (2003\u20132004, 2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2009\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (1988, 1990)",
                        "y_data": 1
                    },
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show how many premises for different premises type in a pie chart.",
            "Give me a pie to show the number of premises type from different premises type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Office",
                        "y_data": 7
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 4
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "For each title, show the number of films in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 1
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What are the number of start date of the apartment bookings made by female guests (gender code \"Female\") for each year? Draw a bar chart, order in descending by the the number of booking start date.",
            "Show the number of start dates of all the apartment bookings made by guests with gender code \"Female\" for each year with a bar chart, and show by the the number of booking start date in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 6
                    },
                    {
                        "x_data": "2017",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and salary , and visualize them by a bar chart, and list in ascending by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of email and salary , could you order by the bars from low to high?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and salary , and display from low to high by the x-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the email , list by the names in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and salary in a bar chart, list in asc by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HBAER",
                        "y_data": 10000
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 7000
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 13000
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 6000
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 12000
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 6500
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer",
            "concert"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "List all singer names in concerts in year 2014, and count them by a bar chart, and show X from high to low order.",
            "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, could you sort by the bar in descending please?",
            "What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, could you sort by the bar in descending please?",
            "What are the number of the names of the singers who performed in a concert in 2014?, show by the bar in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tribal King",
                        "y_data": 1
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    },
                    {
                        "x_data": "Justin Brown",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Nizinik",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student",
            "has_pet",
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the major and age of students who do not have a cat pet. Visualize by scatter chart.",
            "Scatter. what major is every student who does not own a cat as a pet, and also how old are they?",
            "A scatter chart about what major is every student who does not own a cat as a pet, and also how old are they?",
            "What major is every student who does not own a cat as a pet, and also how old are they."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 600,
                        "y_data": 19
                    },
                    {
                        "x_data": 600,
                        "y_data": 21
                    },
                    {
                        "x_data": 600,
                        "y_data": 20
                    },
                    {
                        "x_data": 600,
                        "y_data": 26
                    },
                    {
                        "x_data": 600,
                        "y_data": 18
                    },
                    {
                        "x_data": 600,
                        "y_data": 18
                    },
                    {
                        "x_data": 600,
                        "y_data": 20
                    },
                    {
                        "x_data": 600,
                        "y_data": 19
                    },
                    {
                        "x_data": 600,
                        "y_data": 17
                    },
                    {
                        "x_data": 600,
                        "y_data": 22
                    },
                    {
                        "x_data": 600,
                        "y_data": 20
                    },
                    {
                        "x_data": 600,
                        "y_data": 18
                    },
                    {
                        "x_data": 600,
                        "y_data": 16
                    },
                    {
                        "x_data": 600,
                        "y_data": 17
                    },
                    {
                        "x_data": 600,
                        "y_data": 27
                    },
                    {
                        "x_data": 600,
                        "y_data": 20
                    },
                    {
                        "x_data": 600,
                        "y_data": 18
                    },
                    {
                        "x_data": 520,
                        "y_data": 22
                    },
                    {
                        "x_data": 520,
                        "y_data": 19
                    },
                    {
                        "x_data": 540,
                        "y_data": 17
                    },
                    {
                        "x_data": 520,
                        "y_data": 20
                    },
                    {
                        "x_data": 540,
                        "y_data": 18
                    },
                    {
                        "x_data": 520,
                        "y_data": 18
                    },
                    {
                        "x_data": 520,
                        "y_data": 19
                    },
                    {
                        "x_data": 520,
                        "y_data": 18
                    },
                    {
                        "x_data": 550,
                        "y_data": 20
                    },
                    {
                        "x_data": 100,
                        "y_data": 17
                    },
                    {
                        "x_data": 550,
                        "y_data": 21
                    },
                    {
                        "x_data": 550,
                        "y_data": 20
                    },
                    {
                        "x_data": 550,
                        "y_data": 20
                    },
                    {
                        "x_data": 550,
                        "y_data": 18
                    },
                    {
                        "x_data": 50,
                        "y_data": 18
                    },
                    {
                        "x_data": 50,
                        "y_data": 26
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Major"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Give me a bar chart about the number of platforms in different locations, and I want to list from high to low by the total number please.",
            "What is the number of platforms for each location? Show the comparison with a bar chart, and could you order by the total number in desc?",
            "Create a bar chart showing total number of number of platforms across location, show from high to low by the total number of number of platforms."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London",
                        "y_data": 140
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Number_of_Platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show me a bar chart for what is the total credit does each department offer?, order y-axis in desc order please.",
            "What is the total credit does each department offer, I want to sort y-axis in desc order.",
            "Display a bar chart for how many credits does the department offer?, and I want to rank by the total number from high to low.",
            "Return a histogram on what is the total credit does each department offer?, rank Y-axis from high to low order please.",
            "How many credits does the department offer Show bar chart, I want to sort y-axis in desc order.",
            "Bar chart of sum crs credit from each dept code, I want to display Y in descending order please.",
            "how many credits does the department offer?, I want to display Y in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CIS",
                        "y_data": 14
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(crs_credit)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute name by a bar chart, and list by the bars in desc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute name, rank Name from high to low order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute name, display by the bar in desc.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute name in a bar chart, sort Name from high to low order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute name, rank Name from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assessment_Notes",
            "Students"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Find the number of the dates of assessment notes for students with first name \"Fanny\".",
            "Find the dates of assessment notes for students with first name \"Fanny\", and count them by a bar chart",
            "A bar chart for finding the number of the dates of assessment notes for students with first name \"Fanny\"."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972",
                        "y_data": 1
                    },
                    {
                        "x_data": "1973",
                        "y_data": 0
                    },
                    {
                        "x_data": "1974",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_notes",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_notes)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each party and the corresponding number of delegates from that party, order by the bars from high to low.",
            "Show the name of each party and the corresponding number of delegates from that party in a bar chart, order by the bars from high to low.",
            "For each party, return the name of the party and the number of delegates from that party Plot them as bar chart, and sort bar from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(COUNT(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Return a line chart about the change of the sum of monthly_rental over date_address_to , and group by attribute other_details.",
            "Draw a line chart about the change of the sum of monthly_rental over date_address_to , and group by attribute other_details.",
            "Show me the trend about the sum of monthly_rental over date_address_to , and group by attribute other_details with a line chart.",
            "A line chart shows the change of the sum of monthly_rental over date_address_to , and group by attribute other_details",
            "Visualize a line chart about the change of the sum of monthly_rental over date_address_to , and group by attribute other_details.",
            "A line chart shows the trend of the sum of monthly_rental over date_address_to , and group by attribute other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 644,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 2043,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-02-25",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 747,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1113,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 2571,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 800,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 865,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 679,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 826,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 620,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1287,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1067,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 894,
                        "classify": "house"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(monthly_rental)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sportsinfo",
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "What are the last names for all scholarship students, and count them by a bar chart, rank by the x-axis in asc.",
            "What are the number of the last names for all scholarship students?, and show in ascending by the x-axis.",
            "Show last names for all student who are on scholarship, and count them by a bar chart, I want to display from low to high by the names please.",
            "A bar chart for what are the number of the last names for all scholarship students?, I want to order by the X-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shieber",
                        "y_data": 2
                    },
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of name and ID .",
            "A bar chart shows the distribution of name and ID .",
            "Return a bar chart about the distribution of name and ID .",
            "Visualize a bar chart about the distribution of name and ID .",
            "Give me the comparison about ID over the name .",
            "Plot id by grouped by name as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Przemys\u0142aw Sta\u0144czyk",
                        "y_data": 7
                    },
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 4
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 5
                    },
                    {
                        "x_data": "S\u00e9bastien Rouault",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 6
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents for each document type description? Visualize by a bar chart, list by the y axis in asc.",
            "Return a bar chart showing the number of documents for each document type description, could you order Y-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "fun",
                        "y_data": 1
                    },
                    {
                        "x_data": "good",
                        "y_data": 5
                    },
                    {
                        "x_data": "excellent",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about salary over hire_date with a line chart, order in desc by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, for salary, hire_date, visualize the trend, order in desc by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of salary over hire_date , show in descending by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the trend of salary over hire_date , could you rank x-axis in desc order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of salary over hire_date , and show in desc by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of salary over hire_date , and show in descending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 8300
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 13000
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 7000
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name, show by the bar in asc.",
            "For those records from the products and each product's manufacturer, find name and the sum of manufacturer , and group by attribute name, and visualize them by a bar chart, order from low to high by the Name.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the name , and group by attribute name by a bar chart, order by the x-axis from low to high.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name, and list X-axis in ascending order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of manufacturer , and group by attribute name, list X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 6
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 9
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught with a bar chart grouping by course code, and could you sort by the bars in ascending?",
            "How many courses each teacher taught? Show me a bar chart grouping by course code, sort names in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    },
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_CODE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart, rank x axis from low to high order.",
            "Show me about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time in a bar chart, sort in ascending by the bars.",
            "Draw a bar chart about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, and sort in ascending by the bars.",
            "Find Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, show x axis from low to high order.",
            "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time, and order names in ascending order please.",
            "Bar chart x axis is full time y axis mean employee id, display bar in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "T",
                        "y_data": 3.8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Display a pie chart for how many music festivals have had each kind of result, ordered descending by count?",
            "Return a pie on how many music festivals have had each kind of result, ordered descending by count?",
            "How many music festivals have had each kind of result, ordered descending by count. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nominated",
                        "y_data": 6
                    },
                    {
                        "x_data": "Awarded",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Display a bar chart for what are the names and the average grades for each high schooler?, and list by the y axis from low to high.",
            "What are the names and the average grades for each high schooler Plot them as a bar chart, could you display by the Y in asc?",
            "Bar graph to show mean grade from different name, could you order from low to high by the Y please?",
            "Show the names and their average grades of each high schooler, and could you order from low to high by the total number please?",
            "Draw a bar chart for what are the names and the average grades for each high schooler?, and list by the y axis from low to high.",
            "Show the names and their average grades of each high schooler with a bar chart, order in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cassandra",
                        "y_data": 9
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 9
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 10
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 10
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 10
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 10
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 10
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 11
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 11
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 11
                    },
                    {
                        "x_data": "John",
                        "y_data": 12
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 12
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(grade)"
                }
            }
        }
    },
    {
        "tables_used": [
            "documents"
        ],
        "db_id": "document_management",
        "nl_queries": [
            "Find the name and access counts of all documents, in alphabetic order of the document name. Show bar chart.",
            "Return a bar chart on what are the names of all the documents, as well as the access counts of each, ordered alphabetically?",
            "Give me a histogram for what are the names of all the documents, as well as the access counts of each, ordered alphabetically?",
            "What are the names of all the documents, as well as the access counts of each, ordered alphabetically."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "David CV",
                        "y_data": 6345
                    },
                    {
                        "x_data": "Fall Sails",
                        "y_data": 7509
                    },
                    {
                        "x_data": "How to cook pasta",
                        "y_data": 2045
                    },
                    {
                        "x_data": "Humanity: a fact",
                        "y_data": 3479
                    },
                    {
                        "x_data": "Joe CV",
                        "y_data": 2294
                    },
                    {
                        "x_data": "John CV",
                        "y_data": 5924
                    },
                    {
                        "x_data": "Learning Database",
                        "y_data": 3769
                    },
                    {
                        "x_data": "Learning English",
                        "y_data": 1864
                    },
                    {
                        "x_data": "Learning Japanese",
                        "y_data": 2910
                    },
                    {
                        "x_data": "Life about Claude Monet",
                        "y_data": 1219
                    },
                    {
                        "x_data": "Relationships between History and Arts",
                        "y_data": 9948
                    },
                    {
                        "x_data": "Research about Art history",
                        "y_data": 8208
                    },
                    {
                        "x_data": "Spring Sails",
                        "y_data": 3289
                    },
                    {
                        "x_data": "Summer Sails",
                        "y_data": 6661
                    },
                    {
                        "x_data": "Winter Sails",
                        "y_data": 8623
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "document_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "access_count"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customer_complaints",
        "nl_queries": [
            "A bar chart about what is the average price of the products for each category?",
            "Show me a bar chart for what is the average price of the products for each category?",
            "What is the average price of the products for each category.",
            "Return the average price of products that have each category code in a bar chart.",
            "Return the average price of products that have each category code.",
            "Bar graph to show the average of product price from different product category code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Book",
                        "y_data": 35
                    },
                    {
                        "x_data": "Food",
                        "y_data": 2.88
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 66.67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Likes",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the number of names of high schoolers who have likes with a bar chart, show in desc by the Y-axis.",
            "Show me the frequency of names of high schoolers who have likes with a bar chart, could you rank in descending by the the number of name?",
            "Give me a bar chart to show the number of names of high schoolers who have likes, list y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Return a pie on how many captains are in each rank?",
            "how many captains are in each rank?",
            "How many captains are in each rank. Visualize by pie chart.",
            "Count the number of captains that have each rank with a pie chart.",
            "Count the number of captains that have each rank. Show the proportion.",
            "Give me a pie to show the total number from different rank."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the sum of account details for different statement details in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Open Project",
                        "y_data": 20316
                    },
                    {
                        "x_data": "Private Project",
                        "y_data": 21335
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Account_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many injured players not suffering from injury of 'Knee problem' in each match? Show me a bar chart grouping by number of matches, and rank by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1 (2)",
                        "y_data": 1
                    },
                    {
                        "x_data": "10",
                        "y_data": 1
                    },
                    {
                        "x_data": "12",
                        "y_data": 1
                    },
                    {
                        "x_data": "4",
                        "y_data": 1
                    },
                    {
                        "x_data": "2",
                        "y_data": 2
                    },
                    {
                        "x_data": "3",
                        "y_data": 2
                    },
                    {
                        "x_data": "4 (6)",
                        "y_data": 2
                    },
                    {
                        "x_data": "1",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Number_of_matches",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Number_of_matches)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of courses each teacher teaches in a bar chart.",
            "What is the number of courses each teacher teaches? Visualze with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\", and I want to rank x axis in asc order.",
            "Find the dates of the tests taken with result \"Pass\", and count them by a line chart, and order by the x-axis from low to high.",
            "A line chart for finding the number of the dates of the tests taken with result \"Pass\", order X in asc order.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a line chart, and I want to display by the X-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "19th",
                        "y_data": 2
                    },
                    {
                        "x_data": "20th",
                        "y_data": 0
                    },
                    {
                        "x_data": "21th",
                        "y_data": 1
                    },
                    {
                        "x_data": "22th",
                        "y_data": 0
                    },
                    {
                        "x_data": "23th",
                        "y_data": 1
                    },
                    {
                        "x_data": "24th",
                        "y_data": 1
                    },
                    {
                        "x_data": "25th",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_test_taken",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_test_taken)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show the total number of passengers of each location in a bar chart, and display in asc by the x-axis.",
            "Visualize a bar chart showing each location's total number of passengers, rank in ascending by the x-axis please.",
            "Bar chart x axis location y axis sum total passengers, show from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 36.330999999999996
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 29.658
                    },
                    {
                        "x_data": "London",
                        "y_data": 498.50700000000006
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(total_passengers)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of All_Road and All_Games_Percent .",
            "Show me about the distribution of All_Road and All_Games_Percent in a bar chart.",
            "Find All_Road and All_Games_Percent , and visualize them by a bar chart.",
            "Return a bar chart about the distribution of All_Road and All_Games_Percent .",
            "Draw a bar chart about the distribution of All_Road and All_Games_Percent .",
            "Bar chart of all_games_percent from each all road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 15300
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 6000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show the names of singers and the total sales of their songs in a bar chart, and list Y-axis in asc order.",
            "Show the names of singers and the total sales of their songs Visualize by bar chart, and could you display by the y axis from low to high?",
            "For each singer name, what is the total sales for their songs Plot them as bar chart, rank from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 261000
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 275000
                    },
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 292000
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 335000
                    },
                    {
                        "x_data": "Christy Walton",
                        "y_data": 651421
                    },
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 1646407
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T2.Sales)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, find name and price , and group by attribute founder, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the amount of job_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Return a histogram on how many students live in each city?, and display Y-axis in descending order.",
            "A bar chart about how many students live in each city?, and I want to sort by the y axis from high to low.",
            "Plot the total number by grouped by city code as a bar graph, could you list by the Y-axis in descending?",
            "Show all cities and corresponding number of students by a bar chart, and I want to display by the Y in desc.",
            "Show all cities and corresponding number of students Plot them as bar chart, and could you display in desc by the the total number ?",
            "How many students live in each city, I want to show total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 1
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Timed_Status_of_Things",
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', order by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Furniture",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "List the position of players and the average number of points of players of each position by a bar chart.",
            "List the position of players and the average number of points of players of each position. Visualize by bar chart.",
            "For each position, what is the average number of points for players in that position. Plot them as bar chart.",
            "Give me a bar chart for mean points of each position"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Full Back",
                        "y_data": 20
                    },
                    {
                        "x_data": "Hooker",
                        "y_data": 36
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 12
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 20
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Right Centre",
                        "y_data": 36
                    },
                    {
                        "x_data": "Right Wing",
                        "y_data": 36
                    },
                    {
                        "x_data": "Scrum Half",
                        "y_data": 188
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 20
                    },
                    {
                        "x_data": "Stand Off",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Points)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Research_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "What details are there on the research staff? List the result in ascending alphabetical order, and count them by a bar chart",
            "List the number of the research staff details, and order in ascending order.",
            "A bar chart for listing the number of the research staff details, and order in ascending order.",
            "List the research staff details, and order in ascending order, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ab",
                        "y_data": 1
                    },
                    {
                        "x_data": "accusamus",
                        "y_data": 1
                    },
                    {
                        "x_data": "animi",
                        "y_data": 1
                    },
                    {
                        "x_data": "aspernatur",
                        "y_data": 1
                    },
                    {
                        "x_data": "consequatur",
                        "y_data": 2
                    },
                    {
                        "x_data": "dicta",
                        "y_data": 1
                    },
                    {
                        "x_data": "dolor",
                        "y_data": 1
                    },
                    {
                        "x_data": "doloribus",
                        "y_data": 1
                    },
                    {
                        "x_data": "est",
                        "y_data": 1
                    },
                    {
                        "x_data": "iure",
                        "y_data": 1
                    },
                    {
                        "x_data": "nulla",
                        "y_data": 1
                    },
                    {
                        "x_data": "quo",
                        "y_data": 1
                    },
                    {
                        "x_data": "sint",
                        "y_data": 1
                    },
                    {
                        "x_data": "voluptatibus",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "staff_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(staff_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "operate_company",
            "flight"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "How many companies that have ever operated a flight for each type? Draw a bar chart, and rank in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Corporate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joint Venture",
                        "y_data": 3
                    },
                    {
                        "x_data": "Subsidiary",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and commission_pct , sort from high to low by the COMMISSION_PCT.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and commission_pct , show total number in descending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and commission_pct , and visualize them by a bar chart, list from high to low by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and commission_pct in a bar chart, and sort by the Y-axis in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and commission_pct , I want to show by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kimberely",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "William",
                        "y_data": 0
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 0
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 0
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 0
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin Return the result using a bar chart, show in ascending by the total number please.",
            "Bar chart x axis date of transaction y axis mean share count, and could you list by the Y in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 24427.25
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 32176.333333333332
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 554575.3333333334
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3119057.6666666665
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 674529892
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "web_client_accelerator",
            "accelerator_compatible_browser"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "Draw a pie chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "Return a pie on what are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CACHEbox",
                        "y_data": 1
                    },
                    {
                        "x_data": "CProxy",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fasterfox",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find headquarter and the amount of headquarter , and group by attribute headquarter, and visualize them by a bar chart, and sort in asc by the X-axis.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter, display by the X from low to high please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter, I want to rank by the bars in ascending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter in a bar chart, and sort in asc by the X-axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter by a bar chart, and display by the X from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarter)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Draw a bar chart for what are the names and the average grades for each high schooler?, sort Y from high to low order.",
            "Show the names and their average grades of each high schooler with a bar chart, could you rank in descending by the Y-axis?",
            "What are the names and the average grades for each high schooler Plot them as a bar chart, and could you list in desc by the y axis?",
            "Show the names and their average grades of each high schooler, could you list in desc by the y axis?",
            "Bar graph to show mean grade from different name, could you show y-axis in desc order?",
            "Display a bar chart for what are the names and the average grades for each high schooler?, and could you show y-axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Logan",
                        "y_data": 12
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 12
                    },
                    {
                        "x_data": "John",
                        "y_data": 12
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 11
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 11
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 11
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 10
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 10
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 10
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 10
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 10
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 9
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(grade)"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture",
            "furniture_manufacte"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Give me the names and prices of furnitures which some companies are manufacturing with a pie chart.",
            "Please draw a pie chart to visualize the names and prices of furnitures which some companies are manufacturing."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bookcase",
                        "y_data": 239
                    },
                    {
                        "x_data": "Chabudai",
                        "y_data": 450
                    },
                    {
                        "x_data": "Dining set",
                        "y_data": 2124
                    },
                    {
                        "x_data": "Billiard table",
                        "y_data": 443
                    },
                    {
                        "x_data": "Hatstand",
                        "y_data": 1234
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price_in_Dollar"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, I want to list y axis from high to low order please.",
            "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year, and display by the the number of year from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Show me the frequency of those years (bin year into year interval) that the team Boston Red Stockings won in the postseasons with a bar chart, I want to order by the x axis in desc please.",
            "Show me the frequency of those years (bin year into year interval) that the team Boston Red Stockings won in the postseasons with a bar chart, and I want to show x-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 1
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 1
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 3
                    },
                    {
                        "x_data": "1903~1913",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, sort total number in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, I want to sort Y in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, list in ascending by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by time, and list the average of department id in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, order y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 43.333333333333336
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "What is the sum of capacity of cinemas open for each year? Return a line chart, could you display from low to high by the x axis please?",
            "What is the sum of capacity of cinemas open for each year? Return a line chart, and could you display by the x-axis in ascending?",
            "Plot sum capacity over openning year in a line chart, and I want to rank by the x axis in ascending.",
            "Plot sum capacity over openning year in a line chart, and could you display X-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 305
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1633
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1336
                    },
                    {
                        "x_data": "2012",
                        "y_data": 368
                    },
                    {
                        "x_data": "2013",
                        "y_data": 330
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 364
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many staffs have contacted with each engineer? Give me a bar chart grouping by each engineer's first name, rank from high to low by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nellie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 2
                    },
                    {
                        "x_data": "Etha",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 6
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "What is the proportion of carriers of phones?",
            "Can you visualize a pie chart to show the proportion of carriers?",
            "Create a pie chart showing the number of carrier across carrier."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 2
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Carrier)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval with a line chart, I want to sort in ascending by the x axis please.",
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval with a line chart, and show from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970~1973",
                        "y_data": 2
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 1
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 0
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 0
                    },
                    {
                        "x_data": "2010~2012",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students who are not in the largest major and group by students' first name in a bar chart.",
            "What is the first and last name of the students who are not in the largest major?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "David",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 4
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor",
            "visit"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, order y axis in ascending order.",
            "Show name and age for visitors who visited some museums more than once using a bar chart, and I want to order y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rafael van der Vaart",
                        "y_data": 25
                    },
                    {
                        "x_data": "Arjen Robben",
                        "y_data": 27
                    },
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 36
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the average age of all students living in the each city. Show bar chart.",
            "Draw a bar chart for what is the average age for each city and what are those cities?",
            "A bar chart about what is the average age for each city and what are those cities?",
            "What is the average age for each city and what are those cities. Show bar chart.",
            "Bar chart of mean age from each city code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 18
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 21
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 21.66666666666667
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the price of each product supplied by supplier id 3 in a bar chart.",
            "What is the price of each product supplied by supplier id 3? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "black jeans",
                        "y_data": 695.16
                    },
                    {
                        "x_data": "blue jeans",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "mouse",
                        "y_data": 803.74
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "product_price"
                }
            }
        }
    },
    {
        "tables_used": [
            "races"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "A bar chart for what are the number of the names of races held between 2009 and 2011?, and order by the how many name in ascending.",
            "What are the number of the names of all races held between 2009 and 2011?, could you list how many name from low to high order?",
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart, and could you list how many name from low to high order?",
            "What are the number of the names of races held between 2009 and 2011?, and could you sort in ascending by the total number please?",
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?, could you sort by the Y-axis in ascending?",
            "What are the names of races held between 2009 and 2011, and count them by a bar chart, order by the how many name in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Indian Grand Prix",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bahrain Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Canadian Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Korean Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Abu Dhabi Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Australian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Belgian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brazilian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "British Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chinese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "European Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "German Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Hungarian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Japanese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Malaysian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monaco Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Singapore Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spanish Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Turkish Grand Prix",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart, and list from low to high by the names.",
            "What are the number of the names of races held between 2009 and 2011?, and list from low to high by the names.",
            "What are the names of races held between 2009 and 2011, and count them by a bar chart, and rank from low to high by the X-axis.",
            "What are the number of the names of all races held between 2009 and 2011?, and order X-axis in ascending order.",
            "A bar chart for what are the number of the names of races held between 2009 and 2011?, and rank from low to high by the X-axis.",
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?, and could you show from low to high by the bar?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Australian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Bahrain Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Belgian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brazilian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "British Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Canadian Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chinese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "European Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "German Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Hungarian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Indian Grand Prix",
                        "y_data": 1
                    },
                    {
                        "x_data": "Italian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Japanese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Korean Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Malaysian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monaco Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Singapore Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spanish Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Turkish Grand Prix",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between price and manufacturer .",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between price and manufacturer .",
            "For those records from the products and each product's manufacturer, what is the relationship between price and manufacturer ?",
            "For those records from the products and each product's manufacturer, show me about the correlation between price and manufacturer in a scatter chart.",
            "For those records from the products and each product's manufacturer, visualize the relationship between price and manufacturer ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 240,
                        "y_data": 5
                    },
                    {
                        "x_data": 120,
                        "y_data": 6
                    },
                    {
                        "x_data": 150,
                        "y_data": 4
                    },
                    {
                        "x_data": 5,
                        "y_data": 6
                    },
                    {
                        "x_data": 240,
                        "y_data": 1
                    },
                    {
                        "x_data": 180,
                        "y_data": 2
                    },
                    {
                        "x_data": 90,
                        "y_data": 2
                    },
                    {
                        "x_data": 270,
                        "y_data": 3
                    },
                    {
                        "x_data": 66,
                        "y_data": 3
                    },
                    {
                        "x_data": 180,
                        "y_data": 2
                    },
                    {
                        "x_data": 150,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Bar chart of the total number from each class room, order CLASS_ROOM in asc order.",
            "Find the number of classes offered for all class rooms that held at least 2 classes Show bar chart, sort by the CLASS_ROOM in asc.",
            "For each classroom with at least 2 classes, how many classes are offered, and order in asc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BUS252",
                        "y_data": 2
                    },
                    {
                        "x_data": "BUS311",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR200",
                        "y_data": 4
                    },
                    {
                        "x_data": "KLR209",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CLASS_ROOM",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 101
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 101
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 101
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 354
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 100
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 201
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "operate_company",
            "flight"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "Return a histogram on what are the ids and names of the companies that operated more than one flight?, and order from high to low by the y axis please.",
            "What are the ids and names of the companies that operated more than one flight, I want to order y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vogue Laundry Service Limited",
                        "y_data": 11
                    },
                    {
                        "x_data": "Cathay Pacific Cargo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Dragonair",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description in a bar chart.",
            "List the cost of each treatment and the corresponding treatment type description.",
            "A bar chart about what are the cost and treatment type description of each treatment?",
            "Draw a bar chart for what are the cost and treatment type description of each treatment?",
            "What are the cost and treatment type description of each treatment."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Physical examination",
                        "y_data": 2429
                    },
                    {
                        "x_data": "Take for a Walk",
                        "y_data": 2392
                    },
                    {
                        "x_data": "Vaccination",
                        "y_data": 2540
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "treatment_type_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cost_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart listing the number of faults for different description of skills required to fix them, and sort x axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV, Video",
                        "y_data": 7
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 5
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart.",
            "Draw a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "Give me the trend about the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "A line chart shows the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time",
            "Visualize a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "Return a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "Give me line charts of worldwide gross total number of shop id over year start from by major genres Is_full_time"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 8,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Show the minimum of the rooms in different decor using a bar chart, and display by the X-axis from low to high please.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!, rank by the X in ascending.",
            "Draw a bar chart of decor versus minimal baseprice, could you show in ascending by the names?",
            "Please use a bar chart to show the minimum price of the rooms in a different decor, rank decor from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 75
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 150
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, and sort bars from low to high order.",
            "For those records from the products and each product's manufacturer, find name and the sum of code , and group by attribute name, and visualize them by a bar chart, and rank by the x axis in asc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name, and I want to list by the X in asc.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name, sort in asc by the bars.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, list from low to high by the Name please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 23
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 28
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 5
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the job_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 17000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7920
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5760
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2780
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 12200
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8350
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3215
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2785
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7280
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the meter_400 , could you show by the meter_100 in ascending?",
            "Return a bar chart about the distribution of meter_400 and meter_100 , display meter_100 in ascending order.",
            "Visualize a bar chart about the distribution of meter_400 and meter_100 , and display by the meter_100 in asc.",
            "Find meter_400 and meter_100 , and visualize them by a bar chart, and could you display by the y axis in asc?",
            "Bar graph to show meter_100 from different meter 400, and could you display by the y axis in asc?",
            "A bar chart shows the distribution of meter_400 and meter_100 , and could you display by the y axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3:52.93",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "3:55.36",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "3:55.49",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "3:57.00",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "3:57.12",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "3:55.72",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "3:55.37",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "3:56.34",
                        "y_data": 57.84
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_400",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of treatments in each day with a line chart that groups by date of treatment.",
            "How many treatments in each day? Return a line chart that groups by date of treatment."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students for each department Plot them as bar chart, and order y axis in descending order.",
            "How many students are in each department Visualize by bar chart, order y axis in descending order.",
            "how many students are in each department?, could you order in desc by the y axis?",
            "Return a histogram on how many students are in each department?, and sort in desc by the Y-axis.",
            "Draw a bar chart of dept code versus the total number, order y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 2
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 1
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 1
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a scatter chart about the correlation between employee_id and manager_id .",
            "For those employees who did not have any job in the past, return a scatter chart about the correlation between employee_id and manager_id .",
            "For those employees who did not have any job in the past, what is the relationship between employee_id and manager_id ?",
            "For those employees who did not have any job in the past, a scatter chart shows the correlation between employee_id and manager_id .",
            "For those employees who did not have any job in the past, show me about the correlation between employee_id and manager_id in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 0
                    },
                    {
                        "x_data": 103,
                        "y_data": 102
                    },
                    {
                        "x_data": 104,
                        "y_data": 103
                    },
                    {
                        "x_data": 105,
                        "y_data": 103
                    },
                    {
                        "x_data": 106,
                        "y_data": 103
                    },
                    {
                        "x_data": 107,
                        "y_data": 103
                    },
                    {
                        "x_data": 108,
                        "y_data": 101
                    },
                    {
                        "x_data": 109,
                        "y_data": 108
                    },
                    {
                        "x_data": 110,
                        "y_data": 108
                    },
                    {
                        "x_data": 111,
                        "y_data": 108
                    },
                    {
                        "x_data": 112,
                        "y_data": 108
                    },
                    {
                        "x_data": 113,
                        "y_data": 108
                    },
                    {
                        "x_data": 115,
                        "y_data": 114
                    },
                    {
                        "x_data": 116,
                        "y_data": 114
                    },
                    {
                        "x_data": 117,
                        "y_data": 114
                    },
                    {
                        "x_data": 118,
                        "y_data": 114
                    },
                    {
                        "x_data": 119,
                        "y_data": 114
                    },
                    {
                        "x_data": 120,
                        "y_data": 100
                    },
                    {
                        "x_data": 121,
                        "y_data": 100
                    },
                    {
                        "x_data": 123,
                        "y_data": 100
                    },
                    {
                        "x_data": 124,
                        "y_data": 100
                    },
                    {
                        "x_data": 125,
                        "y_data": 120
                    },
                    {
                        "x_data": 126,
                        "y_data": 120
                    },
                    {
                        "x_data": 127,
                        "y_data": 120
                    },
                    {
                        "x_data": 128,
                        "y_data": 120
                    },
                    {
                        "x_data": 129,
                        "y_data": 121
                    },
                    {
                        "x_data": 130,
                        "y_data": 121
                    },
                    {
                        "x_data": 131,
                        "y_data": 121
                    },
                    {
                        "x_data": 132,
                        "y_data": 121
                    },
                    {
                        "x_data": 133,
                        "y_data": 122
                    },
                    {
                        "x_data": 134,
                        "y_data": 122
                    },
                    {
                        "x_data": 135,
                        "y_data": 122
                    },
                    {
                        "x_data": 136,
                        "y_data": 122
                    },
                    {
                        "x_data": 137,
                        "y_data": 123
                    },
                    {
                        "x_data": 138,
                        "y_data": 123
                    },
                    {
                        "x_data": 139,
                        "y_data": 123
                    },
                    {
                        "x_data": 140,
                        "y_data": 123
                    },
                    {
                        "x_data": 141,
                        "y_data": 124
                    },
                    {
                        "x_data": 142,
                        "y_data": 124
                    },
                    {
                        "x_data": 143,
                        "y_data": 124
                    },
                    {
                        "x_data": 144,
                        "y_data": 124
                    },
                    {
                        "x_data": 145,
                        "y_data": 100
                    },
                    {
                        "x_data": 146,
                        "y_data": 100
                    },
                    {
                        "x_data": 147,
                        "y_data": 100
                    },
                    {
                        "x_data": 148,
                        "y_data": 100
                    },
                    {
                        "x_data": 149,
                        "y_data": 100
                    },
                    {
                        "x_data": 150,
                        "y_data": 145
                    },
                    {
                        "x_data": 151,
                        "y_data": 145
                    },
                    {
                        "x_data": 152,
                        "y_data": 145
                    },
                    {
                        "x_data": 153,
                        "y_data": 145
                    },
                    {
                        "x_data": 154,
                        "y_data": 145
                    },
                    {
                        "x_data": 155,
                        "y_data": 145
                    },
                    {
                        "x_data": 156,
                        "y_data": 146
                    },
                    {
                        "x_data": 157,
                        "y_data": 146
                    },
                    {
                        "x_data": 158,
                        "y_data": 146
                    },
                    {
                        "x_data": 159,
                        "y_data": 146
                    },
                    {
                        "x_data": 160,
                        "y_data": 146
                    },
                    {
                        "x_data": 161,
                        "y_data": 146
                    },
                    {
                        "x_data": 162,
                        "y_data": 147
                    },
                    {
                        "x_data": 163,
                        "y_data": 147
                    },
                    {
                        "x_data": 164,
                        "y_data": 147
                    },
                    {
                        "x_data": 165,
                        "y_data": 147
                    },
                    {
                        "x_data": 166,
                        "y_data": 147
                    },
                    {
                        "x_data": 167,
                        "y_data": 147
                    },
                    {
                        "x_data": 168,
                        "y_data": 148
                    },
                    {
                        "x_data": 169,
                        "y_data": 148
                    },
                    {
                        "x_data": 170,
                        "y_data": 148
                    },
                    {
                        "x_data": 171,
                        "y_data": 148
                    },
                    {
                        "x_data": 172,
                        "y_data": 148
                    },
                    {
                        "x_data": 173,
                        "y_data": 148
                    },
                    {
                        "x_data": 174,
                        "y_data": 149
                    },
                    {
                        "x_data": 175,
                        "y_data": 149
                    },
                    {
                        "x_data": 177,
                        "y_data": 149
                    },
                    {
                        "x_data": 178,
                        "y_data": 149
                    },
                    {
                        "x_data": 179,
                        "y_data": 149
                    },
                    {
                        "x_data": 180,
                        "y_data": 120
                    },
                    {
                        "x_data": 181,
                        "y_data": 120
                    },
                    {
                        "x_data": 182,
                        "y_data": 120
                    },
                    {
                        "x_data": 183,
                        "y_data": 120
                    },
                    {
                        "x_data": 184,
                        "y_data": 121
                    },
                    {
                        "x_data": 185,
                        "y_data": 121
                    },
                    {
                        "x_data": 186,
                        "y_data": 121
                    },
                    {
                        "x_data": 187,
                        "y_data": 121
                    },
                    {
                        "x_data": 188,
                        "y_data": 122
                    },
                    {
                        "x_data": 189,
                        "y_data": 122
                    },
                    {
                        "x_data": 190,
                        "y_data": 122
                    },
                    {
                        "x_data": 191,
                        "y_data": 122
                    },
                    {
                        "x_data": 192,
                        "y_data": 123
                    },
                    {
                        "x_data": 193,
                        "y_data": 123
                    },
                    {
                        "x_data": 194,
                        "y_data": 123
                    },
                    {
                        "x_data": 195,
                        "y_data": 123
                    },
                    {
                        "x_data": 196,
                        "y_data": 124
                    },
                    {
                        "x_data": 197,
                        "y_data": 124
                    },
                    {
                        "x_data": 198,
                        "y_data": 124
                    },
                    {
                        "x_data": 199,
                        "y_data": 124
                    },
                    {
                        "x_data": 202,
                        "y_data": 201
                    },
                    {
                        "x_data": 203,
                        "y_data": 101
                    },
                    {
                        "x_data": 204,
                        "y_data": 101
                    },
                    {
                        "x_data": 205,
                        "y_data": 101
                    },
                    {
                        "x_data": 206,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "What is the relationship between School_ID and All_Games_Percent , and group by attribute ACC_Home?",
            "Visualize the relationship between School_ID and All_Games_Percent , and group by attribute ACC_Home.",
            "Show me about the correlation between School_ID and All_Games_Percent , and group by attribute ACC_Home in a scatter chart.",
            "Draw a scatter chart about the correlation between School_ID and All_Games_Percent , and group by attribute ACC_Home.",
            "A scatter chart shows the correlation between School_ID and All_Games_Percent , and group by attribute ACC_Home.",
            "Show school id vs all_games_percent as scatter plot use a different color for each ACC_Home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.6,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.706,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Master_Index",
            "CMI_Cross_References"
        ],
        "db_id": "local_govt_mdm",
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart, and I want to display bars from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Volkman, Mills and Ferry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Schmitt-Lang",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt, Kertzmann and Lubowitz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reynolds-McClure",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cmi_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(cmi_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between employee_id and commission_pct .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize the relationship between employee_id and commission_pct .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a scatter chart about the correlation between employee_id and commission_pct .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, what is the relationship between employee_id and commission_pct ?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the correlation between employee_id and commission_pct in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 178,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 201,
                        "y_data": 0
                    },
                    {
                        "x_data": 202,
                        "y_data": 0
                    },
                    {
                        "x_data": 203,
                        "y_data": 0
                    },
                    {
                        "x_data": 204,
                        "y_data": 0
                    },
                    {
                        "x_data": 205,
                        "y_data": 0
                    },
                    {
                        "x_data": 206,
                        "y_data": 0
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the average of salary over the hire_date bin hire_date by weekday by a bar chart, and show in desc by the Y.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, show y axis in descending order please.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart, could you show in desc by the total number?",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday, rank by the mean salary from high to low please.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and show y axis in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 7560
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6121.428571428572
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6028.571428571428
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 5950
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5746.666666666667
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5740
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5646.153846153846
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "List the number of each company whose office is in the building in a bar chart, list from low to high by the Y-axis.",
            "Return a bar chart showing the number of each company whose office is located in the building, show y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Citigroup",
                        "y_data": 1
                    },
                    {
                        "x_data": "Industrial and Commercial Bank of China",
                        "y_data": 1
                    },
                    {
                        "x_data": "JPMorgan Chase",
                        "y_data": 1
                    },
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Total",
                        "y_data": 1
                    },
                    {
                        "x_data": "BNP Paribas",
                        "y_data": 2
                    },
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 2
                    },
                    {
                        "x_data": "General Electric",
                        "y_data": 2
                    },
                    {
                        "x_data": "HSBC",
                        "y_data": 2
                    },
                    {
                        "x_data": "Petrobras",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a histogram to show the date and the amount for all the payments processed with Visa, order in desc by the X please.",
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart, display in descending by the Date_Payment_Made please.",
            "Which Payments were processed with Visa? List the date and the amount using a bar chart, and could you show in desc by the bar please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-24",
                        "y_data": 7343
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 459407
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 155654
                    },
                    {
                        "x_data": "2017-05-03",
                        "y_data": 172309
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Amount_Payment"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Compute the number of each type of job ids for employees who make more than the highest-earning employee with title PU_MAN, with a bar chart, display y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and list by the Y from high to low.",
            "Return a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, show y axis from high to low order.",
            "Show me about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart, show by the total number in descending please.",
            "Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, I want to display from high to low by the Y-axis please.",
            "Draw a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, sort in descending by the total number.",
            "Stacked bar chart of total number of shop id for with each Is_full_time in each start from, show by the total number in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 11,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "A scatter chart showing the correlation between age and purchase time for each coffee shop."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 26,
                        "y_data": 42,
                        "classify": "Bridgeport"
                    },
                    {
                        "x_data": 26,
                        "y_data": 33,
                        "classify": "Cheshire"
                    },
                    {
                        "x_data": 44,
                        "y_data": 50,
                        "classify": "Cheshire"
                    },
                    {
                        "x_data": 18,
                        "y_data": 29,
                        "classify": "Hartford"
                    },
                    {
                        "x_data": 20,
                        "y_data": 34,
                        "classify": "Hartford"
                    },
                    {
                        "x_data": 27,
                        "y_data": 51,
                        "classify": "Hartford"
                    },
                    {
                        "x_data": 18,
                        "y_data": 35,
                        "classify": "Waterbury"
                    },
                    {
                        "x_data": 24,
                        "y_data": 45,
                        "classify": "Waterbury"
                    },
                    {
                        "x_data": 27,
                        "y_data": 51,
                        "classify": "Waterbury"
                    },
                    {
                        "x_data": 41,
                        "y_data": 67,
                        "classify": "Waterbury"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Time_of_purchase",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "How many trains in each name category, give me the result with a bar chart.",
            "Compare the total number of trains in each name by a bar graph.",
            "Give me a bar chart for how many name of each name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andaman Exp",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ballarshah-Mumbai Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kazipet-Nagpur Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucknow-Chennai Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nagpur-Kazipet Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nandigram Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sewagram Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wardha-Ballarshah Pass",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each county along with the corresponding number of delegates from that county with a bar chart.",
            "Show the name of each county along with the corresponding number of delegates from that county. Plot them as bar chart.",
            "For each county, find the name of the county and the number of delegates from that county. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the correlation between commission_pct and manager_id in a scatter chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a scatter chart about the correlation between commission_pct and manager_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a scatter chart about the correlation between commission_pct and manager_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a scatter chart about the correlation between commission_pct and manager_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a scatter chart shows the correlation between commission_pct and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 0
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 102
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0.4,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 149
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 201
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "How many employees does each role have? List role id and number of employees in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ED",
                        "y_data": 2
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR",
                        "y_data": 1
                    },
                    {
                        "x_data": "PT",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, I want to display bar from low to high order.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, I want to display bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cindy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Emelie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Johann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorenz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nora",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orlando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachelle",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rolando",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, show me the trend about department_id over hire_date with a line chart.",
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of department_id over hire_date .",
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of department_id over hire_date .",
            "For those employees who was hired before 2002-06-21, return a line chart about the change of department_id over hire_date .",
            "For those employees who was hired before 2002-06-21, give me the trend about department_id over hire_date .",
            "For those employees who was hired before 2002-06-21, show me about the change of department_id over hire_date in a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 10
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 40
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses are in the Psychology department for each year? Return a line chart, rank in asc by the X-axis.",
            "How many courses are in the Psychology department for each year? Return a line chart, rank by the X-axis from low to high.",
            "Find the number of courses offered by Psychology department in each year with a line chart, and could you sort by the year in asc?",
            "Find the number of courses offered by Psychology department in each year with a line chart, could you sort by the year in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number.",
            "Give me a bar chart for how many date of transaction of each date of transaction"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road, display in desc by the x axis.",
            "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, display in desc by the x axis please.",
            "Visualize a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, show in descending by the bars please.",
            "Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, list x axis in descending order please.",
            "Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and display from high to low by the X-axis.",
            "Bar chart x axis acc road y axis total number of school id, display from high to low by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "\u539f\u59cb\u6570\u636e\u6ca1\u6709weekday\u4fe1\u606f, list in desc by the y axis.",
            "Give the years and official names of the cities of each competition, and sort the number of year in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show the names of singers and the total sales of their songs in a bar chart.",
            "Show the names of singers and the total sales of their songs. Visualize by bar chart.",
            "For each singer name, what is the total sales for their songs. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christy Walton",
                        "y_data": 651421
                    },
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 292000
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 335000
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 275000
                    },
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 1646407
                    },
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 261000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T2.Sales)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart.",
            "A bar chart shows the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Return a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Draw a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday.",
            "Stacked bar chart of mean employee id for with each Is_full_time in each start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and salary , I want to list by the Y-axis in descending please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and salary , and list by the Y in desc please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and salary in a bar chart, I want to list by the Y-axis in descending please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the phone_number by a bar chart, and order from high to low by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and salary , order from high to low by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "515.123.5555",
                        "y_data": 13000
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 12000
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 10000
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 8300
                    },
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 7000
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 6500
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 6000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the booking end dates of the apartments with type code \"Duplex\"? Bin the year into weekday interval with a bar chart, I want to display y axis in desc order.",
            "Return the booking end dates for the apartments that have type code \"Duplex\" and bin the year into weekday interval with a bar chart, order by the the number of booking start date in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "How many faculty members do we have for each rank? Show bar chart, order from low to high by the y axis please.",
            "Show the number of faculty for each rank in a bar chart, and I want to list by the total number of count(*) from low to high.",
            "Bar chart of sum count(*) from each rank, show total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return a bar chart showing the minimum room count of apartments in different type, could you display y axis from high to low order?",
            "Bar graph to show minimal room count from different apt type code, and I want to display from high to low by the y-axis.",
            "Show the minimum room count of apartments in different type with a bar chart, and I want to rank by the Y-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Studio",
                        "y_data": 6
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Duplex",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(room_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of salary bin hire_date by weekday, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 6525
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6620
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 7590.909090909091
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3280
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6357.142857142857
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4933.333333333333
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 7733.333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "What is the number of documents for each document name? Return a bar chart, and display by the names in descending please.",
            "Show the number of documents for each document name in a bar chart, and list from high to low by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Welcome to NY",
                        "y_data": 2
                    },
                    {
                        "x_data": "Summer Show",
                        "y_data": 1
                    },
                    {
                        "x_data": "Palm reading",
                        "y_data": 1
                    },
                    {
                        "x_data": "Learning French",
                        "y_data": 1
                    },
                    {
                        "x_data": "How to write a CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "How Google people work",
                        "y_data": 1
                    },
                    {
                        "x_data": "Do not panic",
                        "y_data": 1
                    },
                    {
                        "x_data": "Customer reviews",
                        "y_data": 3
                    },
                    {
                        "x_data": "About Korea",
                        "y_data": 1
                    },
                    {
                        "x_data": "A history of Arts",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Orders",
            "ORDER_ITEMS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "What are the number of the actual delivery dates of orders with quantity 1?",
            "A line chart for what are the number of the actual delivery dates of orders with quantity 1?",
            "What are the actual delivery dates of orders with quantity 1, and count them by a line chart",
            "List the number of the actual delivery date for all the orders with quantity 1",
            "List the actual delivery date for all the orders with quantity , and count them by a line chart",
            "A line chart for listing the number of the actual delivery date for all the orders with quantity 1"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1990-11-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992-07-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "1993-09-16",
                        "y_data": 2
                    },
                    {
                        "x_data": "1998-08-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2004-03-27",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011-04-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-20",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Actual_Delivery_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Actual_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students in each major. Show the correlation.",
            "Return a scatter chart on how many students are there in each major?",
            "Display a scatter chart for how many students are there in each major?",
            "How many students are there in each major. Plot them as scatter chart.",
            "Show me a scatter plot of count(*) and major for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 50
                    },
                    {
                        "x_data": 1,
                        "y_data": 100
                    },
                    {
                        "x_data": 6,
                        "y_data": 520
                    },
                    {
                        "x_data": 2,
                        "y_data": 540
                    },
                    {
                        "x_data": 5,
                        "y_data": 550
                    },
                    {
                        "x_data": 18,
                        "y_data": 600
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Major"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "affiliated_with",
            "department"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Show how many physicians for each department name they primarily affiliated in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "General Medicine",
                        "y_data": 5
                    },
                    {
                        "x_data": "Psychiatry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Surgery",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the number of trains for each station, as well as the station network name. Show the result with a bar graph.",
            "Visualize a bar chart for the number of trains for each station by the station network name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Amersham",
                        "y_data": 3
                    },
                    {
                        "x_data": "Bushey",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 2
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carpenders Park",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chafford Hundred",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chalfont & Latimer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chesham",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cheshunt",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "network_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Bar graph to show the number of name from different name, display by the x axis in desc.",
            "Count the names of each high schooler using a bar chart, display by the x axis in desc.",
            "Can you show me a bar chart to answer how many people with different names for each high schooler?, and show from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 2
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and display by the total number in asc.",
            "Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and rank total number in ascending order.",
            "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart, show from low to high by the Y.",
            "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, show from low to high by the Y.",
            "Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road, show from low to high by the Y.",
            "Give me a bar chart for total number of team id of each acc road, and order y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergies with number of students affected Show bar chart, could you show in descending by the total number?",
            "Show the total number from each allergy, and I want to show from high to low by the total number please.",
            "Show all allergies with number of students affected with a bar chart, display the total number in desc order.",
            "Return a bar chart on how many students have each different allergy?, and display the total number in desc order.",
            "How many students have each different allergy Show bar chart, and sort by the Y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 13
                    },
                    {
                        "x_data": "Nuts",
                        "y_data": 11
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 6
                    },
                    {
                        "x_data": "Soy",
                        "y_data": 4
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 4
                    },
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 3
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 3
                    },
                    {
                        "x_data": "Anchovies",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rodent",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the correlation between ID and meter_100 in a scatter chart.",
            "Draw a scatter chart about the correlation between ID and meter_100 .",
            "What is the relationship between ID and meter_100 ?",
            "Return a scatter chart about the correlation between ID and meter_100 .",
            "Visualize the relationship between ID and meter_100 .",
            "Show me a scatter plot of id and meter_100 for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 7,
                        "y_data": 57.31
                    },
                    {
                        "x_data": 4,
                        "y_data": 57.35
                    },
                    {
                        "x_data": 5,
                        "y_data": 57.66
                    },
                    {
                        "x_data": 8,
                        "y_data": 55.67
                    },
                    {
                        "x_data": 1,
                        "y_data": 57.34
                    },
                    {
                        "x_data": 2,
                        "y_data": 57.34
                    },
                    {
                        "x_data": 6,
                        "y_data": 57.84
                    },
                    {
                        "x_data": 3,
                        "y_data": 57.31
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "How many faculty members do we have for each rank? Show bar chart, rank X-axis from high to low order please.",
            "Show the number of faculty for each rank in a bar chart, and list X-axis in descending order.",
            "Bar chart of sum count(*) from each rank, I want to display from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "What is average age for different job title Visualize by bar chart, I want to rank by the bars from low to high.",
            "A bar chart about what is average age for different job title?, and display names from low to high order.",
            "Display a bar chart for how old is the average person for each job?, sort by the X in ascending.",
            "Visualize a bar chart for what is average age for different job title?, I want to rank by the bars from low to high.",
            "Return a histogram on how old is the average person for each job?, and display by the X-axis in asc.",
            "How old is the average person for each job Show bar chart, sort by the X in ascending.",
            "Bar chart x axis job y axis the average of age, display by the x axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "student",
                        "y_data": 25.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "invoices"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "List the number of invoices from the US, grouped by state Visualize by bar chart, list by the billing_state in descending.",
            "Show me a bar chart for how many invoices were billed from each state?, show by the bar in desc.",
            "List the number of invoices from the US, grouped by state by a bar chart, and list X from high to low order.",
            "How many invoices were billed from each state Plot them as bar chart, list by the X-axis in desc.",
            "Return a histogram on how many invoices were billed from each state?, order in descending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "WI",
                        "y_data": 7
                    },
                    {
                        "x_data": "WA",
                        "y_data": 7
                    },
                    {
                        "x_data": "UT",
                        "y_data": 7
                    },
                    {
                        "x_data": "TX",
                        "y_data": 7
                    },
                    {
                        "x_data": "NY",
                        "y_data": 7
                    },
                    {
                        "x_data": "NV",
                        "y_data": 7
                    },
                    {
                        "x_data": "MA",
                        "y_data": 7
                    },
                    {
                        "x_data": "IL",
                        "y_data": 7
                    },
                    {
                        "x_data": "FL",
                        "y_data": 7
                    },
                    {
                        "x_data": "CA",
                        "y_data": 21
                    },
                    {
                        "x_data": "AZ",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "billing_state",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a stacked bar chart. The x-axis is the instructor's first name and group by course code.",
            "How many courses each teacher taught? Show me a stacked bar chart. The x-axis is the instructor's first name and group by course code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 2,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-362"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show the names and ids of tourist attractions that are visited at least two times with a bar chart, and order by the x axis from high to low.",
            "Show the names and ids of tourist attractions that are visited at least two times Visualize by bar chart, I want to list in descending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "parking",
                        "y_data": 9919
                    },
                    {
                        "x_data": "jungle cruise",
                        "y_data": 8698
                    },
                    {
                        "x_data": "fun games",
                        "y_data": 6523
                    },
                    {
                        "x_data": "exploration trial",
                        "y_data": 6852
                    },
                    {
                        "x_data": "US museum",
                        "y_data": 6476
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Tourist_Attraction_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 890
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 980
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1040
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 930
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 910
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 910
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Show different occupations along with the number of players in each occupation Show bar chart, and show y-axis from high to low order.",
            "Bar chart x axis occupation y axis the total number, and rank Y from high to low order please.",
            "Show different occupations along with the number of players in each occupation with a bar chart, and sort by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Student",
                        "y_data": 2
                    },
                    {
                        "x_data": "Retired",
                        "y_data": 2
                    },
                    {
                        "x_data": "Parliamentarian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Small Businessman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Self Employed / Consultant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Researcher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Product Consultant - MLCC",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ministerial Assistant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Locomotive Engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Distribution Centre Associate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Design Coordinator",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Occupation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "How many accounts are opened in each year? Show a line chart, and list by the X-axis from low to high.",
            "Show the number of accounts opened in each year for all accounts in a line chart, list by the X-axis from low to high.",
            "I want to see trend of how many date account opened by date account opened, and show by the X from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0
                    },
                    {
                        "x_data": "2014",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2016",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4261
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "A pie chart showing the minimum weight for each gender.",
            "What is the minimum weights for people of each sex? Show a pie chart.",
            "Create a pie chart showing minimal weight across sex."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 90
                    },
                    {
                        "x_data": "M",
                        "y_data": 82
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(weight)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, and display in desc by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Furniture",
                        "y_data": 1,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 5,
                        "classify": "Denesik and Sons Party"
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 0,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 1,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 1,
                        "classify": "Reinger, Hudson and Nolan Group"
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1,
                        "classify": "Robel-Schulist Group"
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 0,
                        "classify": "Robel-Schulist Group"
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 2,
                        "classify": "Robel-Schulist Group"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_to_be_destroyed"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the employee ids and the number of documents destroyed by each employee by a scatter chart.",
            "Show the employee ids and the number of documents destroyed by each employee. Show the correlation.",
            "Draw a scatter chart for what are the id of each employee and the number of document destroyed by that employee?",
            "A scatter chart about what are the id of each employee and the number of document destroyed by that employee?",
            "What are the id of each employee and the number of document destroyed by that employee. Visualize by scatter chart.",
            "Show me a scatter plot of destroyed by employee id and the total number for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 38,
                        "y_data": 1
                    },
                    {
                        "x_data": 55,
                        "y_data": 1
                    },
                    {
                        "x_data": 99,
                        "y_data": 2
                    },
                    {
                        "x_data": 136,
                        "y_data": 2
                    },
                    {
                        "x_data": 138,
                        "y_data": 1
                    },
                    {
                        "x_data": 156,
                        "y_data": 1
                    },
                    {
                        "x_data": 173,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Destroyed_by_Employee_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assessment_Notes"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "What are the dates of the assessment notes, and count them by a line chart, and display in descending by the X-axis please.",
            "I want to see trend of the number of date of notes by date of notes, order X in descending order.",
            "A line chart for what are the number of the dates of the assessment notes?, and sort by the x-axis from high to low please.",
            "What are the number of the dates of the assessment notes?, sort by the x-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016~2017",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 0
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 3
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 2
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 2
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 1
                    },
                    {
                        "x_data": "1971~1975",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_notes",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_notes)"
                }
            }
        }
    },
    {
        "tables_used": [
            "playlists"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "What are the names of all the playlists, and count them by a bar chart, and could you rank in descending by the the number of name?",
            "A bar chart for what are the number of the names of all the playlists?, and I want to sort by the Y from high to low.",
            "What are the number of the names of all the playlists?, and could you sort by the Y in descending please?",
            "List the name of all playlist, and count them by a bar chart, sort Y from high to low order please.",
            "A bar chart for listing the number of the name of all playlist, and show by the the number of name from high to low.",
            "Bar chart x axis name y axis how many name, could you sort by the Y in descending please?",
            "List the number of the name of all playlist, and show by the the number of name from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV Shows",
                        "y_data": 2
                    },
                    {
                        "x_data": "Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Movies",
                        "y_data": 2
                    },
                    {
                        "x_data": "Audiobooks",
                        "y_data": 2
                    },
                    {
                        "x_data": "On-The-Go 1",
                        "y_data": 1
                    },
                    {
                        "x_data": "Music Videos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Heavy Metal Classic",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grunge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - The Basics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - Next Steps",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - Deep Cuts",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brazilian Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "90\u2019s Music",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses",
            "Ref_budget_codes"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents for different budget type description in a bar chart, and I want to order by the y-axis in asc.",
            "Return a bar chart to show how many documents for different budget type description, and list the number of budget type description in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Organisation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Self founded",
                        "y_data": 2
                    },
                    {
                        "x_data": "Government",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Budget_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, rank by the Dates_active in desc.",
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, and I want to rank in descending by the x-axis.",
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, rank by the Dates_active in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "September7\u2013September17",
                        "y_data": 3
                    },
                    {
                        "x_data": "September18\u2013September25",
                        "y_data": 2
                    },
                    {
                        "x_data": "May19 \u2013October26",
                        "y_data": 71
                    },
                    {
                        "x_data": "August5\u2013August14",
                        "y_data": 52
                    },
                    {
                        "x_data": "August3\u2013August10",
                        "y_data": 7
                    },
                    {
                        "x_data": "August26\u2013September2",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Dates_active",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "What is the name of the technician whose team is not 'NYY', and count them by a bar chart, show by the total number from high to low.",
            "List the number of the name of technicians whose team is not \"NYY\", could you order from high to low by the Y-axis please?",
            "A bar chart for listing the number of the name of technicians whose team is not \"NYY\", order by the y axis in desc please.",
            "List the name of technicians whose team is not \"NYY\", and count them by a bar chart, could you list Y from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mickey Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lou Boudrea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "addresses"
        ],
        "db_id": "customer_deliveries",
        "nl_queries": [
            "List the state names and the number of customers living in each state with a bar chart.",
            "List the state names and the number of customers living in each state."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "California",
                        "y_data": 2
                    },
                    {
                        "x_data": "Colorado",
                        "y_data": 2
                    },
                    {
                        "x_data": "Idaho",
                        "y_data": 1
                    },
                    {
                        "x_data": "Illinois",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michigan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nebraska",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tennessee",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wyoming",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state_province_county",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Create a bar chart showing how many location across location, could you rank from high to low by the names?",
            "Give me a bar chart, that group by location and count them, show by the Location in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Various locations",
                        "y_data": 2
                    },
                    {
                        "x_data": "RAI Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam, Heineken Music Hall Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Heineken Music Hall Amsterdam",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Display a bar chart for how many climbers are from each country?, and list from low to high by the the total number please.",
            "Give me a histogram for how many climbers are from each country?, and show by the y axis from low to high.",
            "How many climbers are from each country, and sort by the Y in ascending.",
            "Bar chart of the total number from each country, sort by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Switzerland",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 3
                    },
                    {
                        "x_data": "West Germany",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute founder, and could you list in descending by the y axis?",
            "For those records from the products and each product's manufacturer, give me the comparison about revenue over the name , and group by attribute founder by a bar chart, could you show Y from high to low order?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute founder, show by the y axis in descending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute founder in a bar chart, and show in desc by the total number.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and revenue , and group by attribute founder, and could you list in descending by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart, list in ascending by the Y-axis.",
            "Bar chart x axis date in location from y axis the number of date in location from, and sort by the y axis in asc.",
            "How many documents in different starting date? Return a bar chart binning starting date by weekday interval, could you display in ascending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Plot how many minister by grouped by minister as a bar graph, and list in desc by the y axis.",
            "Give me a bar chart showing the total number of each minister, and sort y axis in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kojo Botsio (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Return a bar chart showing the number of templates for each template type code, and could you display in descending by the total number?",
            "Show the number of template type code from each template type code, and rank in desc by the y-axis.",
            "How many templates for each template type code? Show a bar chart, rank by the the number of template type code in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    },
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Template_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of each ship type? Give me a pie chart.",
            "Give me the proportion of the total number of every ship type.",
            "Show me a pie chart showing the total number of each ship type.",
            "I want to know the proportion of each type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Show me total number of vote id by state in a histogram, and could you rank x axis from high to low order please?",
            "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, could you list in descending by the X please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "NY",
                        "y_data": 3
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 5
                    },
                    {
                        "x_data": "CA",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(vote_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Draw a bar chart showing the total number of every ship type by categorizing by nationality, and I want to rank by the Y-axis in desc.",
            "Stack bar chart of the number of type vs Nationality based on type, could you order by the y-axis from high to low?",
            "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality, and order by the Y-axis in desc.",
            "What is the total number of every ship type by categorizing by nationality?, and could you sort in desc by the the number of type please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cargo ship",
                        "y_data": 3,
                        "classify": "United Kingdom"
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 2,
                        "classify": "United Kingdom"
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 2,
                        "classify": "United States"
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 1,
                        "classify": "United States"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "addresses"
        ],
        "db_id": "customer_deliveries",
        "nl_queries": [
            "List the state names and the number of customers living in each state with a bar chart, display bar from high to low order please.",
            "List the state names and the number of customers living in each state, rank by the names in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wyoming",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tennessee",
                        "y_data": 4
                    },
                    {
                        "x_data": "Nebraska",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michigan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Maine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Illinois",
                        "y_data": 1
                    },
                    {
                        "x_data": "Idaho",
                        "y_data": 1
                    },
                    {
                        "x_data": "Colorado",
                        "y_data": 2
                    },
                    {
                        "x_data": "California",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state_province_county",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "A bar chart for returning the number of the date of birth for all the guests with gender code \"Male\".",
            "Return the date of birth for all the guests with gender code \"Male\", and count them by a bar chart",
            "What are dates of birth of all the guests whose gender is \"Male\", and count them by a bar chart",
            "Return the number of the date of birth for all the guests with gender code \"Male\".",
            "What are the number of dates of birth of all the guests whose gender is \"Male\"?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_birth",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different ending date and bin ending date by year interval with a line chart.",
            "How many documents in different ending date? Return a line chart binning ending date by year interval.",
            "I want to see trend of the number of date in locaton to by date in locaton to"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1976~1979",
                        "y_data": 2
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 4
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 1
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 5
                    },
                    {
                        "x_data": "2012~2015",
                        "y_data": 1
                    },
                    {
                        "x_data": "2016~2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the average capacity for rooms in each building? Draw a bar chart, rank by the X-axis in descending.",
            "Find the average capacity among rooms in each building with a bar chart, I want to sort from high to low by the building please.",
            "Bar chart x axis building y axis the average of capacity, and sort from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whitman",
                        "y_data": 76
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 93
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 113
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 49.33333333333334
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 60
                    },
                    {
                        "x_data": "Power",
                        "y_data": 11
                    },
                    {
                        "x_data": "Polya",
                        "y_data": 28
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 97
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 92
                    },
                    {
                        "x_data": "Main",
                        "y_data": 26
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 10
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 51
                    },
                    {
                        "x_data": "Grace",
                        "y_data": 34
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 37.5
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 59
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 27
                    },
                    {
                        "x_data": "Drown",
                        "y_data": 18
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 12
                    },
                    {
                        "x_data": "Alumni",
                        "y_data": 36.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, and rank Founder from high to low order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, and show from high to low by the bar please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, and rank by the X-axis in desc please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of revenue , and group by attribute founder in a bar chart, I want to list X in desc order please.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of revenue , and group by attribute founder, sort from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 60
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 300
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "James",
                        "y_data": 150
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "has_amenity",
            "dorm_amenity"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Show the number of students who are living in a dorm with a TV Lounge and group by first name in a bar chart, and show y-axis from high to low order.",
            "How many students are living in a dorm with a TV Lounge? Show a bar chart grouping by first name, and I want to display y-axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Eric",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 2
                    },
                    {
                        "x_data": "David",
                        "y_data": 2
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinesh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Derek",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A scatter chart shows the correlation between Team_ID and ACC_Percent , and group by attribute ACC_Regular_Season.",
            "Visualize the relationship between Team_ID and ACC_Percent , and group by attribute ACC_Regular_Season.",
            "Return a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute ACC_Regular_Season.",
            "Draw a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute ACC_Regular_Season.",
            "Show me about the correlation between Team_ID and ACC_Percent , and group by attribute ACC_Regular_Season in a scatter chart.",
            "Show team id vs acc_percent as scatter plot use a different color for each ACC_Regular_Season"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 0.625,
                        "classify": "10\u20136"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "13\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.563,
                        "classify": "9\u20137"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "acceptance"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Group by the result and count them by a bar chart.",
            "For each submission, group its acceptance result and count them. Visualize them in a bar chart.",
            "Bar graph to show how many result from different result"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accepted",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rejected",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Show me a line chart for what is the average weight and year for each year?, and rank x-axis in desc order.",
            "Show me a line chart of how mean weight change over the year, and I want to display in desc by the Year.",
            "Visualize a line chart for what is the average weight of cars each year?, rank in desc by the X.",
            "Give me a tendency forwhat is the average weight of cars each year?, display in desc by the Year.",
            "What is the average weight of cars each year, and I want to sort x axis in descending order.",
            "Show me the trend about what is the average weight and year for each year?, and display in desc by the Year.",
            "What is the average weight and year for each year Plot them as line chart, I want to display in desc by the Year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1982-01-01",
                        "y_data": 2453.548387096774
                    },
                    {
                        "x_data": "1981-01-01",
                        "y_data": 2532.1666666666665
                    },
                    {
                        "x_data": "1980-01-01",
                        "y_data": 2436.655172413793
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 3055.3448275862074
                    },
                    {
                        "x_data": "1978-01-01",
                        "y_data": 2861.805555555556
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 2997.357142857143
                    },
                    {
                        "x_data": "1976-01-01",
                        "y_data": 3078.7352941176473
                    },
                    {
                        "x_data": "1975-01-01",
                        "y_data": 3176.8
                    },
                    {
                        "x_data": "1974-01-01",
                        "y_data": 2877.925925925926
                    },
                    {
                        "x_data": "1973-01-01",
                        "y_data": 3419.025
                    },
                    {
                        "x_data": "1972-01-01",
                        "y_data": 3237.714285714286
                    },
                    {
                        "x_data": "1971-01-01",
                        "y_data": 2960.3448275862074
                    },
                    {
                        "x_data": "1970-01-01",
                        "y_data": 3441.3142857142852
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "List all the log entry descriptions and count them using a bar chart, sort in descending by the Y-axis.",
            "What is the number of entry descriptions of each problem?, list Y-axis from high to low order.",
            "Draw a bar chart for what is the number of entry descriptions of each problem?, could you show by the total number in descending?",
            "Bar chart x axis log entry description y axis the number of log entry description, list by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 3
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "w",
                        "y_data": 1
                    },
                    {
                        "x_data": "v",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "p",
                        "y_data": 1
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 1
                    },
                    {
                        "x_data": "d",
                        "y_data": 1
                    },
                    {
                        "x_data": "b",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(log_entry_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Show me how many year by year in a histogram, could you display y axis in asc order?",
            "Bin the Year into weekday interval, then group and count by Year, and I want to display by the how many year in ascending.",
            "Give a bar chart that bins year into weekday interval, group by year and count them, and I want to sort in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Return a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and could you display by the X in desc?",
            "Give me line charts of worldwide gross sum employee id over year start from by major genres Is_full_time, rank in desc by the X-axis.",
            "Visualize a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, order in desc by the X-axis.",
            "A line chart shows the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, order in desc by the X-axis.",
            "For the sum of Employee_ID, Start_from, visualize the trend, could you show in descending by the X?",
            "Draw a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, could you rank by the x axis in desc?",
            "Give me the trend about the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and could you display by the X in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 7,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A pie chart about the proportion of the number of faults for different fault description recorded in the logs."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "failed parts",
                        "y_data": 6
                    },
                    {
                        "x_data": "system error",
                        "y_data": 9
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_description)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_description"
                }
            }
        }
    },
    {
        "tables_used": [
            "PRODUCTS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show me a bar chart for what are the different product names? What is the average product price for each of them?",
            "A bar chart about what are the different product names? What is the average product price for each of them?",
            "What are the different product names? What is the average product price for each of them. Show bar chart.",
            "For each distinct product name, show its average product price.",
            "Give me a bar chart for mean product price of each product name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "dinning",
                        "y_data": 238704.33333333328
                    },
                    {
                        "x_data": "film",
                        "y_data": 11385515.333333336
                    },
                    {
                        "x_data": "photo",
                        "y_data": 5102691.666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Product_Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart about what are the title and maximum price of each film?",
            "Return a bar chart on what are the title and maximum price of each film?",
            "What are the title and maximum price of each film.",
            "Give me the title and highest price for each film in a bar chart.",
            "Give me the title and highest price for each film. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 15.99
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12.99
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8.99
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9.99
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12.99
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Group and count the move in date in a bar chart.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them.",
            "Draw a bar chart of date moved in versus how many date moved in"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    },
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart showing the number of last name for all female students Their sex is F, list by the the number of lname in desc please.",
            "A bar chart about the number of last name for all female students whose sex is F, rank in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Smith",
                        "y_data": 2
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate"
        ],
        "db_id": "debate",
        "nl_queries": [
            "A pie chart for listing the number of the venues of debates in ascending order of the number of audience.",
            "List the venues of debates in ascending order of the number of audience, and count them by a pie chart",
            "List the number of the venues of debates in ascending order of the number of audience."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doha , Qatar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Find the number of booking start date for the apartments that have more than two bedrooms for each year with a bar chart, and list by the Y in desc.",
            "What is the number of booking start dates of the apartments with more than 2 bedrooms for each year? Return a bar chart, I want to sort in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 9
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and could you order in descending by the x-axis?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart, I want to sort by the x-axis in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, I want to sort by the x-axis in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, show by the names in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, and could you order in descending by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.33333333333333
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, could you sort by the names in asc?",
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, sort by the names from low to high.",
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, order names in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "August26\u2013September2",
                        "y_data": 7
                    },
                    {
                        "x_data": "August3\u2013August10",
                        "y_data": 7
                    },
                    {
                        "x_data": "August5\u2013August14",
                        "y_data": 52
                    },
                    {
                        "x_data": "May19 \u2013October26",
                        "y_data": 71
                    },
                    {
                        "x_data": "September18\u2013September25",
                        "y_data": 2
                    },
                    {
                        "x_data": "September7\u2013September17",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Dates_active",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and department_id , and visualize them by a bar chart, rank by the y axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the last_name by a bar chart, and could you rank from low to high by the DEPARTMENT_ID please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and department_id , list by the total number from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and department_id , sort Y-axis in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and department_id , could you sort in ascending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grant",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 20
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 110
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Show all destinations and the number of flights to each destination Plot them as bar chart, and could you rank in asc by the the total number ?",
            "Draw a bar chart of destination versus the total number, sort Y in asc order.",
            "What are the destinations and number of flights to each one Visualize by bar chart, and I want to sort from low to high by the y-axis.",
            "Show all destinations and the number of flights to each destination by a bar chart, order in ascending by the the total number .",
            "Draw a bar chart for what are the destinations and number of flights to each one?, and order total number from low to high order.",
            "A bar chart about what are the destinations and number of flights to each one?, could you show Y in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Boston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicago",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dallas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sydney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Washington D.C.",
                        "y_data": 1
                    },
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Bar chart x axis state y axis the number of state, I want to sort in descending by the bars please.",
            "What is the number of distinct states? Show me a bar chart, show in desc by the names.",
            "Group by distinct states and them count them in a bar chart, and I want to order by the x axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "NY",
                        "y_data": 2
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "CA",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each instructor in a stacked bar chart The x-axis is instructor's first name and group by course description, and I want to display in asc by the x-axis.",
            "How many courses for each teacher? Show me a stacked bar chart The x-axis is teacher's first name and group by course description, and display by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Show different type codes of products and the number of products with each type code in a bar chart.",
            "Show different type codes of products and the number of products with each type code. Visualize by bar chart.",
            "Give me a bar chart for the total number of each product type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Books",
                        "y_data": 4
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Food",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "student",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total number of students for each department with a bar chart.",
            "How many students are in each department? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 99
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 106
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 92
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 108
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 86
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 98
                    },
                    {
                        "x_data": "English",
                        "y_data": 95
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 97
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 92
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 119
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 85
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 105
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 96
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 109
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 85
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T2.id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the weekday of birth of professors teaching course ACCT-211? Show a bar chart.",
            "What is the weekday of birthdates of the professors in charge of ACCT-211? Visualize with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_DOB",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_DOB)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and department_id in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and department_id , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kimberely",
                        "y_data": 0
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    },
                    {
                        "x_data": "William",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "PURCHASES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, and display y-axis from high to low order.",
            "What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, rank by the the number of purchase details from high to low.",
            "What are the number of the purchase details of transactions with amount bigger than 10000?, rank by the the number of purchase details from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 2
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "purchase_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(purchase_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Draw a bar chart for what is the average high temperature for each day of week?",
            "Return a histogram on what is the average high temperature for each day of week?",
            "What is the average high temperature for each day of week. Plot them as bar chart.",
            "Bar graph to show the average of high temperature from different day of week"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Friday",
                        "y_data": 55
                    },
                    {
                        "x_data": "Monday",
                        "y_data": 56
                    },
                    {
                        "x_data": "Saturday",
                        "y_data": 55
                    },
                    {
                        "x_data": "Sunday",
                        "y_data": 54
                    },
                    {
                        "x_data": "Thursday",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tuesday",
                        "y_data": 58
                    },
                    {
                        "x_data": "Wednesday",
                        "y_data": 58
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "day_of_week",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(high_temperature)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Give me a bar chart for the number of country of each country, and list in descending by the the number of country.",
            "What is the number of singers for each country? Show a bar chart, and I want to rank y-axis in desc order.",
            "Show the number of singers in each country with a bar chart, I want to rank y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, sort x axis from low to high order.",
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, display Date_in_Location_From from low to high order please.",
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and order X in asc order.",
            "Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, and display x-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972~1976",
                        "y_data": 3,
                        "classify": "b"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "b"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 3,
                        "classify": "b"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6,
                        "classify": "b"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 4,
                        "classify": "c"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "c"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 3,
                        "classify": "c"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 7,
                        "classify": "c"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 8,
                        "classify": "e"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 9,
                        "classify": "n"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 6,
                        "classify": "x"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 6,
                        "classify": "x"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 6,
                        "classify": "x"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 10,
                        "classify": "x"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Show me the trend about the average of monthly_rental over date_address_to , and group by attribute other_details with a line chart.",
            "Show me about the change of the average of monthly_rental over date_address_to , and group by attribute other_details in a line chart.",
            "Return a line chart about the change of the average of monthly_rental over date_address_to , and group by attribute other_details.",
            "A line chart shows the change of the average of monthly_rental over date_address_to , and group by attribute other_details",
            "For the average of monthly_rental, date_address_to, visualize the trend.",
            "A line chart shows the trend of the average of monthly_rental over date_address_to , and group by attribute other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 644,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1021.5,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-02-25",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 747,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1113,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 857,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 800,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 865,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 679,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 826,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 620,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1287,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1067,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 894,
                        "classify": "house"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "What is the average rating of songs for each language Plot them as bar chart, and could you list from high to low by the total number?",
            "Show me mean rating by languages in a histogram, order by the mean rating in desc please.",
            "Show me a bar chart for what is the average rating of songs for each language?, and could you sort total number in desc order?",
            "Draw a bar chart for what is the average rating of songs for each language?, order by the mean rating in desc please.",
            "Show me a bar chart for what is the average song rating for each language?, could you sort total number in desc order?",
            "What is the average song rating for each language Plot them as bar chart, could you list from high to low by the total number?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "bangla",
                        "y_data": 7.5
                    },
                    {
                        "x_data": "english",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "languages",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airports"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "Find the altitude (or elevation) of the airports in the city of New York with a bar chart.",
            "What is the altitude (or elevation) of the airports in the city of New York? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "La Guardia Airport",
                        "y_data": 21
                    },
                    {
                        "x_data": "John F Kennedy International Airport",
                        "y_data": 13
                    },
                    {
                        "x_data": "Indianola Municipal Airport",
                        "y_data": 126
                    },
                    {
                        "x_data": "One Police Plaza Heliport",
                        "y_data": 244
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "elevation"
                }
            }
        }
    },
    {
        "tables_used": [
            "player",
            "tryout"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Find the name of all students who were in the tryout sorted in alphabetic order, and count them by a pie chart",
            "A pie chart for what are the number of the names of all students who tried out in alphabetical order?",
            "A pie chart for finding the number of the name of all students who were in the tryout sorted in alphabetic order.",
            "Find the number of the name of all students who were in the tryout sorted in alphabetic order.",
            "What are the number of the names of all students who tried out in alphabetical order?",
            "What are the names of all students who tried out in alphabetical order, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andrew",
                        "y_data": 2
                    },
                    {
                        "x_data": "Blake",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charles",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(pName)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "pName"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and employee_id , and visualize them by a bar chart, sort total number from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and employee_id , could you sort total number from low to high order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and employee_id in a bar chart, and sort by the y-axis in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and employee_id , and display by the total number in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the first_name by a bar chart, and display by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kimberely",
                        "y_data": 178
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 201
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 202
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 203
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 204
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 205
                    },
                    {
                        "x_data": "William",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, and order in asc by the the average of department id.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, list in asc by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, and sort in ascending by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, list in asc by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday, could you rank by the total number in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 20
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 40
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 55
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 70
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and salary , and order total number in descending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and salary , and visualize them by a bar chart, and I want to order by the total number from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of last_name and salary in a bar chart, and display y-axis in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the last_name by a bar chart, display by the Y in descending please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and salary , and display y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hartstein",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 6000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each course description? Show me a bar chart, I want to rank x axis in descending order.",
            "Show the number of courses for each course description in a bar chart, could you order bar from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "How many competitions are held in each city? Draw a bar chart, and could you display bar in descending order?",
            "Show the number of competitions held in each city with a bar chart, list by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Plaster Rock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Perth-Andover",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grand Falls/Grand-Sault",
                        "y_data": 1
                    },
                    {
                        "x_data": "Drummond",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aroostook",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Official_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Official_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Return the lot details, group the lot details, and compute the number of each lot details, list X-axis from low to high order please.",
            "A bar chart groups the lot details, and computes the number of each lot details, I want to display x axis in ascending order.",
            "Bar chart x axis lot details y axis the number of lot details, and sort by the names in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "d",
                        "y_data": 3
                    },
                    {
                        "x_data": "h",
                        "y_data": 2
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 2
                    },
                    {
                        "x_data": "x",
                        "y_data": 1
                    },
                    {
                        "x_data": "z",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Please give me a bar chart showing institution types, along with the number of institutions for each type.",
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart.",
            "Draw a bar chart of type versus the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private",
                        "y_data": 7
                    },
                    {
                        "x_data": "Public",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tribal",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, rank from low to high by the y axis.",
            "Please give me a bar chart showing institution types, along with the number of institutions for each type, could you show from low to high by the y axis?",
            "Draw a bar chart of type versus the total number, and order from low to high by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tribal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Public",
                        "y_data": 3
                    },
                    {
                        "x_data": "Private",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Draw a bar chart about the distribution of login_name and author_tutor_ATB .",
            "A bar chart shows the distribution of login_name and author_tutor_ATB .",
            "Return a bar chart about the distribution of login_name and author_tutor_ATB .",
            "Give me the comparison about author_tutor_ATB over the login_name by a bar chart.",
            "Show me about the distribution of login_name and author_tutor_ATB in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "al75",
                        "y_data": 817
                    },
                    {
                        "x_data": "jmckenzie",
                        "y_data": 331
                    },
                    {
                        "x_data": "dschaefer",
                        "y_data": 229
                    },
                    {
                        "x_data": "clementina29",
                        "y_data": 349
                    },
                    {
                        "x_data": "adam.rippin",
                        "y_data": 159
                    },
                    {
                        "x_data": "fiona77",
                        "y_data": 833
                    },
                    {
                        "x_data": "antonetta19",
                        "y_data": 505
                    },
                    {
                        "x_data": "wlehner",
                        "y_data": 782
                    },
                    {
                        "x_data": "medhurst.alvah",
                        "y_data": 557
                    },
                    {
                        "x_data": "marty.bergnaum",
                        "y_data": 869
                    },
                    {
                        "x_data": "qking",
                        "y_data": 613
                    },
                    {
                        "x_data": "heidenreich.ara",
                        "y_data": 975
                    },
                    {
                        "x_data": "ekshlerin",
                        "y_data": 974
                    },
                    {
                        "x_data": "nellie.mosciski",
                        "y_data": 847
                    },
                    {
                        "x_data": "nyundt",
                        "y_data": 388
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "login_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_tutor_ATB"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses",
            "Ref_budget_codes"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents for different budget type code in a bar chart, order by the names from high to low.",
            "Return a bar chart to show how many documents for different budget type code, I want to list from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SF",
                        "y_data": 2
                    },
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    },
                    {
                        "x_data": "GV",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Budget_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the relationship between the rank and market values of the companies in the banking industry and group by company with a group scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 6,
                        "y_data": 164.3,
                        "classify": "HSBC"
                    },
                    {
                        "x_data": 5,
                        "y_data": 237.4,
                        "classify": "Industrial and Commercial Bank of China"
                    },
                    {
                        "x_data": 9,
                        "y_data": 178.7,
                        "classify": "Wells Fargo"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Rank",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Market_Value",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "patient"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, and show X-axis in asc order please.",
            "How many patients do each physician take care of? List their names and number of patients they take care of Show bar chart, sort in asc by the x axis.",
            "Draw a bar chart for how many patients do each physician take care of? List their names and number of patients they take care of, and I want to display in asc by the X.",
            "Return the name of each physician and the number of patients he or she treats in a bar chart, and I want to sort in ascending by the bars.",
            "Return the name of each physician and the number of patients he or she treats, I want to sort by the bars in ascending.",
            "Return a bar chart on how many patients do each physician take care of? List their names and number of patients they take care of, and I want to sort by the bars in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elliot Reid",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Dorian",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and list X-axis in asc order please.",
            "A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, and display in asc by the X-axis.",
            "What are the number of the titles of all movies that have rating star is between 3 and 5?, list by the names from low to high.",
            "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and display X-axis in ascending order.",
            "What are the number of the titles of all movies that have between 3 and 5 stars?, display X-axis in ascending order.",
            "What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, display in ascending by the title."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 2
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 2
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "assignedto",
            "projects",
            "scientists"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, and show by the how many name in descending please.",
            "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and show by the how many name in descending please.",
            "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, and show by the how many name in descending please.",
            "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, could you rank by the Y-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 2
                    },
                    {
                        "x_data": "Aerodynamics and Gas Mileage",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Compute the number of services by services and then split by local authorities Show the result with a stacked bar graph, and I want to show by the y-axis from high to low.",
            "Stack bar chart of the number of local authority vs services based on local authority, and could you display y-axis in descending order?",
            "count services by services, and split by local authorities with a stacked bar chart, and list in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 2,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "c2c"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Give me a bar chart for how many grape of each grape, could you show by the bar in asc?",
            "What is the number of different grapes of each wine? Show me a bar chart, and display X-axis in ascending order.",
            "Please give me a bar chart that counts the number of grape of wine, and I want to display in ascending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Barbera",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cabernet Franc",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cabernet Sauvingnon",
                        "y_data": 68
                    },
                    {
                        "x_data": "Chardonnay",
                        "y_data": 104
                    },
                    {
                        "x_data": "Grenache",
                        "y_data": 10
                    },
                    {
                        "x_data": "Malbec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marsanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Merlot",
                        "y_data": 10
                    },
                    {
                        "x_data": "Petite Sirah",
                        "y_data": 6
                    },
                    {
                        "x_data": "Pinot Noir",
                        "y_data": 109
                    },
                    {
                        "x_data": "Roussanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sangiovese",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sauvignon Blanc",
                        "y_data": 46
                    },
                    {
                        "x_data": "Syrah",
                        "y_data": 61
                    },
                    {
                        "x_data": "Tempranillo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Viognier",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zinfandel",
                        "y_data": 78
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Grape",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Grape)"
                }
            }
        }
    },
    {
        "tables_used": [
            "constructors",
            "constructorstandings"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart, and display by the Y in ascending.",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and I want to rank by the y axis in ascending.",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?, order in asc by the y axis please.",
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?, and could you sort from low to high by the total number?",
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?, order in asc by the y axis please.",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?, and could you show in ascending by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honda",
                        "y_data": 45
                    },
                    {
                        "x_data": "Toyota",
                        "y_data": 95
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS",
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "What are the countries for applications with at most 3 wines? Return the result in a bar chart, I want to list from high to low by the x-axis.",
            "Give me a bar chart for those countries of all appellations who have at most three wines, I want to list from high to low by the x-axis.",
            "Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and I want to list by the County in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sonoma",
                        "y_data": 3
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 3
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 6
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 7
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 2
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 2
                    },
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and employee_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and employee_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and employee_id , and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grant",
                        "y_data": 178
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 202
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "order_items",
            "products"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "Compute the proportion of names of each product by a pie chart.",
            "For each product, show its proportion of the name with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "book",
                        "y_data": 1
                    },
                    {
                        "x_data": "clothes",
                        "y_data": 1
                    },
                    {
                        "x_data": "food",
                        "y_data": 3
                    },
                    {
                        "x_data": "music",
                        "y_data": 2
                    },
                    {
                        "x_data": "phone",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a scatter chart about the correlation between employee_id and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between employee_id and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a scatter chart shows the correlation between employee_id and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a scatter chart about the correlation between employee_id and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the correlation between employee_id and salary in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 178,
                        "y_data": 7000
                    },
                    {
                        "x_data": 201,
                        "y_data": 13000
                    },
                    {
                        "x_data": 202,
                        "y_data": 6000
                    },
                    {
                        "x_data": 203,
                        "y_data": 6500
                    },
                    {
                        "x_data": 204,
                        "y_data": 10000
                    },
                    {
                        "x_data": 205,
                        "y_data": 12000
                    },
                    {
                        "x_data": 206,
                        "y_data": 8300
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality.",
            "Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality.",
            "Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality.",
            "Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality.",
            "Bar chart x axis nationality y axis sum meter 100"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 114
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 57
                    },
                    {
                        "x_data": "France",
                        "y_data": 55
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 57
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find Time and ID , and visualize them by a bar chart, display by the y-axis in ascending please.",
            "Show me about the distribution of Time and ID in a bar chart, order y axis in asc order.",
            "Give me the comparison about ID over the Time by a bar chart, and sort ID in ascending order.",
            "Draw a bar chart about the distribution of Time and ID , and sort y-axis in ascending order please.",
            "Return a bar chart about the distribution of Time and ID , and sort y-axis in ascending order please.",
            "Bar chart x axis time y axis id, and sort by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "7:53.43",
                        "y_data": 1
                    },
                    {
                        "x_data": "7:55.39",
                        "y_data": 2
                    },
                    {
                        "x_data": "7:46.95",
                        "y_data": 3
                    },
                    {
                        "x_data": "7:48.67",
                        "y_data": 4
                    },
                    {
                        "x_data": "7:49.98",
                        "y_data": 5
                    },
                    {
                        "x_data": "7:56.56",
                        "y_data": 6
                    },
                    {
                        "x_data": "7:47.91",
                        "y_data": 7
                    },
                    {
                        "x_data": "7:52.04",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "What is the relationship between ACC_Percent and All_Games_Percent , and group by attribute ACC_Road?",
            "Draw a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute ACC_Road.",
            "Visualize the relationship between ACC_Percent and All_Games_Percent , and group by attribute ACC_Road.",
            "Return a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute ACC_Road.",
            "Visualize a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute ACC_Road.",
            "Draw a scatterplot of acc percent vs all_games_percent where acc percent is on the x-axis and points are colored by ACC_Road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.563,
                        "y_data": 0.6,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": 0.625,
                        "y_data": 0.706,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": 0.813,
                        "y_data": 0.8240000000000001,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 0.875,
                        "y_data": 0.946,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and list by the y-axis in ascending.",
            "Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and rank total number from low to high order.",
            "Show sum team id from each all home, and list Y in ascending order.",
            "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, list by the y-axis in ascending.",
            "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart, list Y in ascending order.",
            "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart, order by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 4
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Give me a histogram for what are the memories and carriers of phones?, list bars from low to high order.",
            "A bar chart about what are the memories and carriers of phones?, sort x-axis from low to high order please.",
            "Bar graph to show mean memory in g from different carrier, rank in asc by the X.",
            "What are the memories and carriers of phones Show bar chart, could you rank by the X-axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 80
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 69.33333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of price , and group by attribute name, show by the y axis from low to high.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of price , and group by attribute name, could you sort in asc by the Y-axis?",
            "For those records from the products and each product's manufacturer, find name and the average of price , and group by attribute name, and visualize them by a bar chart, could you list in asc by the y axis please?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, and could you sort in asc by the Y-axis?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the name , and group by attribute name by a bar chart, could you sort in asc by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me the average of weight by sex in a histogram, and show from low to high by the bar.",
            "Give me the comparison about the average of Weight over the Sex , and group by attribute Sex by a bar chart, I want to sort X in ascending order.",
            "Return a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, show names in ascending order.",
            "Draw a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, could you display in asc by the bars?",
            "A bar chart shows the distribution of Sex and the average of Weight , and group by attribute Sex, and could you show in ascending by the X-axis?",
            "Show me about the distribution of Sex and the average of Weight , and group by attribute Sex in a bar chart, list by the bar in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 92
                    },
                    {
                        "x_data": "M",
                        "y_data": 86.71428571428571
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Give me the dates when the max temperature was higher than 85, and count them by a line chart, order X in desc order.",
            "What are the dates with a maximum temperature higher than 85, and count them by a line chart, and show by the X-axis in descending.",
            "A line chart for giveing me the number of the dates when the max temperature was higher than 85, show by the X-axis in descending.",
            "Give me the number of the dates when the max temperature was higher than 85, and rank by the x-axis from high to low.",
            "What are the number of the dates with a maximum temperature higher than 85?, rank by the x-axis from high to low.",
            "A line chart for what are the number of the dates with a maximum temperature higher than 85?, show by the date in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-08-28",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-08-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-08-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-17",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-08-16",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-08-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-28",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-27",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-07-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-07-19",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-07-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-06-25",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-08",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-05-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-04-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-04-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-01-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-03",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-02",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-09-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-09-10",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-09-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-08-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-25",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-07-24",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-07-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-06-18",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-14",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-06-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-09",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-06-08",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-15",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-12",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-04-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-04-29",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-04-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-19",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-09-09",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-07",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-09-06",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-08-30",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Road and School_ID .",
            "Find All_Road and School_ID , and visualize them by a bar chart.",
            "Draw a bar chart about the distribution of All_Road and School_ID .",
            "Visualize a bar chart about the distribution of All_Road and School_ID .",
            "Return a bar chart about the distribution of All_Road and School_ID .",
            "Show me school_id by all road in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 4
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Show the relationship between the subject ID and the corresponding number of courses for each subject in a group scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 4,
                        "classify": "Arts"
                    },
                    {
                        "x_data": 1,
                        "y_data": 6,
                        "classify": "Computer Science"
                    },
                    {
                        "x_data": 3,
                        "y_data": 5,
                        "classify": "Language"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "subject_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between Shop_ID and Employee_ID , and group by attribute Is_full_time.",
            "Return a scatter chart about the correlation between Shop_ID and Employee_ID , and group by attribute Is_full_time.",
            "What is the relationship between Shop_ID and Employee_ID , and group by attribute Is_full_time?",
            "Show me about the correlation between Shop_ID and Employee_ID , and group by attribute Is_full_time in a scatter chart.",
            "Draw a scatter chart about the correlation between Shop_ID and Employee_ID , and group by attribute Is_full_time.",
            "Show shop id vs employee_id as scatter plot use a different color for each Is_full_time"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 8,
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": 2,
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": 1,
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": 4,
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": 5,
                        "y_data": 5,
                        "classify": "T"
                    },
                    {
                        "x_data": 6,
                        "y_data": 7,
                        "classify": "T"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Shop_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Employee_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their average cloud cover.",
            "I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year.",
            "Show me mean cloud cover by date in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 8
                    },
                    {
                        "x_data": "2015",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, and sort by the y axis from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, show y-axis from low to high order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, I want to order total number of employee id in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, sort by the y axis from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id, could you display y axis from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 203
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 610
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4935
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\".",
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\".",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_test_taken",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_test_taken)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Sections"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "what are the names and id of courses having at most 2 sections?, and list by the Y from low to high.",
            "What are the names and ids of every course with less than 2 sections Visualize by bar chart, and sort total number from low to high order.",
            "Display a bar chart for what are the names and ids of every course with less than 2 sections?, and could you display by the total number in asc?",
            "What are the names and id of courses having at most 2 sections, I want to sort from low to high by the total number.",
            "Display a bar chart for what are the names and id of courses having at most 2 sections?, and display by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ds",
                        "y_data": 1
                    },
                    {
                        "x_data": "math",
                        "y_data": 2
                    },
                    {
                        "x_data": "en",
                        "y_data": 4
                    },
                    {
                        "x_data": "fr",
                        "y_data": 5
                    },
                    {
                        "x_data": "la",
                        "y_data": 6
                    },
                    {
                        "x_data": "cal",
                        "y_data": 7
                    },
                    {
                        "x_data": "nlp",
                        "y_data": 8
                    },
                    {
                        "x_data": "dl",
                        "y_data": 9
                    },
                    {
                        "x_data": "ml",
                        "y_data": 10
                    },
                    {
                        "x_data": "db",
                        "y_data": 12
                    },
                    {
                        "x_data": "pl",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "course_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the weekday interval, and sum the share count of each bin. Return the result using a bar chart.",
            "Bar graph to show sum share count from different date of transaction"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 96529
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1663726
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 9357173
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 97709
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, could you rank y-axis in asc order please?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, and show total number of code in ascending order.",
            "For those records from the products and each product's manufacturer, find headquarter and the sum of code , and group by attribute headquarter, and visualize them by a bar chart, and I want to sort y axis from low to high order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of code , and group by attribute headquarter in a bar chart, could you rank y-axis in asc order please?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and list in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 23
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Draw a bar chart of date moved in versus how many date moved in, and sort x axis from high to low order.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, rank bar from high to low order.",
            "Group and count the move in date in a bar chart, and rank bar from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the average transaction amount for different transaction types with a pie chart.",
            "Show the average transaction amount for different transaction types. Visualize by pie chart.",
            "Compute the total the average of amount of transaction across transaction type code as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PUR",
                        "y_data": 25945880.3716125
                    },
                    {
                        "x_data": "SALE",
                        "y_data": 11198167.237771427
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(amount_of_transaction)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Find the average rating star for each movie that received at least 2 ratings.",
            "For each movie that received more than 3 reviews, what is the average rating. Show scatter chart.",
            "Show me a scatter plot of mid and mean stars for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 101,
                        "y_data": 3
                    },
                    {
                        "x_data": 103,
                        "y_data": 2.5
                    },
                    {
                        "x_data": 104,
                        "y_data": 2.5
                    },
                    {
                        "x_data": 106,
                        "y_data": 4.5
                    },
                    {
                        "x_data": 107,
                        "y_data": 4
                    },
                    {
                        "x_data": 108,
                        "y_data": 3.333333333333333
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "mID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "Visualize the relationship between CID and DNO .",
            "Return a scatter chart about the correlation between CID and DNO .",
            "Draw a scatter chart about the correlation between CID and DNO .",
            "Show me about the correlation between CID and DNO in a scatter chart.",
            "What is the relationship between CID and DNO ?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 600.1030000000001,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.303,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.601,
                        "y_data": 600
                    },
                    {
                        "x_data": 50.802,
                        "y_data": 50
                    },
                    {
                        "x_data": 550.79,
                        "y_data": 550
                    },
                    {
                        "x_data": 600.101,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.107,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.109,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.113,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.121,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.211,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.227,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.232,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.271,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.315,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.3330000000001,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.337,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.363,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.415,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.433,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.437,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.445,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.461,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.4630000000001,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.465,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.509,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.6569999999999,
                        "y_data": 600
                    },
                    {
                        "x_data": 600.7869999999999,
                        "y_data": 600
                    },
                    {
                        "x_data": 500.20300000000003,
                        "y_data": 550
                    },
                    {
                        "x_data": 500.204,
                        "y_data": 550
                    },
                    {
                        "x_data": 500.205,
                        "y_data": 550
                    },
                    {
                        "x_data": 500.20599999999996,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.62,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.626,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.631,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.661,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.6709999999999,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.681,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.721,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.75,
                        "y_data": 550
                    },
                    {
                        "x_data": 520.137,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.219,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.325,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.345,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.349,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.3530000000001,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.401,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.41,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.419,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.4209999999999,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.432,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.475,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.49,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.605,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.609,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.651,
                        "y_data": 520
                    },
                    {
                        "x_data": 50.102,
                        "y_data": 50
                    },
                    {
                        "x_data": 50.108999999999995,
                        "y_data": 50
                    },
                    {
                        "x_data": 50.325,
                        "y_data": 50
                    },
                    {
                        "x_data": 50.37,
                        "y_data": 50
                    },
                    {
                        "x_data": 50.381,
                        "y_data": 50
                    },
                    {
                        "x_data": 50.427,
                        "y_data": 50
                    },
                    {
                        "x_data": 50.67,
                        "y_data": 50
                    },
                    {
                        "x_data": 50.821000000000005,
                        "y_data": 50
                    },
                    {
                        "x_data": 550.111,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.1709999999999,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.2909999999999,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.31,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.361,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.413,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.42,
                        "y_data": 550
                    },
                    {
                        "x_data": 550.471,
                        "y_data": 550
                    },
                    {
                        "x_data": 520.2130000000001,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.435,
                        "y_data": 520
                    },
                    {
                        "x_data": 520.6030000000001,
                        "y_data": 520
                    },
                    {
                        "x_data": 50.203,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "CID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DNO"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents for each document type name? Visualize by a ar chart, sort in desc by the x-axis.",
            "Return a bar chart showing the number of documents for each document type name, and sort by the names in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Paper",
                        "y_data": 5
                    },
                    {
                        "x_data": "Film",
                        "y_data": 1
                    },
                    {
                        "x_data": "CV",
                        "y_data": 3
                    },
                    {
                        "x_data": "Book",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the dog name and age of the dogs who have been abandoned in a pie chart.",
            "How old is each dog that was abandoned? Show in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kacey",
                        "y_data": 7.57
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 4.36
                    },
                    {
                        "x_data": "Evangeline",
                        "y_data": 4.01
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "weight"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "What is the total capacity of dorms for each gender? Give me a bar chart, and could you list total number from low to high order?",
            "Find total capacity of dorms for each gender in a bar chart, and I want to sort y-axis in ascending order.",
            "Create a bar chart showing sum student capacity across gender, and rank total number in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 116
                    },
                    {
                        "x_data": "F",
                        "y_data": 128
                    },
                    {
                        "x_data": "X",
                        "y_data": 1136
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(student_capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Show me the frequency of those years (bin year into year interval) that the team Boston Red Stockings won in the postseasons with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1903~1913",
                        "y_data": 2
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 3
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 1
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 1
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "A bar chart about what are the total number of credits offered by each department?, and I want to sort by the y axis in ascending please.",
            "Find the total credits of all classes offered by each department Visualize by bar chart, and display in asc by the y axis.",
            "What are the total number of credits offered by each department Show bar chart, I want to order by the y axis in ascending.",
            "Give me a histogram for what are the total number of credits offered by each department?, rank from low to high by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 15
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.crs_credit)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "How many faculty members do we have for each rank and gender? Plot them as bar chart, I want to sort y axis in asc order.",
            "Stacked bar chart of the total number for with each Sex in each rank, could you rank in asc by the Y-axis?",
            "Show all the ranks and the number of male and female faculty for each rank in a bar chart, rank by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Instructor",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 5,
                        "classify": "M"
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 7,
                        "classify": "M"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 12,
                        "classify": "M"
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27,
                        "classify": "M"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and I want to display by the Y-axis in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart, and could you order in desc by the Y?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to sort from high to low by the sum department id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart, and could you order in desc by the Y?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday, and list by the Y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 1040
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 980
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 930
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 910
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 910
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 890
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the proportion of the product name for each product using a pie chart",
            "I want to know the proportion of products for each product name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apple",
                        "y_data": 3
                    },
                    {
                        "x_data": "gucci",
                        "y_data": 3
                    },
                    {
                        "x_data": "jcrew",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Count the number of people of each sex who have a weight higher than 85 by a bar chart, show from high to low by the bar.",
            "Count the number of people of each sex who have a weight higher than 85, and display x-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 4
                    },
                    {
                        "x_data": "F",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about Team_ID over the All_Games by a bar chart, and list by the All_Games in descending.",
            "Find All_Games and Team_ID , and visualize them by a bar chart, and could you display by the x-axis in desc?",
            "Bar chart x axis all games y axis team_id, and I want to rank by the names from high to low.",
            "Show me about the distribution of All_Games and Team_ID in a bar chart, could you display by the x-axis in desc?",
            "A bar chart shows the distribution of All_Games and Team_ID , could you display by the x-axis in desc?",
            "Give me the comparison about Team_ID over the All_Games , order x axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 3
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and I want to show in ascending by the bars.",
            "Draw a bar chart of is full time versus how many is full time, and I want to list in asc by the Is_full_time.",
            "Return a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and list by the X in ascending.",
            "A bar chart shows the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and I want to display from low to high by the X.",
            "Give me the comparison about the amount of Is_full_time over the Is_full_time , and group by attribute Is_full_time by a bar chart, list by the x-axis in asc.",
            "Show me about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time in a bar chart, I want to show in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "T",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Is_full_time)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of assets and group by asset make in a bar chart.",
            "Bar graph to show how many asset make from different asset make"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CN",
                        "y_data": 2
                    },
                    {
                        "x_data": "DE",
                        "y_data": 2
                    },
                    {
                        "x_data": "FR",
                        "y_data": 2
                    },
                    {
                        "x_data": "GB",
                        "y_data": 1
                    },
                    {
                        "x_data": "IE",
                        "y_data": 1
                    },
                    {
                        "x_data": "IN",
                        "y_data": 2
                    },
                    {
                        "x_data": "IT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "RU",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "asset_make",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(asset_make)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Addresses",
            "Drama_Workshop_Groups"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Give me a histogram for how many drama workshop groups are there in each city? Return both the city and the count, and order by the Y-axis in ascending please.",
            "Show me a bar chart for how many drama workshop groups are there in each city? Return both the city and the count, and show by the Y-axis in ascending.",
            "How many drama workshop groups are there in each city? Return both the city and the count Plot them as bar chart, and show in asc by the the total number .",
            "How many drama workshop groups are there in each city? Return both the city and the count with a bar chart, and rank by the Y-axis in asc.",
            "Show all cities along with the number of drama workshop groups in each city with a bar chart, show in asc by the the total number .",
            "Show all cities along with the number of drama workshop groups in each city Visualize by bar chart, and rank y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chrisside",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feliciaberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Macejkovicchester",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monahanshire",
                        "y_data": 1
                    },
                    {
                        "x_data": "Port Maximeview",
                        "y_data": 1
                    },
                    {
                        "x_data": "Purdyville",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rueckermouth",
                        "y_data": 1
                    },
                    {
                        "x_data": "South Eugenia",
                        "y_data": 1
                    },
                    {
                        "x_data": "West Sherwoodstad",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jasthaven",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nataliamouth",
                        "y_data": 2
                    },
                    {
                        "x_data": "New Lonzoville",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "City_Town",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show all template type codes and number of templates for each with a bar chart.",
            "Show all template type codes and number of templates for each. Visualize by bar chart.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?",
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?",
            "What are the different template type codes, and how many templates correspond to each. Plot them as bar chart.",
            "Show me the total number by template type code in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Show the relationship between the number of institutions and total enrollment for each type with a scatter plot.",
            "Give me a scatter to show the correlations between the number of institutions and total enrollment for each type.",
            "Scatter plot to show count(*) on x axis and total number of enrollment on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 7,
                        "y_data": 7868
                    },
                    {
                        "x_data": 3,
                        "y_data": 5267
                    },
                    {
                        "x_data": 1,
                        "y_data": 1000
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, and display x-axis in desc order please.",
            "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, and rank in desc by the bars please.",
            "Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and order in desc by the bars.",
            "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and sort by the bar in descending.",
            "Give me a bar chart for the average of team id of each acc road, and rank ACC_Road from high to low order.",
            "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, sort by the bar in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 3.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, show in ascending by the Y.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the hire_date bin hire_date by time, and show in ascending by the Y.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, could you show Y in ascending order?",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, display in ascending by the y axis.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and I want to sort y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 106.5
                    },
                    {
                        "x_data": "July",
                        "y_data": 129
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 160
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 190.5
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For those employees who did not have any job in the past, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 1288
                    },
                    {
                        "x_data": "July",
                        "y_data": 3763
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4960
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 5138
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the minimum salary for the departments whose average salary is above the average payment of all instructors Plot them as bar chart, display in ascending by the Y-axis.",
            "Display a bar chart for what is the lowest salary in departments with average salary greater than the overall average, and could you list Y from low to high order please?",
            "What is the lowest salary in departments with average salary greater than the overall average Plot them as bar chart, and sort minimal salary in ascending order please.",
            "Bar chart of minimal salary from each dept name, order y axis in ascending order.",
            "Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average, show by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Marketing",
                        "y_data": 43770.36
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 51647.57
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 79070.08
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 79866.95
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 80797.83
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 87549.8
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 99382.59
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 105311.38
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 108011.81
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Plot total number of avg(weight) by grouped by year as a bar graph, and rank total number in ascending order.",
            "Sum the average weight and bin year into weekday interval for a bar chart, and could you sort from low to high by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 2861
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3176
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5313
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5413
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6234
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 6474
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 9051
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Weight))"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the proportion of Team_ID and Team_ID in a pie chart.",
            "Draw a pie chart about the proportion of All_Games and Team_ID.",
            "Return a pie chart about the proportion of All_Games and Team_ID.",
            "A pie chart shows the proportion of All_Games and Team_ID.",
            "Visualize a pie chart about the proportion of All_Games and Team_ID.",
            "Compute the total team_id across all games as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 3
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of courses each teacher teaches in a bar chart, rank Name in desc order.",
            "What is the number of courses each teacher teaches? Visualize with a bar chart, could you show by the bar in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "affiliated_with",
            "department"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Give me a bar chart showing how many physicians for each department name they primarily affiliated in, list Y-axis from high to low order.",
            "What are the name and primarily affiliated department name of each physician?, sort in descending by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "General Medicine",
                        "y_data": 5
                    },
                    {
                        "x_data": "Surgery",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychiatry",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faluts for different fault description recorded in the logs, order by the bar from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "failed parts",
                        "y_data": 6
                    },
                    {
                        "x_data": "system error",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking start dates of the apartments with more than 2 bedrooms for each weekday? Show me a bar chart.",
            "Find the number of booking start date for the apartments that have more than two bedrooms for each weekday with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by instructor's first name, show in ascending by the y axis please.",
            "How many courses for each course description? Show me a stacked bar chart The x-axis is course description and group by instructor's first name, order in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "orders"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "A bar chart for finding the number of the dates of orders which belong to the customer named \"Jeramie\".",
            "What are the dates of the orders made by the customer named \"Jeramie\", and count them by a bar chart",
            "Find the number of the dates of orders which belong to the customer named \"Jeramie\".",
            "A bar chart for what are the number of the dates of the orders made by the customer named \"Jeramie\"?",
            "What are the number of the dates of the orders made by the customer named \"Jeramie\"?",
            "Find the dates of orders which belong to the customer named \"Jeramie\", and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_order_placed",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_order_placed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "movie"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Which directors had a movie in either 1999 or 2000, and count them by a bar chart, and show in asc by the Director.",
            "Show all director names who have a movie in the year 1999 or 2000, and count them by a bar chart, and could you display by the Director in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anthony Hickox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Christian Duguay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Damian Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Swanbeck",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jonathan Lynn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Roger Christian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stephen Kay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Troy Duffy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Director",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Director)"
                }
            }
        }
    },
    {
        "tables_used": [
            "building",
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "For each building, show the name of the building and the number of institutions in it. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Citizens Bank Building",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tampa City Hall",
                        "y_data": 2
                    },
                    {
                        "x_data": "Floridan Hotel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Franklin Exchange Building",
                        "y_data": 2
                    },
                    {
                        "x_data": "Park Tower",
                        "y_data": 1
                    },
                    {
                        "x_data": "One Tampa City Center",
                        "y_data": 2
                    },
                    {
                        "x_data": "100 North Tampa",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, rank by the Y-axis in asc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, list Y in asc order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter, display in ascending by the mean price.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of price , and group by attribute headquarter, could you order by the total number in ascending?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter by a bar chart, and display in ascending by the mean price."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Paris",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 150
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 150
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 162
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 240
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Show the relationship between maximum age and minimum age in a scatter chart.",
            "Scatter plot to show min(age) on x axis and maximal age on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 18,
                        "y_data": 26
                    },
                    {
                        "x_data": 17,
                        "y_data": 17
                    },
                    {
                        "x_data": 18,
                        "y_data": 22
                    },
                    {
                        "x_data": 17,
                        "y_data": 18
                    },
                    {
                        "x_data": 18,
                        "y_data": 21
                    },
                    {
                        "x_data": 16,
                        "y_data": 27
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "min(age)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart, and list by the total number in desc.",
            "Find the number of the the date of enrollment of the \"Spanish\" course, I want to show in desc by the y-axis.",
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart, and order Y-axis in descending order.",
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course, list by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Plot mean age by grouped by sex as a bar graph, and could you sort bar in asc order?",
            "What is the average age for each gender of student? Return a bar chart, and could you display by the x-axis from low to high?",
            "Find the average age for students with different sex in a bar chart, and list by the bar in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 19.7
                    },
                    {
                        "x_data": "M",
                        "y_data": 19.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2310
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2325
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2440
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2456
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2265
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2280
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2295
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_300 and ID , and visualize them by a bar chart, and show bar in asc order.",
            "Return a bar chart about the distribution of meter_300 and ID , display by the names in asc.",
            "Give me the comparison about ID over the meter_300 , and I want to list by the bar from low to high.",
            "Show id from each meter 300, and rank from low to high by the names.",
            "Show me about the distribution of meter_300 and ID in a bar chart, I want to rank by the names from low to high.",
            "Draw a bar chart about the distribution of meter_300 and ID , and order by the names in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:53.46",
                        "y_data": 8
                    },
                    {
                        "x_data": "2:55.90",
                        "y_data": 4
                    },
                    {
                        "x_data": "2:55.94",
                        "y_data": 3
                    },
                    {
                        "x_data": "2:56.02",
                        "y_data": 7
                    },
                    {
                        "x_data": "2:56.04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2:56.64",
                        "y_data": 6
                    },
                    {
                        "x_data": "2:56.95",
                        "y_data": 2
                    },
                    {
                        "x_data": "2:57.10",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_300",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of ACC_Regular_Season and School_ID , and sort in descending by the bars.",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and School_ID , sort bar in descending order.",
            "Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart, and display bar in descending order.",
            "Find ACC_Regular_Season and School_ID , and visualize them by a bar chart, sort in descending by the bars.",
            "Show me school_id by acc regular season in a histogram, display in desc by the x axis.",
            "Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart, and order in desc by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20137",
                        "y_data": 5
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart, and could you sort bars from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gelli repair",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ferndale",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dinas Device",
                        "y_data": 2
                    },
                    {
                        "x_data": "Best Buy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apple",
                        "y_data": 1
                    },
                    {
                        "x_data": "ATnT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Shop_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Shop_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart, and show by the Y in descending.",
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval, and I want to order in descending by the y axis.",
            "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart, and could you display the number of booking start date from high to low order?",
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval, sort by the the number of booking start date in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 9
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "user_profiles",
            "tweets"
        ],
        "db_id": "twitter_1",
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and I want to list by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Iron Man",
                        "y_data": 2
                    },
                    {
                        "x_data": "Celine Dion",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tyler Swift",
                        "y_data": 1
                    },
                    {
                        "x_data": "Black Widow\n",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Which Payments were processed with Visa? List the date and the amount using a bar chart.",
            "Give me a histogram to show the date and the amount for all the payments processed with Visa.",
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-12-16",
                        "y_data": 459407
                    },
                    {
                        "x_data": "2018-02-24",
                        "y_data": 7343
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 155654
                    },
                    {
                        "x_data": "2017-05-03",
                        "y_data": 172309
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Amount_Payment"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking start dates of the apartments with more than 2 bedrooms for each year? Return a bar chart, and order Y in ascending order.",
            "Find the number of booking start date for the apartments that have more than two bedrooms for each year with a bar chart, could you show in ascending by the total number please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 6
                    },
                    {
                        "x_data": "2016",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "files"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "For each file format, return the number of artists who released songs in that format Show bar chart, and order in desc by the y axis please.",
            "How many songs were released for each format Show bar chart, I want to order Y in desc order.",
            "A bar chart about how many songs were released for each format?, could you list Y-axis in descending order?",
            "Bar graph to show the total number from different formats, order in descending by the y-axis please.",
            "how many songs were released for each format?, and sort in descending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "mp4",
                        "y_data": 4
                    },
                    {
                        "x_data": "mp3",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "formats",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "bookings"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "How many bookings did each customer make? List the first name as the X-axis, and the count as the Y-axis in the bar chart, show in ascending by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Elinore",
                        "y_data": 2
                    },
                    {
                        "x_data": "German",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jamir",
                        "y_data": 1
                    },
                    {
                        "x_data": "Layne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 3
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rosalee",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft",
            "MATCH"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "Please list the number of each winning aircraft in a bar chart, I want to show in ascending by the bars.",
            "What is the number of each winning aircraft? Visualize by bar chart, sort by the Aircraft in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell 206B3 JetRanger",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-47D Chinook",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-53E Super Stallion",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mil Mi-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robinson R-22",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Aircraft",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Aircraft)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, what is the relationship between employee_id and manager_id ?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a scatter chart about the correlation between employee_id and manager_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between employee_id and manager_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the correlation between employee_id and manager_id in a scatter chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a scatter chart shows the correlation between employee_id and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 178,
                        "y_data": 149
                    },
                    {
                        "x_data": 201,
                        "y_data": 100
                    },
                    {
                        "x_data": 202,
                        "y_data": 201
                    },
                    {
                        "x_data": 203,
                        "y_data": 101
                    },
                    {
                        "x_data": 204,
                        "y_data": 101
                    },
                    {
                        "x_data": 205,
                        "y_data": 101
                    },
                    {
                        "x_data": 206,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Give me a bar chart to visualize the number of the districts of markets they are on, order by the how many district in ascending.",
            "I want to know the number of districts of markets they are on, and could you display in ascending by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quebec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alberta",
                        "y_data": 2
                    },
                    {
                        "x_data": "British Columbia",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(District)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Find date_address_to and the average of monthly_rental bin date_address_to by time, and visualize them by a bar chart.",
            "Give me the comparison about the average of monthly_rental over the date_address_to bin date_address_to by time.",
            "Draw a bar chart about the distribution of date_address_to and the average of monthly_rental bin date_address_to by time.",
            "A bar chart shows the distribution of date_address_to and the average of monthly_rental bin date_address_to by time.",
            "Give me the comparison about the average of monthly_rental over the date_address_to bin date_address_to by time by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 1022
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 931.6666666666666
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, and rank in descending by the X-axis.",
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, could you sort by the bar in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 59
                    },
                    {
                        "x_data": "Riddle to exculpate",
                        "y_data": 55
                    },
                    {
                        "x_data": "Recluse and defiance",
                        "y_data": 62
                    },
                    {
                        "x_data": "Mendicant with cryptic",
                        "y_data": 56
                    },
                    {
                        "x_data": "Interim but salutary",
                        "y_data": 59
                    },
                    {
                        "x_data": "Immutable before decorum",
                        "y_data": 63
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 60
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 66
                    },
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 69
                    },
                    {
                        "x_data": "Abscond or bolster",
                        "y_data": 51
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturer"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Show all manufacturer names and ids with a bar chart, note that let manufacturer id as Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chevrolet House",
                        "y_data": 1
                    },
                    {
                        "x_data": "IKEA",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ford Make",
                        "y_data": 3
                    },
                    {
                        "x_data": "Jiaj",
                        "y_data": 4
                    },
                    {
                        "x_data": "Chevrolet",
                        "y_data": 5
                    },
                    {
                        "x_data": "Dodge",
                        "y_data": 6
                    },
                    {
                        "x_data": "Tomorrow",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a bar chart for what is average age of male for different job title?",
            "Return a histogram on what is average age of male for different job title?",
            "What is average age of male for different job title. Visualize by bar chart.",
            "Return a bar chart on what is the average age for a male in each job?",
            "what is the average age for a male in each job?",
            "What is the average age for a male in each job. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show me the total number by citizenship in a histogram, could you list by the Y-axis in ascending please?",
            "Show different citizenship of singers and the number of singers of each citizenship Plot them as bar chart, and sort total number in asc order.",
            "For each citizenship, how many singers are from that country, and display in asc by the Y.",
            "Show different citizenship of singers and the number of singers of each citizenship in a bar chart, and I want to list by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, list by the y-axis in ascending.",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?, and display by the how many paragraph text from low to high.",
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, I want to sort in asc by the Y-axis please.",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart, and I want to sort in asc by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Korea",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Paragraph_Text",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Paragraph_Text)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, return the number of cinemas showing that fim in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "university"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, sort y axis in ascending order.",
            "Find the total student enrollment for different affiliation type schools Plot them as bar chart, display by the sum enrollment from low to high.",
            "What are the total enrollments of universities of each affiliation type Plot them as bar chart, rank in asc by the total number.",
            "Draw a bar chart of affiliation versus sum enrollment, and I want to display y axis from low to high order please.",
            "Show me a bar chart for what are the total enrollments of universities of each affiliation type?, display by the y axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private/Methodist",
                        "y_data": 2100
                    },
                    {
                        "x_data": "Public",
                        "y_data": 119027
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Affiliation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CAR_MAKERS",
            "MODEL_LIST"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "What are the names and ids of all makers with more than 3 models, and display by the FullName in ascending.",
            "Show me a bar chart for what are the names and ids of all makers with more than 3 models?, show FullName in ascending order.",
            "Draw a bar chart for what are the names and ids of all makers with more than 3 models?, sort from low to high by the FullName."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chrysler",
                        "y_data": 6
                    },
                    {
                        "x_data": "General Motors",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FullName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Id"
                }
            }
        }
    },
    {
        "tables_used": [
            "students",
            "student_course_registrations",
            "courses"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, sort X in asc order.",
            "How many registed students do each course have? List course name and the number of their registered students, sort X in asc order.",
            "how many registed students do each course have? List course name and the number of their registered students?, sort X in asc order.",
            "For each course id, how many students are registered and what are the course names, rank in ascending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "English",
                        "y_data": 2
                    },
                    {
                        "x_data": "French",
                        "y_data": 2
                    },
                    {
                        "x_data": "data structure",
                        "y_data": 1
                    },
                    {
                        "x_data": "statistics",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "What are the names and account balances of customers with the letter a in their names, list by the x axis in asc.",
            "Can you compare the account balances of customers with the letter 'a' in their names using a bar graph, list by the x axis in asc.",
            "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019 Visualize them using a bar chart, list in ascending by the X-axis.",
            "Visualize a bar chart for what are the names and account balances of customers with the letter 'a' in their names?, rank names from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jack",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 2000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cust_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "acc_bal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description with a pie chart.",
            "List the cost of each treatment and the corresponding treatment type description. Visualize by pie chart.",
            "Pie chart. what are the cost and treatment type description of each treatment?",
            "Show me a pie chart for what are the cost and treatment type description of each treatment?",
            "What are the cost and treatment type description of each treatment."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Physical examination",
                        "y_data": 2429
                    },
                    {
                        "x_data": "Take for a Walk",
                        "y_data": 2392
                    },
                    {
                        "x_data": "Vaccination",
                        "y_data": 2540
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cost_of_treatment)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "treatment_type_description"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the average capacity for rooms in each building? Draw a bar chart, and sort in asc by the Y.",
            "Find the average capacity among rooms in each building with a bar chart, and order in ascending by the y axis please.",
            "Bar chart x axis building y axis the average of capacity, and order in ascending by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lamberton",
                        "y_data": 10
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "Power",
                        "y_data": 11
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 12
                    },
                    {
                        "x_data": "Drown",
                        "y_data": 18
                    },
                    {
                        "x_data": "Main",
                        "y_data": 26
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 27
                    },
                    {
                        "x_data": "Polya",
                        "y_data": 28
                    },
                    {
                        "x_data": "Grace",
                        "y_data": 34
                    },
                    {
                        "x_data": "Alumni",
                        "y_data": 36.5
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 37.5
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 49.33333333333334
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 51
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 59
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 60
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 76
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 92
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 93
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 97
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 113
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart, and sort in asc by the Y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, and display Y-axis from low to high order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, rank by the total number from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, could you order y-axis in ascending order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to sort y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.33333333333333
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of classes in each department. Visualize by bar chart.",
            "Return a bar chart on how many classes are held in each department?",
            "A bar chart about how many classes are held in each department?",
            "How many classes are held in each department. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 5
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 146.93103448275863
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, sort by the Y-axis in asc.",
            "Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and could you list by the total number from low to high?",
            "Bar chart x axis nationality y axis sum meter 100, and rank from low to high by the Y-axis.",
            "Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to display by the total number in ascending.",
            "Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, and list y axis in ascending order please.",
            "Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and rank from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 55
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 57
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 57
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 57
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 114
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "Give me a histogram for what is the number of players who have points less than 30 for each position?, show y axis from low to high order.",
            "What is the number of players who have points less than 30 for each position Plot them as bar chart, and rank from low to high by the y-axis.",
            "what is the number of players who have points less than 30 for each position?, show y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 3
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "wrestler"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "What is the number of locations of the wrestlers? Visualize by a bar chart.",
            "Give the number of locations of all wrestlers with a bar chart.",
            "A bar chart for what is the number of locations of the wrestlers.",
            "Draw a bar chart of location versus how many location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nagoya , Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Osaka , Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sapporo , Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tijuana , Mexico",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tokyo , Japan",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and department_id , and visualize them by a bar chart, and I want to list in descending by the X please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and department_id , and rank by the bar from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and department_id , and I want to list in descending by the X please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and department_id , and rank by the bar from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the last_name by a bar chart, and list from high to low by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 0
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 110
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 20
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "concert"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "What is the number of each theme? Plot as a bar chart, I want to list the total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bleeding Love",
                        "y_data": 1
                    },
                    {
                        "x_data": "Party All Night",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wide Awake",
                        "y_data": 1
                    },
                    {
                        "x_data": "Free choice 2",
                        "y_data": 2
                    },
                    {
                        "x_data": "Happy Tonight",
                        "y_data": 2
                    },
                    {
                        "x_data": "Free choice",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Theme",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_category",
            "category"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "What are the names and ids of the different categories? Show me the bar chart, and I want to show in descending by the names.",
            "List the genre name and genre id using a bar chart, and sort by the x axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Travel",
                        "y_data": 16
                    },
                    {
                        "x_data": "Sports",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sci-Fi",
                        "y_data": 14
                    },
                    {
                        "x_data": "New",
                        "y_data": 13
                    },
                    {
                        "x_data": "Music",
                        "y_data": 12
                    },
                    {
                        "x_data": "Horror",
                        "y_data": 11
                    },
                    {
                        "x_data": "Games",
                        "y_data": 10
                    },
                    {
                        "x_data": "Foreign",
                        "y_data": 9
                    },
                    {
                        "x_data": "Family",
                        "y_data": 8
                    },
                    {
                        "x_data": "Drama",
                        "y_data": 7
                    },
                    {
                        "x_data": "Documentary",
                        "y_data": 6
                    },
                    {
                        "x_data": "Comedy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Classics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Children",
                        "y_data": 3
                    },
                    {
                        "x_data": "Animation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Action",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "category_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "affiliated_with",
            "department"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "What are the name and primarily affiliated department name of each physician?, and I want to show in descending by the Name.",
            "Give me a bar chart showing how many physicians for each department name they primarily affiliated in, display in desc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Surgery",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychiatry",
                        "y_data": 1
                    },
                    {
                        "x_data": "General Medicine",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pilot"
        ],
        "db_id": "pilot_record",
        "nl_queries": [
            "Bar chart of the number of position from each position, and list in ascending by the Position.",
            "Please compare the frequency of the position of the pilots using a bar chart, and could you sort from low to high by the bar please?",
            "Can you draw a bar chart to show the number of positions of the pilots?, and I want to order bar in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Center Team",
                        "y_data": 3
                    },
                    {
                        "x_data": "Forward Team",
                        "y_data": 1
                    },
                    {
                        "x_data": "Forward-Center Team",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Position)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time.",
            "For those employees who did not have any job in the past, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 12
                    },
                    {
                        "x_data": "July",
                        "y_data": 29
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 31
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 27
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Create a bar chart showing mean amount of transaction across transaction type code, rank in descending by the x axis please.",
            "Show the average transaction amount for different transaction types, and I want to list in descending by the x-axis.",
            "Show the average transaction amount for different transaction types with a bar chart, I want to list in descending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SALE",
                        "y_data": 11198167.237771427
                    },
                    {
                        "x_data": "PUR",
                        "y_data": 25945880.3716125
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(amount_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Return a histogram on how many matches were played in each year, order from low to high by the y axis.",
            "Show sum count(*) from each year, and list in asc by the total number.",
            "Show me a bar chart for how many matches were played each year?, and order from low to high by the y axis.",
            "Sum the number of matches that happened each year Plot them as a bar chart, order from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2013",
                        "y_data": 12
                    },
                    {
                        "x_data": "2017",
                        "y_data": 108
                    },
                    {
                        "x_data": "2016",
                        "y_data": 158
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the number of names of high school students with a bar chart, and order from high to low by the name please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "List all headquarters and the number of companies in each headquarter in a pie chart.",
            "List all headquarters and the number of companies in each headquarter. Show a pie chart.",
            "For each headquarter, what are the headquarter and how many companies are centered there. Show the proportion.",
            "Give me a pie to show the total number from different headquarters."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, list Y in descending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of manager_id bin hire_date by time, and visualize them by a bar chart, rank in desc by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart, display in descending by the Y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time, and rank from high to low by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of manager_id over the hire_date bin hire_date by time, and list Y in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 125.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "results",
            "races",
            "drivers"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races that had any driver whose forename is Lewis? Show me a line chart, and order x-axis in descending order.",
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and I want to sort x axis from high to low order.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, and sort by the X in descending please.",
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, show from high to low by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 20
                    },
                    {
                        "x_data": "2016",
                        "y_data": 21
                    },
                    {
                        "x_data": "2015",
                        "y_data": 19
                    },
                    {
                        "x_data": "2014",
                        "y_data": 19
                    },
                    {
                        "x_data": "2013",
                        "y_data": 19
                    },
                    {
                        "x_data": "2012",
                        "y_data": 20
                    },
                    {
                        "x_data": "2011",
                        "y_data": 19
                    },
                    {
                        "x_data": "2010",
                        "y_data": 19
                    },
                    {
                        "x_data": "2009",
                        "y_data": 17
                    },
                    {
                        "x_data": "2008",
                        "y_data": 18
                    },
                    {
                        "x_data": "2007",
                        "y_data": 17
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, sort from high to low by the X.",
            "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and sort by the names from high to low.",
            "Bar chart x axis nationality y axis mean meter 100, and could you list X in desc order?",
            "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, sort names in descending order.",
            "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and I want to show by the Nationality from high to low.",
            "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, I want to show by the Nationality from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 57
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 57
                    },
                    {
                        "x_data": "France",
                        "y_data": 55
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 57
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, could you order from low to high by the total number?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, I want to display from low to high by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and sort mean employee id in ascending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and could you order from low to high by the total number?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, sort Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 101.5
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 860
                    },
                    {
                        "x_data": "July",
                        "y_data": 1925
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 2111
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 2293
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Plays_games"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Show all game ids and the number of hours played by a scatter chart.",
            "Show all game ids and the number of hours played. Visualize by scatter chart.",
            "A scatter chart about what are ids and total number of hours played for each game?",
            "Scatter. what are ids and total number of hours played for each game?",
            "What are ids and total number of hours played for each game.",
            "Plot a scatter chart, gameid by sum hours played."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 82
                    },
                    {
                        "x_data": 2,
                        "y_data": 25
                    },
                    {
                        "x_data": 3,
                        "y_data": 150
                    },
                    {
                        "x_data": 4,
                        "y_data": 1000
                    },
                    {
                        "x_data": 5,
                        "y_data": 51
                    },
                    {
                        "x_data": 6,
                        "y_data": 1337
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "GameID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(hours_played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the Time by a bar chart, and could you rank by the X-axis in ascending?",
            "Bar chart x axis time y axis meter_100, show by the names in asc.",
            "Draw a bar chart about the distribution of Time and meter_100 , I want to display in asc by the X please.",
            "Visualize a bar chart about the distribution of Time and meter_100 , and list by the X in ascending please.",
            "Return a bar chart about the distribution of Time and meter_100 , and I want to rank in asc by the x axis.",
            "Find Time and meter_100 , and visualize them by a bar chart, could you rank by the X-axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "7:46.95",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "7:47.91",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "7:48.67",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "7:49.98",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "7:52.04",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "7:53.43",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "7:55.39",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "7:56.56",
                        "y_data": 57.84
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "race"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Show me the proportion of classes of all races using a pie chart.",
            "What is the proportion of classes of all races? Give me a pie chart.",
            "Create a pie chart showing how many class across class."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DP/GT",
                        "y_data": 5
                    },
                    {
                        "x_data": "GT",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class"
                }
            }
        }
    },
    {
        "tables_used": [
            "screen_mode",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Tell me the proportion of the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of employee_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 154
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 155
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 152.5
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 153.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 151
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 152
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 153
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CAR_MAKERS",
            "MODEL_LIST"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Draw a bar chart for what are the names and ids of all makers with more than 3 models?, could you sort by the Y from high to low?",
            "What are the names and ids of all makers with more than 3 models, could you rank y-axis in desc order?",
            "Show me a bar chart for what are the names and ids of all makers with more than 3 models?, sort y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chrysler",
                        "y_data": 6
                    },
                    {
                        "x_data": "General Motors",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FullName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Id"
                }
            }
        }
    },
    {
        "tables_used": [
            "city"
        ],
        "db_id": "farm",
        "nl_queries": [
            "A bar chart about what are the statuses and average populations of each city?",
            "Give me a histogram for what are the statuses and average populations of each city?",
            "What are the statuses and average populations of each city. Plot them as bar chart.",
            "Show the average of population from each status"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Town",
                        "y_data": 5706
                    },
                    {
                        "x_data": "Village",
                        "y_data": 1009.75
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Status",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "For each room, find its the number of times reservations were made for it Visualize them using a bar chart, and display by the the total number from low to high.",
            "Return the room and number of reservations made for each of the rooms to draw a bar chart, I want to order in asc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AOB",
                        "y_data": 51
                    },
                    {
                        "x_data": "RTE",
                        "y_data": 55
                    },
                    {
                        "x_data": "MWC",
                        "y_data": 56
                    },
                    {
                        "x_data": "IBS",
                        "y_data": 59
                    },
                    {
                        "x_data": "TAA",
                        "y_data": 59
                    },
                    {
                        "x_data": "HBB",
                        "y_data": 60
                    },
                    {
                        "x_data": "RND",
                        "y_data": 62
                    },
                    {
                        "x_data": "IBD",
                        "y_data": 63
                    },
                    {
                        "x_data": "FNA",
                        "y_data": 66
                    },
                    {
                        "x_data": "CAS",
                        "y_data": 69
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Room",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game",
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many players are injured in each day? Show a bar chart, list by the Y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "10 July 2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "14 October 2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "18 May 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "22 September 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 October 2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "7 July 2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 August 2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "9 December 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "14 March 2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "16 August 2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "31 October 2008",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "medication",
            "prescribes"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Find the number of medications prescribed for each brand.",
            "Pie. how many medications are prescribed for each brand?",
            "Return a pie chart on how many medications are prescribed for each brand?",
            "How many medications are prescribed for each brand. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thesisin",
                        "y_data": 2
                    },
                    {
                        "x_data": "Procrastin-X",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "race"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Show me how many in each class of all races using a bar chart.",
            "Create a bar chart showing how many class across class"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DP/GT",
                        "y_data": 5
                    },
                    {
                        "x_data": "GT",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                }
            }
        }
    },
    {
        "tables_used": [
            "university"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.",
            "Visualize a pie chart with what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?",
            "Draw a pie chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?",
            "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private/Methodist",
                        "y_data": 2100
                    },
                    {
                        "x_data": "Public",
                        "y_data": 43092
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Enrollment)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Affiliation"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, show y axis in desc order.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart, and sort by the y-axis in descending.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and list by the y axis in descending.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart, and list by the y axis in desc.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, and order by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 5138
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4960
                    },
                    {
                        "x_data": "July",
                        "y_data": 3763
                    },
                    {
                        "x_data": "June",
                        "y_data": 1288
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, order in asc by the y axis.",
            "Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and I want to list from low to high by the y-axis please.",
            "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road, and display from low to high by the Y.",
            "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart, and rank in asc by the total number.",
            "Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, I want to list from low to high by the y-axis please.",
            "Stack bar chart of school_id vs ACC_Road based on all home, I want to sort in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 5,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Please tell me how many employees in the department 80 on each type of job titles using a bar chart, and list in desc by the X-axis please.",
            "Compare the total number of different job titles for all those jobs in department 80 using a bar chart, display bars in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sales Representative",
                        "y_data": 29
                    },
                    {
                        "x_data": "Sales Manager",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_TITLE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and salary , and display by the total number in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name , and list in ascending by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name by a bar chart, sort from low to high by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and salary in a bar chart, I want to rank by the total number in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and salary , and sort from low to high by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pat",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 7000
                    },
                    {
                        "x_data": "William",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students who is older than 20 in each dorm Plot them as bar chart, display bar in desc order please.",
            "Return a bar chart on how many students are older than 20 in each dorm?, and display x axis from high to low order.",
            "Give me a histogram for how many students are older than 20 in each dorm?, display x axis from high to low order.",
            "How many students are older than 20 in each dorm Visualize by bar chart, and display in descending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Smith Hall",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fawlty Towers",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dorm-plex 2000",
                        "y_data": 2
                    },
                    {
                        "x_data": "Anonymous Donor Hall",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dorm_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart about the number of last name for all female students whose sex is F, and sort in asc by the LName.",
            "A bar chart showing the number of last name for all female students Their sex is F, and order x axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "chip_model",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HTC Corporation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Huawei Technologies Co.Ltd.",
                        "y_data": 1
                    },
                    {
                        "x_data": "LG Electronics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hall_of_fame"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Count the number of players who enter hall of fame for each year Plot them as line chart, show yearid in descending order please.",
            "Count the number of players who enter hall of fame for each year with a line chart, order by the x-axis from high to low.",
            "I want to see trend of the total number by yearid, display yearid from high to low order please.",
            "How many players enter hall of fame each year Show the tendency, display by the x-axis in descending.",
            "Return a line chart on how many players enter hall of fame each year?, and I want to show x axis in desc order.",
            "Show me a line chart for how many players enter hall of fame each year?, and display yearid from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2014-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 40
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 24
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 46
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 27
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2001-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2000-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "1999-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "1998-01-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1997-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "1996-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1994-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1993-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "1992-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1991-01-01",
                        "y_data": 47
                    },
                    {
                        "x_data": "1990-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1988-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1987-01-01",
                        "y_data": 29
                    },
                    {
                        "x_data": "1986-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1985-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1984-01-01",
                        "y_data": 31
                    },
                    {
                        "x_data": "1983-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1982-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1981-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1980-01-01",
                        "y_data": 63
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 56
                    },
                    {
                        "x_data": "1978-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1976-01-01",
                        "y_data": 36
                    },
                    {
                        "x_data": "1975-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1974-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1973-01-01",
                        "y_data": 49
                    },
                    {
                        "x_data": "1972-01-01",
                        "y_data": 51
                    },
                    {
                        "x_data": "1971-01-01",
                        "y_data": 56
                    },
                    {
                        "x_data": "1970-01-01",
                        "y_data": 49
                    },
                    {
                        "x_data": "1969-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1968-01-01",
                        "y_data": 50
                    },
                    {
                        "x_data": "1967-01-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 50
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1964-01-01",
                        "y_data": 94
                    },
                    {
                        "x_data": "1963-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "1962-01-01",
                        "y_data": 81
                    },
                    {
                        "x_data": "1961-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "1960-01-01",
                        "y_data": 134
                    },
                    {
                        "x_data": "1959-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1958-01-01",
                        "y_data": 154
                    },
                    {
                        "x_data": "1957-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "1956-01-01",
                        "y_data": 106
                    },
                    {
                        "x_data": "1955-01-01",
                        "y_data": 66
                    },
                    {
                        "x_data": "1954-01-01",
                        "y_data": 53
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 89
                    },
                    {
                        "x_data": "1952-01-01",
                        "y_data": 75
                    },
                    {
                        "x_data": "1951-01-01",
                        "y_data": 86
                    },
                    {
                        "x_data": "1950-01-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1949-01-01",
                        "y_data": 120
                    },
                    {
                        "x_data": "1948-01-01",
                        "y_data": 106
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1946-01-01",
                        "y_data": 108
                    },
                    {
                        "x_data": "1945-01-01",
                        "y_data": 105
                    },
                    {
                        "x_data": "1944-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1942-01-01",
                        "y_data": 72
                    },
                    {
                        "x_data": "1939-01-01",
                        "y_data": 115
                    },
                    {
                        "x_data": "1938-01-01",
                        "y_data": 122
                    },
                    {
                        "x_data": "1937-01-01",
                        "y_data": 118
                    },
                    {
                        "x_data": "1936-01-01",
                        "y_data": 110
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "yearid",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Can you draw the trend of the number of actual delivery date over the actual delivery date?, order X-axis from high to low order.",
            "Show all the actual delivery dates and bin by year in a line chart, and rank in descending by the x-axis.",
            "Can you draw the trend of the number of actual delivery date over the actual delivery date?, and order X-axis in descending order.",
            "Show all the actual delivery dates and bin by year in a line chart, and I want to display from high to low by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 0
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 2
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 3
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 5
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 1
                    },
                    {
                        "x_data": "1971~1975",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Actual_Delivery_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Actual_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and manager_id , and sort y axis from low to high order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and manager_id , and order in ascending by the Y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and manager_id , list in ascending by the MANAGER_ID.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and manager_id , sort by the y-axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and manager_id in a bar chart, and could you rank by the Y-axis in asc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "515.123.5555",
                        "y_data": 100
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 101
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 101
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 101
                    },
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 149
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 201
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "You can return a bar chart to show the employees' first name and the corresponding department's id, show in asc by the y-axis.",
            "Just show the first name of the employee and list their department's id in the Y-axis of the bar chart, and rank in asc by the y axis please.",
            "Bar chart of department_id from each first name, and show in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jennifer",
                        "y_data": 10
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "Den",
                        "y_data": 30
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 50
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 60
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "John",
                        "y_data": 80
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 90
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 100
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "How many templates for each template type code? Show a bar chart, and sort from high to low by the bars please.",
            "Return a bar chart showing the number of templates for each template type code, and list X-axis in desc order.",
            "Show the number of template type code from each template type code, sort from high to low by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    },
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "AD",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Template_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "List the name and the number of enrolled student for each course Show bar chart, and I want to show Y from high to low order please.",
            "What is the name of each course and the corresponding number of student enrollment Show bar chart, sort y axis in desc order.",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?, and order total number in desc order.",
            "List the name and the number of enrolled student for each course in a bar chart, and order total number in desc order.",
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, sort in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "French",
                        "y_data": 3
                    },
                    {
                        "x_data": "modern Arts",
                        "y_data": 2
                    },
                    {
                        "x_data": "database",
                        "y_data": 2
                    },
                    {
                        "x_data": "advanced database",
                        "y_data": 2
                    },
                    {
                        "x_data": "Writing in French",
                        "y_data": 2
                    },
                    {
                        "x_data": "Spanish",
                        "y_data": 2
                    },
                    {
                        "x_data": "Japanese",
                        "y_data": 2
                    },
                    {
                        "x_data": "Art history",
                        "y_data": 2
                    },
                    {
                        "x_data": "AI",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chinese Painting",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airlines"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "What are the number of the countries of all airlines whose names start with Orbit?",
            "A pie chart for what are the number of the countries of all airlines whose names start with Orbit?",
            "What are the countries of all airlines whose names start with Orbit, and count them by a pie chart",
            "Find the number of the country of the airlines whose name starts with 'Orbit'.",
            "A pie chart for finding the number of the country of the airlines whose name starts with 'Orbit'.",
            "Find the country of the airlines whose name starts with 'Orbit', and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Azerbaijan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(country)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "country"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Show the proportion of names of phones with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, return the number of cinemas showing that fim in a bar chart, could you rank by the Title in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a line chart about the change of Employee_ID over Start_from .",
            "A line chart shows the trend of Employee_ID over Start_from .",
            "Draw a line chart about the change of Employee_ID over Start_from .",
            "Give me the trend about Employee_ID over Start_from .",
            "Show me the trend about Employee_ID over Start_from with a line chart.",
            "Show me about the change of Employee_ID over Start_from in a line chart.",
            "Plot start from by employee_id as a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 7
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Employee_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a line chart about the change of department_id over hire_date , rank by the X-axis in descending.",
            "For those employees who was hired before 2002-06-21, show me the trend about department_id over hire_date with a line chart, rank from high to low by the X-axis.",
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of department_id over hire_date , and could you list in descending by the X-axis?",
            "For those employees who was hired before 2002-06-21, show me about the change of department_id over hire_date in a line chart, could you list in descending by the x axis?",
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of department_id over hire_date , and rank from high to low by the X-axis.",
            "For those employees who was hired before 2002-06-21, give me the trend about department_id over hire_date , could you list in descending by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 40
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 10
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts opened in each year for all accounts in a line chart.",
            "How many accounts are opened in each year? Show a line chart.",
            "I want to see trend of how many date account opened by date account opened"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0
                    },
                    {
                        "x_data": "2014",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2016",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?, and could you rank in ascending by the total number?",
            "Show me start_station_id by start station name in a histogram, could you show start_station_id from low to high order?",
            "what are the ids and names of all start stations that were the beginning of at least 200 trips?, and list Y from low to high order.",
            "What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, sort in asc by the Y.",
            "Find the ids and names of stations from which at least 200 trips started, and show total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Powell Street BART",
                        "y_data": 39
                    },
                    {
                        "x_data": "Harry Bridges Plaza (Ferry Building)",
                        "y_data": 50
                    },
                    {
                        "x_data": "Embarcadero at Folsom",
                        "y_data": 51
                    },
                    {
                        "x_data": "Embarcadero at Bryant",
                        "y_data": 54
                    },
                    {
                        "x_data": "Temporary Transbay Terminal (Howard at Beale)",
                        "y_data": 55
                    },
                    {
                        "x_data": "Beale at Market",
                        "y_data": 56
                    },
                    {
                        "x_data": "Embarcadero at Sansome",
                        "y_data": 60
                    },
                    {
                        "x_data": "2nd at Townsend",
                        "y_data": 61
                    },
                    {
                        "x_data": "2nd at Folsom",
                        "y_data": 62
                    },
                    {
                        "x_data": "Howard at 2nd",
                        "y_data": 63
                    },
                    {
                        "x_data": "2nd at South Park",
                        "y_data": 64
                    },
                    {
                        "x_data": "Townsend at 7th",
                        "y_data": 65
                    },
                    {
                        "x_data": "Market at 10th",
                        "y_data": 67
                    },
                    {
                        "x_data": "San Francisco Caltrain 2 (330 Townsend)",
                        "y_data": 69
                    },
                    {
                        "x_data": "San Francisco Caltrain (Townsend at 4th)",
                        "y_data": 70
                    },
                    {
                        "x_data": "Grant Avenue at Columbus Avenue",
                        "y_data": 73
                    },
                    {
                        "x_data": "Steuart at Market",
                        "y_data": 74
                    },
                    {
                        "x_data": "Market at 4th",
                        "y_data": 76
                    },
                    {
                        "x_data": "Market at Sansome",
                        "y_data": 77
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "start_station_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "start_station_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between salary and department_id .",
            "For all employees who have the letters D or S in their first name, visualize the relationship between salary and department_id .",
            "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between salary and department_id .",
            "For all employees who have the letters D or S in their first name, a scatter chart shows the correlation between salary and department_id .",
            "For all employees who have the letters D or S in their first name, show me about the correlation between salary and department_id in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 90
                    },
                    {
                        "x_data": 12000,
                        "y_data": 110
                    },
                    {
                        "x_data": 11500,
                        "y_data": 80
                    },
                    {
                        "x_data": 11000,
                        "y_data": 30
                    },
                    {
                        "x_data": 11000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9000,
                        "y_data": 60
                    },
                    {
                        "x_data": 9000,
                        "y_data": 100
                    },
                    {
                        "x_data": 8800,
                        "y_data": 80
                    },
                    {
                        "x_data": 8200,
                        "y_data": 50
                    },
                    {
                        "x_data": 8000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8000,
                        "y_data": 80
                    },
                    {
                        "x_data": 7800,
                        "y_data": 100
                    },
                    {
                        "x_data": 7700,
                        "y_data": 100
                    },
                    {
                        "x_data": 7500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 80
                    },
                    {
                        "x_data": 6900,
                        "y_data": 100
                    },
                    {
                        "x_data": 6800,
                        "y_data": 80
                    },
                    {
                        "x_data": 6500,
                        "y_data": 50
                    },
                    {
                        "x_data": 6500,
                        "y_data": 40
                    },
                    {
                        "x_data": 6400,
                        "y_data": 80
                    },
                    {
                        "x_data": 6200,
                        "y_data": 80
                    },
                    {
                        "x_data": 6100,
                        "y_data": 80
                    },
                    {
                        "x_data": 4800,
                        "y_data": 60
                    },
                    {
                        "x_data": 4200,
                        "y_data": 60
                    },
                    {
                        "x_data": 4200,
                        "y_data": 50
                    },
                    {
                        "x_data": 4100,
                        "y_data": 50
                    },
                    {
                        "x_data": 4000,
                        "y_data": 50
                    },
                    {
                        "x_data": 3600,
                        "y_data": 50
                    },
                    {
                        "x_data": 3300,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 30
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 2900,
                        "y_data": 30
                    },
                    {
                        "x_data": 2800,
                        "y_data": 30
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2400,
                        "y_data": 50
                    },
                    {
                        "x_data": 2200,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, I want to sort in ascending by the bar.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and could you order x axis in asc order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, show by the X in asc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and I want to sort in ascending by the bar.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart, show by the X in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people",
            "wedding)"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show the name and age for all male people who don't have a wedding with a bar chart, and I want to show from low to high by the names.",
            "A bar chart about the name and age for all male people who don't have a wedding, could you display by the x axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam Scott",
                        "y_data": 26
                    },
                    {
                        "x_data": "Graeme McDowell",
                        "y_data": 34
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart, rank y axis in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday, rank from high to low by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, sort total number in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, and rank from high to low by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, could you display total number from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 15300
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs of the rarest breed in each treatment day with a stacked bar chart that bins date of treatment by weekday and groups by dog's name.",
            "How many dogs of the rarest breed in each treatment day? Draw a stacked bar chart that bins date of treatment by weekday and groups by dog's name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Houston"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Houston"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Houston"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Houston"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Houston"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Houston"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Houston"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Kacey"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Kacey"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Kacey"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Kacey"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Kacey"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Kacey"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Kacey"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "Lyric"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Lyric"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Lyric"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Lyric"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Lyric"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Lyric"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Lyric"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Show the age of each singer in a bar chart from the oldest to the youngest.",
            "What is the age of every singer? Return a bar chart in descending order of age?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Joe Sharp",
                        "y_data": 52
                    },
                    {
                        "x_data": "John Nizinik",
                        "y_data": 43
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 41
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 32
                    },
                    {
                        "x_data": "Justin Brown",
                        "y_data": 29
                    },
                    {
                        "x_data": "Tribal King",
                        "y_data": 25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Show me a bar chart for how many players are from each country?, could you list in desc by the X-axis?",
            "Show the country names and the corresponding number of players Show bar chart, could you order in desc by the x axis?",
            "How many players are from each country Visualize by bar chart, display by the bar in descending please.",
            "Show the country names and the corresponding number of players in a bar chart, could you sort in descending by the bar?",
            "Visualize a bar chart for how many players are from each country?, and show bar in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 9
                    },
                    {
                        "x_data": "Isle of Man",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 4
                    },
                    {
                        "x_data": "Indonesia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Compare how many events by different event details using a bar chart, and sort names from high to low order.",
            "Bar chart x axis event details y axis how many event details, and I want to sort by the X-axis in descending.",
            "Group and count details for the events using a bar chart, and I want to list by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Success",
                        "y_data": 6
                    },
                    {
                        "x_data": "Fail",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Bar chart x axis building y axis the average of capacity, sort bars in asc order.",
            "What is the average capacity for rooms in each building? Draw a bar chart, and display bars in asc order.",
            "Find the average capacity among rooms in each building with a bar chart, and rank by the bars in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alumni",
                        "y_data": 36.5
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 12
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "Drown",
                        "y_data": 18
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 27
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 59
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 37.5
                    },
                    {
                        "x_data": "Grace",
                        "y_data": 34
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 51
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 10
                    },
                    {
                        "x_data": "Main",
                        "y_data": 26
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 92
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 97
                    },
                    {
                        "x_data": "Polya",
                        "y_data": 28
                    },
                    {
                        "x_data": "Power",
                        "y_data": 11
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 60
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 49.33333333333334
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 113
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 93
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 76
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Return a bar chart on how many musicals has each nominee been nominated for?, and could you order by the X in asc?",
            "How many musicals has each nominee been nominated for Plot them as bar chart, and display from low to high by the x axis.",
            "Show different nominees and the number of musicals they have been nominated Plot them as bar chart, and display from low to high by the x axis.",
            "Show different nominees and the number of musicals they have been nominated in a bar chart, show Nominee from low to high order.",
            "Bar chart x axis nominee y axis the total number, and display from low to high by the x axis.",
            "Give me a histogram for how many musicals has each nominee been nominated for?, and display from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 5
                    },
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Likes",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show me the frequency of names of high schoolers who have likes with a bar chart, and sort in asc by the names.",
            "Show the number of names of high schoolers who have likes with a bar chart, and display names in asc order.",
            "Give me a bar chart to show the number of names of high schoolers who have likes, and could you list bar from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees, display by the role_code in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PT",
                        "y_data": 2
                    },
                    {
                        "x_data": "PR",
                        "y_data": 1
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    },
                    {
                        "x_data": "ED",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all the actual delivery dates and bin by year in a line chart, and list by the X from low to high.",
            "Show all the actual delivery dates and bin by year in a line chart, and could you rank X in asc order?",
            "Can you draw the trend of the number of actual delivery date over the actual delivery date?, and show X in asc order.",
            "Can you draw the trend of the number of actual delivery date over the actual delivery date?, display in ascending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1971~1975",
                        "y_data": 1
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 1
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 5
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 3
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 2
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 1
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 0
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2016",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Actual_Delivery_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Actual_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "MATCH"
        ],
        "db_id": "city_record",
        "nl_queries": [
            "A pie chart for what are the number of the venues of all the matches? Sort them in the descending order of match date.",
            "What are the number of the venues of all the matches? Sort them in the descending order of match date.",
            "What are the venues of all the matches? Sort them in the descending order of match date, and count them by a pie chart",
            "List venues of all matches in the order of their dates starting from the most recent one, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Estadio Cuscatl\u00e1n , San Salvador , El Salvador",
                        "y_data": 5
                    },
                    {
                        "x_data": "Estadio Rigoberto L\u00f3pez , Managua , Nicaragua",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Show me the trend about what is the average weight and year for each year?, and I want to rank by the x-axis in asc please.",
            "What is the average weight and year for each year Plot them as line chart, order from low to high by the X.",
            "Give me a tendency forwhat is the average weight of cars each year?, and I want to rank by the x-axis in asc please.",
            "What is the average weight of cars each year, I want to display by the X in asc.",
            "Show me a line chart for what is the average weight and year for each year?, I want to rank by the x-axis in asc please.",
            "Visualize a line chart for what is the average weight of cars each year?, and I want to rank by the x-axis in asc please.",
            "Show me a line chart of how mean weight change over the year, rank by the Year in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970-01-01",
                        "y_data": 3441.3142857142852
                    },
                    {
                        "x_data": "1971-01-01",
                        "y_data": 2960.3448275862074
                    },
                    {
                        "x_data": "1972-01-01",
                        "y_data": 3237.714285714286
                    },
                    {
                        "x_data": "1973-01-01",
                        "y_data": 3419.025
                    },
                    {
                        "x_data": "1974-01-01",
                        "y_data": 2877.925925925926
                    },
                    {
                        "x_data": "1975-01-01",
                        "y_data": 3176.8
                    },
                    {
                        "x_data": "1976-01-01",
                        "y_data": 3078.7352941176473
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 2997.357142857143
                    },
                    {
                        "x_data": "1978-01-01",
                        "y_data": 2861.805555555556
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 3055.3448275862074
                    },
                    {
                        "x_data": "1980-01-01",
                        "y_data": 2436.655172413793
                    },
                    {
                        "x_data": "1981-01-01",
                        "y_data": 2532.1666666666665
                    },
                    {
                        "x_data": "1982-01-01",
                        "y_data": 2453.548387096774
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of professors who is in office DRE 102 hired in each month with a bar chart.",
            "How many professors whose office is located in DRE 102 are hired in each month? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "May",
                        "y_data": 1
                    },
                    {
                        "x_data": "June",
                        "y_data": 0
                    },
                    {
                        "x_data": "July",
                        "y_data": 0
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_HIREDATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_HIREDATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners in a stacked bar chart The x-axis is last name and group by skill description, rank bars from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adams",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Price",
                        "y_data": 2,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Price",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Price",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 1,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "files"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "For each file format, return the number of artists who released songs in that format.",
            "Show me a pie chart for how many songs were released for each format?",
            "Display a pie chart for how many songs were released for each format?",
            "How many songs were released for each format. Visualize by pie chart.",
            "Give me a pie to show the total number from different formats."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "mp3",
                        "y_data": 2
                    },
                    {
                        "x_data": "mp4",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "formats"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin date the claim was made into week day interval and count them to show a bar chart.",
            "For all the claims whose claimed amount is larger than the average, bin the claim date into day of week interval and count them for visualizing a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of Team_Name and School_ID , order by the School_ID in asc.",
            "Return a bar chart about the distribution of Team_Name and School_ID , and list by the School_ID from low to high.",
            "Show me about the distribution of Team_Name and School_ID in a bar chart, and I want to rank by the total number in ascending.",
            "Give me the comparison about School_ID over the Team_Name , could you list from low to high by the total number?",
            "Visualize a bar chart about the distribution of Team_Name and School_ID , I want to rank by the total number in ascending.",
            "Bar chart x axis team name y axis school_id, and sort by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 4
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments",
            "locations",
            "countries"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Find employee with ID and name of the country presently where (s)he is working. Visualize by bar chart.",
            "Give me a histogram for what are all the employee ids and the names of the countries in which they work?",
            "Show me a bar chart for what are all the employee ids and the names of the countries in which they work?",
            "What are all the employee ids and the names of the countries in which they work. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 403
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 204
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 203
                    },
                    {
                        "x_data": "United States of America",
                        "y_data": 9891
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "COUNTRY_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of classes offered for all class rooms that held at least 2 classes. Show the proportion.",
            "For each classroom with at least 2 classes, how many classes are offered. Show the proportion.",
            "Compute the total the total number across class room as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BUS252",
                        "y_data": 2
                    },
                    {
                        "x_data": "BUS311",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR200",
                        "y_data": 4
                    },
                    {
                        "x_data": "KLR209",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CLASS_ROOM"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, for manager_id, hire_date, visualize the trend, and show X-axis from high to low order.",
            "For those employees who did not have any job in the past, return a line chart about the change of manager_id over hire_date , and show X-axis from high to low order.",
            "For those employees who did not have any job in the past, show me about the change of manager_id over hire_date in a line chart, and show from high to low by the x-axis.",
            "For those employees who did not have any job in the past, show me the trend about manager_id over hire_date with a line chart, and show X-axis from high to low order.",
            "For those employees who did not have any job in the past, a line chart shows the trend of manager_id over hire_date , and I want to display by the X-axis from high to low.",
            "For those employees who did not have any job in the past, visualize a line chart about the change of manager_id over hire_date , order by the HIRE_DATE in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the average age of drivers from the same home city using a bar graph, could you rank X from high to low order?",
            "Plot the average of age by grouped by home city as a bar graph, could you sort by the bar from high to low?",
            "Compare the average age of drivers from the same home city with a bar chart, sort in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Manchester",
                        "y_data": 52
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 43.5
                    },
                    {
                        "x_data": "East Hartford",
                        "y_data": 37
                    },
                    {
                        "x_data": "Coventry",
                        "y_data": 35
                    },
                    {
                        "x_data": "Bethel",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_city",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the email .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and department_id in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and department_id , and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KGRANT",
                        "y_data": 0
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 20
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 20
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 40
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 70
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 110
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Show the number of cities in each country with a bar chart, sort in asc by the Y please.",
            "What is the number of cities in each country? Return a bar chart, sort in asc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Burnaby",
                        "y_data": 2
                    },
                    {
                        "x_data": "Castlegar",
                        "y_data": 2
                    },
                    {
                        "x_data": "Central Saanich",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chilliwack",
                        "y_data": 2
                    },
                    {
                        "x_data": "Abbotsford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Campbell River",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, order by the x axis in desc.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, and order by the x axis in desc.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and order by the x axis in desc.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list X-axis from high to low order please.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and could you rank from high to low by the x axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 200
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1100
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1098
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1911
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 342
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 308
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 432
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "bookings"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "How many bookings did each customer make? Show the customer id as the Y-axis and the first name as the X-axis in a bar chart, sort Y in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jamir",
                        "y_data": 15
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 11
                    },
                    {
                        "x_data": "Layne",
                        "y_data": 10
                    },
                    {
                        "x_data": "German",
                        "y_data": 9
                    },
                    {
                        "x_data": "Elinore",
                        "y_data": 8
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 7
                    },
                    {
                        "x_data": "Rosalee",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "What are the names of technicians with the machine series that they repair? Show me how many machines for each technician's name, list Name in descending order please.",
            "Give me a bar chart that group and count names of technicians with a series of machines they are assigned to repair, sort X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "users"
        ],
        "db_id": "document_management",
        "nl_queries": [
            "Return a histogram on what are the different role codes for users, and how many users have each?, and show y-axis from high to low order.",
            "Bar graph to show the total number from different role code, and order by the the total number from high to low.",
            "what are the different role codes for users, and how many users have each?, and sort from high to low by the Y.",
            "Find the number of users in each role Plot them as bar chart, and could you list in desc by the the total number ?",
            "What are the different role codes for users, and how many users have each Show bar chart, order by the the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DBA",
                        "y_data": 8
                    },
                    {
                        "x_data": "PROJ-MGR",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title"
                }
            }
        }
    },
    {
        "tables_used": [
            "Bookings",
            "Drama_Workshop_Groups"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "What are the names of the workshop groups that have bookings with status code \"stop\", and count them by a pie chart",
            "A pie chart for what are the number of the names of the workshop groups that have bookings with status code \"stop\"?",
            "What are the number of the names of the workshop groups that have bookings with status code \"stop\"?",
            "Which workshop groups have bookings with status code \"stop\"? Give me the names, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bednar Film",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kling Workshop",
                        "y_data": 1
                    },
                    {
                        "x_data": "Queen Art",
                        "y_data": 1
                    },
                    {
                        "x_data": "Warino Photo",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Store_Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Store_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_contact_channels"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of customers that use email as the contact channel for each year. Visualize with a bar chart.",
            "Return a bar chart showing how many customers whose contact channel code is email for each year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "active_from_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(active_from_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "news_report",
            "event",
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show the names of journalists and the number of events they reported in a bar chart, show X from high to low order.",
            "Show the names of journalists and the number of events they reported Visualize by bar chart, and show X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tony Waddington",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Briggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ray Ferris",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Meaney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jackie Waring",
                        "y_data": 2
                    },
                    {
                        "x_data": "Herbert Swindells",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description, and I want to show by the names in ascending.",
            "List the cost of each treatment and the corresponding treatment type description in a bar chart, and rank by the X in ascending.",
            "What are the cost and treatment type description of each treatment, I want to rank in asc by the x axis please.",
            "A bar chart about what are the cost and treatment type description of each treatment?, I want to show by the names in ascending.",
            "Draw a bar chart for what are the cost and treatment type description of each treatment?, and display X-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Physical examination",
                        "y_data": 2429
                    },
                    {
                        "x_data": "Take for a Walk",
                        "y_data": 2392
                    },
                    {
                        "x_data": "Vaccination",
                        "y_data": 2540
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "treatment_type_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cost_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "files"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "For each file format, return the number of artists who released songs in that format Show bar chart, and show by the X in asc.",
            "how many songs were released for each format?, order in asc by the x axis.",
            "A bar chart about how many songs were released for each format?, and list X in ascending order.",
            "How many songs were released for each format Show bar chart, and order by the formats from low to high.",
            "Bar graph to show the total number from different formats, list X in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "mp3",
                        "y_data": 2
                    },
                    {
                        "x_data": "mp4",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "formats",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show the number of date arrived from each date arrived, display in ascending by the y-axis.",
            "List the number of dogs arrived in each year with a bar chart, and order in ascending by the total number please.",
            "How many dogs arrived in each year? Visualize with a bar chart, and display in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each year and bin date from by year interval with a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2016",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "customers"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "For each customer who has at least two orders, find the customer name and number of orders made. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "George",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beulah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jeramie",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "residents"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "A bar chart for what are the number of the distinct move in dates of the residents?, and sort by the total number in descending.",
            "What are the number of the distinct move in dates of the residents?, and sort by the total number in descending.",
            "Give me a bar chart for the number of date moved in of each date moved in, and list y axis from high to low order.",
            "What are the distinct move in dates of the residents, and count them by a bar chart, and list by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber",
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Show the number of climbers for each mountain in a bar chart.",
            "What is the number of climbers for each mountain? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duwoni / Mt Speke (Vittorio Emanuele Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kibo (Uhuru Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mawenzi (Hans Meyer Pk)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mount Kenya (Batian)",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mount Kenya (Lenana)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name, order y-axis in ascending order.",
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, show in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Danny",
                        "y_data": 1
                    },
                    {
                        "x_data": "Velva",
                        "y_data": 1
                    },
                    {
                        "x_data": "Domenica",
                        "y_data": 2
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ruben",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigurd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Vernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monte",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Give me a bar chart to show the names and revenue of the company that earns the highest revenue in each headquarter city, list in asc by the y axis.",
            "Please tell the names and revenues of the companies with the highest revenues in each headquarter city, and display from low to high by the maximal revenue.",
            "Create a bar chart showing maximal revenue across name, and sort in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show each location and the number of cinemas there Show bar chart, sort y axis from high to low order.",
            "Create a bar chart showing the total number across location, and rank by the Y-axis from high to low.",
            "Show each location and the number of cinemas there by a bar chart, could you show in desc by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "County Clare",
                        "y_data": 3
                    },
                    {
                        "x_data": "County Tipperary",
                        "y_data": 2
                    },
                    {
                        "x_data": "County Wicklow",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Louth",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Laois",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Dublin",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Cork",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 198.83333333333334
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SALES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, and list by the x axis in ascending please.",
            "For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, list by the x axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 1
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 2
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2002",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' Visualize by bar chart, rank bar in descending order.",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' by a bar chart, I want to order from high to low by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Treasury",
                        "y_data": 115897
                    },
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Num_Employees)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and could you sort by the total number of cloud cover in asc?",
            "Bar chart x axis date y axis total number of cloud cover, and sort by the total number of cloud cover in ascending please.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their total cloud cover, show by the Y-axis in asc please.",
            "I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each year, and I want to display in asc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2014",
                        "y_data": 32
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many students are from each city, and which cities have more than one cities Plot them as bar chart, and sort by the names from low to high please.",
            "Create a bar chart showing the total number across city code, sort by the names from low to high please.",
            "Display a bar chart for how many students are from each city, and which cities have more than one cities?, could you list x-axis from low to high order?",
            "Return a histogram on how many students are from each city, and which cities have more than one cities?, I want to order by the x axis in asc.",
            "Find the number of students for the cities where have more than one student, could you show from low to high by the x-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "Visualize a bar chart for how films are produced by each studio?, list bar from low to high order.",
            "List the studios of each film and the number of films produced by that studio Show bar chart, could you list by the X from low to high?",
            "List the studios of each film and the number of films produced by that studio by a bar chart, I want to rank by the x axis in ascending.",
            "How films are produced by each studio Show bar chart, and list bar from low to high order.",
            "A bar chart about how films are produced by each studio?, and show by the x-axis from low to high.",
            "Show me the total number by studio in a histogram, I want to rank by the bar in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "20th Century Fox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Columbia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Columbia / Rastar",
                        "y_data": 1
                    },
                    {
                        "x_data": "MGM",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orion / Carolco",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paramount",
                        "y_data": 2
                    },
                    {
                        "x_data": "Paramount / Lorimar",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Artists",
                        "y_data": 1
                    },
                    {
                        "x_data": "Universal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Universal / RKO",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Studio",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway",
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show id and location of railways that are associated with more than one train by a bar chart.",
            "Show id and location of railways that are associated with more than one train. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bressingham",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Railway_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a line chart about the change of salary over hire_date , sort x axis in ascending order.",
            "For all employees who have the letters D or S in their first name, give me the trend about salary over hire_date , and sort x axis in ascending order.",
            "For all employees who have the letters D or S in their first name, a line chart shows the change of salary over hire_date, and sort by the x axis in ascending.",
            "For all employees who have the letters D or S in their first name, show me the trend about salary over hire_date with a line chart, order from low to high by the X-axis.",
            "For all employees who have the letters D or S in their first name, a line chart shows the trend of salary over hire_date , and I want to order HIRE_DATE from low to high order please.",
            "For all employees who have the letters D or S in their first name, for salary, hire_date, visualize the trend, and order in asc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 7700
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 7800
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "A bar chart listing the number of battle date, and sort total number from low to high order.",
            "Bar chart of the number of date from each date, and rank by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1235",
                        "y_data": 1
                    },
                    {
                        "x_data": "14 April 1205",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 January 1206",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 June 1208",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 September 1207",
                        "y_data": 1
                    },
                    {
                        "x_data": "February 1206",
                        "y_data": 1
                    },
                    {
                        "x_data": "June 1205",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "What is the relationship between School_ID and ACC_Percent , and group by attribute All_Road?",
            "Draw a scatter chart about the correlation between School_ID and ACC_Percent , and group by attribute All_Road.",
            "Return a scatter chart about the correlation between School_ID and ACC_Percent , and group by attribute All_Road.",
            "A scatter chart shows the correlation between School_ID and ACC_Percent , and group by attribute All_Road.",
            "Show me about the correlation between School_ID and ACC_Percent , and group by attribute All_Road in a scatter chart.",
            "Show school id vs acc_percent as scatter plot use a different color for each All_Road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "13\u20130"
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.563,
                        "classify": "4\u20138"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.625,
                        "classify": "6\u20135"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "8\u20132"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, list by the bar in descending please.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, list by the bar in descending please.",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, could you order X from high to low order?",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, and list by the bar in descending please.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, could you order X from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 146.93103448275863
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "Return a bar chart showing the number of companies in each building, rank by the x axis from high to low.",
            "List the number of companies for each building in a bar chart, display name from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Torre Reforma",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre New York Life",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre Mitikah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Torre KOI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 3",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 2",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reforma 90",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reforma 432",
                        "y_data": 1
                    },
                    {
                        "x_data": "Punto Chapultepec",
                        "y_data": 4
                    },
                    {
                        "x_data": "LIU East",
                        "y_data": 1
                    },
                    {
                        "x_data": "Corporativo BBVA Bancomer",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "What are the number of the titles of all movies that have between 3 and 5 stars?, and show names in descending order.",
            "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, I want to show by the bars from high to low.",
            "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and order bars in descending order.",
            "A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, show names in descending order.",
            "What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, and rank by the x-axis in descending.",
            "What are the number of the titles of all movies that have rating star is between 3 and 5?, I want to show by the bars from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 1
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, rank x axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 8
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of professors for each first name with a bar chart, I want to show from high to low by the bar.",
            "How many professors for each first name? Show me a bar chart, could you sort by the names in desc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Willa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Van",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ross",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ronald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ralph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Preston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melanie",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hermine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Herman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doreen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Annelise",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE",
            "ENROLLED_IN"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "What is the number of each course name that have at least five enrollments? Show me a bar chart, and display in asc by the CName.",
            "Give the number of each course name with at least five enrollments Return a bar chart, and display by the names in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ALGORITHMS I",
                        "y_data": 1
                    },
                    {
                        "x_data": "APPLIED STATISTICS AND DATA ANALYSIS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIRCUITS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMBINATORIAL ANALYSIS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMPUTER SYSTEM FUNDAMENTALS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMPUTER VISION",
                        "y_data": 1
                    },
                    {
                        "x_data": "DATA STRUCTURES in JAVA",
                        "y_data": 1
                    },
                    {
                        "x_data": "DATABASE SYSTEMS",
                        "y_data": 2
                    },
                    {
                        "x_data": "DISTRIBUTED SYSTEMS",
                        "y_data": 2
                    },
                    {
                        "x_data": "EXPLORING THE INTERNET",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRO TO NATURAL LANGUAGE PROCESSING",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRO TO PROGRAMMING IN JAVA",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRODUCTION TO PROBABILITY",
                        "y_data": 1
                    },
                    {
                        "x_data": "MULTIMEDIA COMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "QUANTITATIVE MEDICAL COMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "SUPERCOMPUTING",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What are the average prices of products, grouped by manufacturer name, and rank y axis from low to high order.",
            "Draw a bar chart for what are the average prices of products, grouped by manufacturer name?, and order Y-axis from low to high order.",
            "A bar chart about what are the average prices of products, grouped by manufacturer name?, order from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "enroll"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students who took some course and got A or C and group by last name in a bar chart, I want to show by the y axis in desc.",
            "How many students taking a course who received an A or C? Group by students' last name with a bar chart, and could you show in desc by the the number of stu lname?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bowser",
                        "y_data": 3
                    },
                    {
                        "x_data": "Smithson",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_LNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_LNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "student",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total number of instructors for each department with a bar chart, sort by the x axis from high to low.",
            "How many instructors are in each department? Show me a bar chart, and sort by the x axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 6
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 3
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 1
                    },
                    {
                        "x_data": "English",
                        "y_data": 4
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 5
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T3.id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the number of areas of all appellations in the bar chart, and I want to show y axis in ascending order.",
            "Return a bar chart for what is the number of areas for all appellations?, and could you rank y axis in asc order please?",
            "Give me a bar chart for the number of area of each area, and I want to show y axis in ascending order.",
            "Show me a bar chart about the number of areas for all appellations, and I want to show y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "California",
                        "y_data": 1
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 1
                    },
                    {
                        "x_data": "Central Valley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Santa Cruz Mountains",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sierra Foothills",
                        "y_data": 5
                    },
                    {
                        "x_data": "Central Coast",
                        "y_data": 14
                    },
                    {
                        "x_data": "North Coast",
                        "y_data": 31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Area",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Area)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Group by the local authorities and count the number of local authorities, and then group by services, could you rank by the Y in desc?",
            "Stacked bar of services and how many services colored by local_authority, and order by the y axis in desc.",
            "Compute the number of local authorities by local authorities and then split by services Show the result with a stacked bar graph, show from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 1,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Watford"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "constructors",
            "constructorstandings"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?, and display x-axis in ascending order.",
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?, show X in asc order.",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart, I want to rank by the x-axis in ascending.",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?, and display in asc by the names.",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and list by the X-axis from low to high please.",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?, display in ascending by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honda",
                        "y_data": 45
                    },
                    {
                        "x_data": "Toyota",
                        "y_data": 95
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, what is the relationship between price and revenue , and group by attribute founder?",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between price and revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between price and revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between price and revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, visualize the relationship between price and revenue , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 240,
                        "y_data": 120,
                        "classify": "Andy"
                    },
                    {
                        "x_data": 270,
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": 66,
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": 150,
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": 240,
                        "y_data": 130,
                        "classify": "John"
                    },
                    {
                        "x_data": 150,
                        "y_data": 200,
                        "classify": "Mary"
                    },
                    {
                        "x_data": 180,
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 90,
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 180,
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 120,
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": 5,
                        "y_data": 30,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates with a maximum temperature higher than 85?, and rank from high to low by the the number of date.",
            "What are the dates with a maximum temperature higher than 85, and count them by a bar chart, sort by the the number of date in descending please.",
            "Give me the dates when the max temperature was higher than 85, and count them by a bar chart, sort by the the number of date in descending please.",
            "Give me the number of the dates when the max temperature was higher than 85, sort the number of date in descending order.",
            "A bar chart for what are the number of the dates with a maximum temperature higher than 85?, show by the Y-axis in desc please.",
            "A bar chart for giveing me the number of the dates when the max temperature was higher than 85, and sort in descending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 99
                    },
                    {
                        "x_data": "2015",
                        "y_data": 62
                    },
                    {
                        "x_data": "2013",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Road and ACC_Percent .",
            "Show me about the distribution of All_Road and ACC_Percent in a bar chart.",
            "Draw a bar chart about the distribution of All_Road and ACC_Percent .",
            "Give me the comparison about ACC_Percent over the All_Road by a bar chart.",
            "Return a bar chart about the distribution of All_Road and ACC_Percent .",
            "Show me acc_percent by all road in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return the apartment number and the number of rooms for each apartment by a bar chart, and list by the room_count in asc.",
            "Show me a bar chart for what are the apartment number and the room count of each apartment?, and I want to sort in asc by the y axis please.",
            "Return a bar chart on what are the apartment number and the room count of each apartment?, and rank in ascending by the y axis.",
            "Give me a bar chart for room_count of each apt number, and rank in ascending by the y axis.",
            "Return the apartment number and the number of rooms for each apartment, and I want to sort in asc by the y axis please.",
            "What are the apartment number and the room count of each apartment Visualize by bar chart, sort total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apt. 477",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 5
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 6
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 6
                    },
                    {
                        "x_data": "Apt. 908",
                        "y_data": 7
                    },
                    {
                        "x_data": "Suite 645",
                        "y_data": 7
                    },
                    {
                        "x_data": "Apt. 837",
                        "y_data": 8
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 8
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 8
                    },
                    {
                        "x_data": "Suite 749",
                        "y_data": 8
                    },
                    {
                        "x_data": "Apt. 187",
                        "y_data": 9
                    },
                    {
                        "x_data": "Apt. 411",
                        "y_data": 9
                    },
                    {
                        "x_data": "Suite 307",
                        "y_data": 9
                    },
                    {
                        "x_data": "Suite 693",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "room_count"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the price of each product supplied by supplier id 3 in a bar chart, and list from low to high by the y axis.",
            "What is the price of each product supplied by supplier id 3? Return a bar chart, and rank y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "black jeans",
                        "y_data": 695.16
                    },
                    {
                        "x_data": "mouse",
                        "y_data": 803.74
                    },
                    {
                        "x_data": "blue jeans",
                        "y_data": 939.57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "product_price"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Count the number of people of each sex who have a weight higher than 85 in a pie chart.",
            "Count the number of people of each sex who have a weight higher than 85. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "M",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, return the number of cinemas showing that fim in a bar chart, and I want to order total number in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Display a bar chart for how many students are from each city, and which cities have more than one cities?, and I want to order by the Y-axis from low to high.",
            "Return a histogram on how many students are from each city, and which cities have more than one cities?, and I want to sort by the Y from low to high.",
            "Create a bar chart showing the total number across city code, and I want to show in ascending by the y-axis.",
            "How many students are from each city, and which cities have more than one cities Plot them as bar chart, and I want to list y axis in asc order.",
            "Find the number of students for the cities where have more than one student, I want to sort by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "actor"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Calculate the number of actors in each duration of actors using a bar chart.",
            "Group and count the durations for each actor with a bar graph.",
            "Bar chart x axis duration y axis how many duration"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1985\u20131992, 1993, 2004\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1987\u20131991, 1996\u20132009, 2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988, 1992\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988\u20132008, 2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1993\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994\u2014",
                        "y_data": 2
                    },
                    {
                        "x_data": "1995, 1996\u2014",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Duration",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Duration)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the meter_700 , and I want to rank y axis from low to high order.",
            "Show me about the distribution of meter_700 and meter_100 in a bar chart, and sort Y-axis from low to high order.",
            "A bar chart shows the distribution of meter_700 and meter_100 , sort Y from low to high order.",
            "Visualize a bar chart about the distribution of meter_700 and meter_100 , I want to rank y axis from low to high order.",
            "Bar graph to show meter_100 from different meter 700, list meter_100 in asc order.",
            "Find meter_700 and meter_100 , and visualize them by a bar chart, sort total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6:53.34",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "6:50.80",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "6:50.91",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "6:55.07",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "6:57.44",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "6:52.69",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "6:52.58",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "6:57.69",
                        "y_data": 57.84
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_700",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time in a bar chart, and order X-axis in descending order please.",
            "Return a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, order X-axis in descending order please.",
            "Draw a bar chart of is full time versus how many is full time, and rank in descending by the x axis.",
            "Draw a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and order X-axis in descending order please.",
            "Give me the comparison about the amount of Is_full_time over the Is_full_time , and group by attribute Is_full_time by a bar chart, and display from high to low by the X.",
            "A bar chart shows the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, sort from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 5
                    },
                    {
                        "x_data": "F",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Is_full_time)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Visualize a bar chart, count and group by nationality from the journalist table, show x-axis in ascending order.",
            "Compare the total number of journalist with different nationality using a bar chart, I want to order by the names in ascending.",
            "Bar graph to show the number of nationality from different nationality, and order by the Nationality in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 9
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of start dates of all the apartment bookings for each year with a bar chart, I want to show Y-axis in asc order please.",
            "What is the number of start date of each apartment booking for each year? Return a bar chart, could you display total number in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 6
                    },
                    {
                        "x_data": "2016",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "What are the memories and carriers of phones, could you sort total number in desc order please?",
            "Plot total number of memory in g by grouped by carrier as a bar graph, and I want to list by the y axis from high to low.",
            "A bar chart about what are the memories and carriers of phones?, and order by the Y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TMobile",
                        "y_data": 208
                    },
                    {
                        "x_data": "Sprint",
                        "y_data": 160
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, sort by the y-axis from high to low.",
            "For those records from the products and each product's manufacturer, find name and the amount of name , and group by attribute name, and visualize them by a bar chart, and rank by the total number in desc.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, and display y-axis in desc order please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the amount of name , and group by attribute name, and display in descending by the Y.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of name over the name , and group by attribute name, sort by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Give me the trend about the amount of date_address_to over date_address_to , and group by attribute date_address_to.",
            "Return a line chart about the change of the amount of date_address_to over date_address_to , and group by attribute date_address_to.",
            "Show me the trend about the amount of date_address_to over date_address_to , and group by attribute date_address_to with a line chart.",
            "A line chart shows the trend of the amount of date_address_to over date_address_to , and group by attribute date_address_to.",
            "Show me about the change of the amount of date_address_to over date_address_to , and group by attribute date_address_to in a line chart.",
            "Visualize a line chart about the change of the amount of date_address_to over date_address_to , and group by attribute date_address_to."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 4
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_address_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show the average of cloud cover from each date, and I want to show Y-axis from high to low order please.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into day of the week interval and compute their average cloud cover, and could you display y-axis in desc order?",
            "What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and order in descending by the Y please.",
            "I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day, rank from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 8
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 8
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Show different occupations along with the number of players in each occupation Show bar chart, and show x-axis from high to low order.",
            "Show different occupations along with the number of players in each occupation with a bar chart, could you order by the names from high to low?",
            "Bar chart x axis occupation y axis the total number, and I want to rank in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Student",
                        "y_data": 2
                    },
                    {
                        "x_data": "Small Businessman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Self Employed / Consultant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retired",
                        "y_data": 2
                    },
                    {
                        "x_data": "Researcher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Product Consultant - MLCC",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parliamentarian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ministerial Assistant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Locomotive Engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Distribution Centre Associate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Design Coordinator",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Occupation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Draw a bar chart of transaction type versus the total number, and rank from low to high by the names.",
            "Show me a bar chart for what are the different transaction types, and how many transactions of each have taken place?, list by the bar in ascending.",
            "Show the transaction type and the number of transactions Plot them as bar chart, and rank from low to high by the X-axis.",
            "Return a histogram on what are the different transaction types, and how many transactions of each have taken place?, and could you list by the X in asc?",
            "Show the transaction type and the number of transactions by a bar chart, could you sort x-axis from low to high order?",
            "What are the different transaction types, and how many transactions of each have taken place Show bar chart, show by the x-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Payment",
                        "y_data": 6
                    },
                    {
                        "x_data": "Refund",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students whose age is younger than the average age and group by students' last name in a bar chart, and could you order X-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andreo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brody",
                        "y_data": 1
                    },
                    {
                        "x_data": "Epp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Goldman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Han",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 2
                    },
                    {
                        "x_data": "Norris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schultz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schwartz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Woods",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Group and count the move in date in a bar chart, order in desc by the Y please.",
            "Draw a bar chart of date moved in versus how many date moved in, and order in desc by the Y please.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, and rank Y in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    },
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "countrylanguage"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart, rank in ascending by the the number of language please.",
            "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, and rank total number from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Papiamento",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dutch",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Language",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Language)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Compute how many attributes in each name of the attribute definitions with attribute value 0. Show the result with a bar chart.",
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Black",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sweet",
                        "y_data": 3
                    },
                    {
                        "x_data": "Yellow",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "attribute_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(attribute_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "club",
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "For all players, show the number of different club names they come from.",
            "For the names and the players of clubs, count the names by names in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AIB",
                        "y_data": 2
                    },
                    {
                        "x_data": "ASC",
                        "y_data": 4
                    },
                    {
                        "x_data": "BK Slide",
                        "y_data": 6
                    },
                    {
                        "x_data": "HGS2",
                        "y_data": 2
                    },
                    {
                        "x_data": "IFG",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assessment_Notes"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Show the number of date of notes from each date of notes, could you display by the Y in descending?",
            "A bar chart for what are the number of the dates of the assessment notes?, could you sort by the total number from high to low?",
            "What are the dates of the assessment notes, and count them by a bar chart, could you display by the Y in descending?",
            "What are the number of the dates of the assessment notes?, could you order Y in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_notes",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_notes)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, list in descending by the y-axis.",
            "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, display by the how many all home in descending.",
            "Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and show by the how many all home in descending.",
            "Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, display from high to low by the total number.",
            "Give me the comparison about the amount of All_Home over the All_Home , and group by attribute All_Home by a bar chart, I want to sort by the how many all home in desc please.",
            "Show me the number of all home by all home in a histogram, and show by the how many all home in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 1
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(All_Home)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, and display by the names in ascending please.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, list JOB_ID from low to high order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, and list JOB_ID from low to high order.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, list JOB_ID from low to high order.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, show by the names in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111.25
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 116
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 148
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.76923076923077
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.55555555555554
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 135.44444444444446
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, rank from high to low by the sum population.",
            "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and could you show by the y axis from high to low?",
            "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, display in desc by the Y.",
            "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and rank in desc by the sum population please.",
            "Bar graph to show total number of population from different governmentform, and list from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Socialistic Republic",
                        "y_data": 115072000
                    },
                    {
                        "x_data": "Constitutional Monarchy, Federation",
                        "y_data": 82516000
                    },
                    {
                        "x_data": "Special Administrative Region of China",
                        "y_data": 7255000
                    },
                    {
                        "x_data": "Federation",
                        "y_data": 7160400
                    },
                    {
                        "x_data": "Socialistic State",
                        "y_data": 5605000
                    },
                    {
                        "x_data": "Commonwealth of the US",
                        "y_data": 3947000
                    },
                    {
                        "x_data": "Monarchy (Sultanate)",
                        "y_data": 2870000
                    },
                    {
                        "x_data": "Emirate Federation",
                        "y_data": 2441000
                    },
                    {
                        "x_data": "Constitutional Monarchy (Emirate)",
                        "y_data": 1972000
                    },
                    {
                        "x_data": "Overseas Department of France",
                        "y_data": 1731000
                    },
                    {
                        "x_data": "Monarchy (Emirate)",
                        "y_data": 617000
                    },
                    {
                        "x_data": "Nonmetropolitan Territory of France",
                        "y_data": 464000
                    },
                    {
                        "x_data": "US Territory",
                        "y_data": 329000
                    },
                    {
                        "x_data": "Nonmetropolitan Territory of The Netherlands",
                        "y_data": 320000
                    },
                    {
                        "x_data": "Dependent Territory of the UK",
                        "y_data": 193050
                    },
                    {
                        "x_data": "Part of Denmark",
                        "y_data": 99000
                    },
                    {
                        "x_data": "Parliamentary Coprincipality",
                        "y_data": 78000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "GovernmentForm",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "List the number of completion students in each day and group by date of completion in a line chart.",
            "How many completion students in each day? Return a line chart grouping by date of completion.",
            "Visualize the general trend of the number of date of completion over the date of completion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "What are the names of the high schoolers and how many friends does each have Visualize by bar chart, list in asc by the name please.",
            "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?, could you list in ascending by the X-axis?",
            "Show the names of high school students and their corresponding number of friends, I want to sort by the name in ascending please.",
            "Show the names of high school students and their corresponding number of friends with a bar chart, and display from low to high by the x-axis please.",
            "A bar chart about what are the names of the high schoolers and how many friends does each have?, and could you list in ascending by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 3
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "order_items"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the product name and total order quantity for each product in a bar chart.",
            "Show the product name and total order quantity for each product. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apple",
                        "y_data": 23
                    },
                    {
                        "x_data": "gucci",
                        "y_data": 21
                    },
                    {
                        "x_data": "jcrew",
                        "y_data": 40
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(sum(T2.order_quantity))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name , I want to show names in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name by a bar chart, I want to order LAST_NAME from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and employee_id , and I want to sort in ascending by the X.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and employee_id , I want to order LAST_NAME from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and employee_id , and visualize them by a bar chart, show from low to high by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 202
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 206
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 178
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Just compare the number of journal committees of each editor using a histogram, show bar in ascending order.",
            "Show the name of each editor and the number of journal committees they are on using a bar chart, list in asc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 1
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games for each home team in a bar chart.",
            "Show me how many home team by home team in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Please show the trend of the number of the church by open date (bin into the year) using a line chart.",
            "Visualize a line chart that bins the open date into the Year interval and counts them.",
            "I want to see trend of the number of open date by open date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1830",
                        "y_data": 1
                    },
                    {
                        "x_data": "1831",
                        "y_data": 1
                    },
                    {
                        "x_data": "1832",
                        "y_data": 1
                    },
                    {
                        "x_data": "1833",
                        "y_data": 0
                    },
                    {
                        "x_data": "1834",
                        "y_data": 0
                    },
                    {
                        "x_data": "1835",
                        "y_data": 0
                    },
                    {
                        "x_data": "1836",
                        "y_data": 1
                    },
                    {
                        "x_data": "1837",
                        "y_data": 1
                    },
                    {
                        "x_data": "1838",
                        "y_data": 0
                    },
                    {
                        "x_data": "1839",
                        "y_data": 1
                    },
                    {
                        "x_data": "1840",
                        "y_data": 1
                    },
                    {
                        "x_data": "1841",
                        "y_data": 0
                    },
                    {
                        "x_data": "1842",
                        "y_data": 1
                    },
                    {
                        "x_data": "1843",
                        "y_data": 0
                    },
                    {
                        "x_data": "1844",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of treatments in each day with a bar chart that bins date of treatment by weekday, and I want to display by the y-axis from high to low please.",
            "How many treatments in each day? Return a bar chart that bins date of treatment by weekday, and could you order in desc by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who get more salary than the employee whose id is 163, show the frequency of their last name, and could you rank by the Y from low to high?",
            "Provide the frequency of the last names of employees earning more than the employee with id 163 using a bar chart, and order Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bloom",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cambrault",
                        "y_data": 1
                    },
                    {
                        "x_data": "De Haan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Errazuriz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fox",
                        "y_data": 1
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 1
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kochhar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ozer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Partners",
                        "y_data": 1
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tucker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vishney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zlotkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "King",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LAST_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Return all the committees that have delegates from Democratic party, and count them by a pie chart",
            "Which committees have delegates from the Democratic party, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Appropriations",
                        "y_data": 2
                    },
                    {
                        "x_data": "Economic Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Committee)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Committee"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, list by the y axis in descending please.",
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, could you display by the the total number in desc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 69
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 66
                    },
                    {
                        "x_data": "Immutable before decorum",
                        "y_data": 63
                    },
                    {
                        "x_data": "Recluse and defiance",
                        "y_data": 62
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 60
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 59
                    },
                    {
                        "x_data": "Interim but salutary",
                        "y_data": 59
                    },
                    {
                        "x_data": "Mendicant with cryptic",
                        "y_data": 56
                    },
                    {
                        "x_data": "Riddle to exculpate",
                        "y_data": 55
                    },
                    {
                        "x_data": "Abscond or bolster",
                        "y_data": 51
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the names and average salaries of all departments whose average salary is greater than 42000, and rank by the dept_name in ascending.",
            "Bar chart of mean salary from each dept name, could you list names from low to high order?",
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and could you list names from low to high order?",
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, could you list names from low to high order?",
            "What are the names and average salaries for departments with average salary higher than 42000 Plot them as bar chart, and sort by the X-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 48716.5925
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 79070.08
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 77098.198
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 61287.25
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 98133.47
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 96346.5675
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 74162.73999999999
                    },
                    {
                        "x_data": "English",
                        "y_data": 72089.04999999999
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 105311.38
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 99382.59
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 57421.85666666668
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 84097.4375
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 79813.02
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 114576.9
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 100053.07333333332
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 61143.05
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 67795.44166666668
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by year interval in a bar chart, list in desc by the x axis.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, and could you rank date_account_opened from high to low order please?",
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by year interval in a bar chart, and list in desc by the date_account_opened.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, rank by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0
                    },
                    {
                        "x_data": "2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Player"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "A bar chart about what are the names and number of hours spent training for each player who trains for less than 1500 hours?, and list by the X-axis from high to low.",
            "Find the name and training hours of players whose hours are below 1500 Show bar chart, show names in desc order.",
            "What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, show names in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Eddie",
                        "y_data": 600
                    },
                    {
                        "x_data": "Charles",
                        "y_data": 300
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "pName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "HS"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own, sort by the Y-axis in ascending.",
            "List the number of items by the details of the organization that owns it using a bar chart, and display y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 3
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of start dates of all the apartment bookings made by guests with gender code \"Female\" for each year in a bar chart, and sort total number from low to high order.",
            "What are the number of start date of the apartment bookings made by female guests (gender code \"Female\") for each year? Plot a bar chart, list total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 3
                    },
                    {
                        "x_data": "2016",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, I want to list x axis in desc order.",
            "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and order in desc by the X-axis.",
            "Bar graph to show total number of population from different governmentform, and order in desc by the X-axis.",
            "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, sort x axis from high to low order.",
            "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and list X-axis in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "US Territory",
                        "y_data": 329000
                    },
                    {
                        "x_data": "Special Administrative Region of China",
                        "y_data": 7255000
                    },
                    {
                        "x_data": "Socialistic State",
                        "y_data": 5605000
                    },
                    {
                        "x_data": "Socialistic Republic",
                        "y_data": 115072000
                    },
                    {
                        "x_data": "Part of Denmark",
                        "y_data": 99000
                    },
                    {
                        "x_data": "Parliamentary Coprincipality",
                        "y_data": 78000
                    },
                    {
                        "x_data": "Overseas Department of France",
                        "y_data": 1731000
                    },
                    {
                        "x_data": "Nonmetropolitan Territory of The Netherlands",
                        "y_data": 320000
                    },
                    {
                        "x_data": "Nonmetropolitan Territory of France",
                        "y_data": 464000
                    },
                    {
                        "x_data": "Monarchy (Sultanate)",
                        "y_data": 2870000
                    },
                    {
                        "x_data": "Monarchy (Emirate)",
                        "y_data": 617000
                    },
                    {
                        "x_data": "Federation",
                        "y_data": 7160400
                    },
                    {
                        "x_data": "Emirate Federation",
                        "y_data": 2441000
                    },
                    {
                        "x_data": "Dependent Territory of the UK",
                        "y_data": 193050
                    },
                    {
                        "x_data": "Constitutional Monarchy, Federation",
                        "y_data": 82516000
                    },
                    {
                        "x_data": "Constitutional Monarchy (Emirate)",
                        "y_data": 1972000
                    },
                    {
                        "x_data": "Commonwealth of the US",
                        "y_data": 3947000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "GovernmentForm",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Does it have something interesting about the manager id and the salary? Show me a scatter chart first.",
            "Scatter chart for manager id and their salaries."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 100
                    },
                    {
                        "x_data": 9000,
                        "y_data": 103
                    },
                    {
                        "x_data": 12000,
                        "y_data": 108
                    },
                    {
                        "x_data": 11000,
                        "y_data": 114
                    },
                    {
                        "x_data": 8200,
                        "y_data": 121
                    },
                    {
                        "x_data": 14000,
                        "y_data": 145
                    },
                    {
                        "x_data": 4400,
                        "y_data": 200
                    },
                    {
                        "x_data": 13000,
                        "y_data": 201
                    },
                    {
                        "x_data": 6500,
                        "y_data": 203
                    },
                    {
                        "x_data": 10000,
                        "y_data": 204
                    },
                    {
                        "x_data": 12000,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Create a bar chart showing the total number across bedtype, and I want to show y axis from low to high order please.",
            "What are the number of rooms for each bed type Show bar chart, order by the total number from low to high.",
            "Return a bar chart on what are the number of rooms for each bed type?, and order by the total number from low to high.",
            "A bar chart about what are the number of rooms for each bed type?, display Y in asc order.",
            "Find the number of rooms for each bed type Visualize by bar chart, sort y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Double",
                        "y_data": 2
                    },
                    {
                        "x_data": "King",
                        "y_data": 4
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart, and I want to order from high to low by the Y.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart, and rank in desc by the total number please.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, sort from high to low by the y-axis.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday, and I want to list in desc by the y axis.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and sort from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 1162
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1144
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 886
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 606
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 596
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 399
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Compare the total number of locations in each location using a bar graph, and order by the Y-axis from low to high.",
            "Bar chart x axis location y axis how many location, and order by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell Centre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Verizon Center",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway",
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show id and location of railways that are associated with more than one train Visualize by bar chart, and could you display by the x-axis in ascending?",
            "Show id and location of railways that are associated with more than one train by a bar chart, and could you sort bars from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bressingham",
                        "y_data": 5
                    },
                    {
                        "x_data": "York",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Railway_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Compare the total enrollment in each county with a bar chart.",
            "Please give me a bar chart for the total enrollment in each county.",
            "Show sum enrollment from each county"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 601
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 852
                    },
                    {
                        "x_data": "50 Marshall",
                        "y_data": 1098
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 984
                    },
                    {
                        "x_data": "75 Starke",
                        "y_data": 620
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A line chart shows the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and sort by the Start_from from low to high.",
            "For the sum of Employee_ID, Start_from, visualize the trend, and I want to list by the X in asc.",
            "Draw a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, order X-axis in asc order.",
            "Give me line charts of worldwide gross sum employee id over year start from by major genres Is_full_time, and I want to sort by the x-axis from low to high.",
            "Return a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, I want to list by the X in asc.",
            "Visualize a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and rank x axis in ascending order please.",
            "Give me the trend about the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and I want to list x axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 7,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a pie chart about the proportion of Team_Name and All_Games_Percent.",
            "Return a pie chart about the proportion of Team_Name and All_Games_Percent.",
            "A pie chart shows the proportion of Team_Name and All_Games_Percent.",
            "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart.",
            "Draw a pie chart about the proportion of Team_Name and All_Games_Percent.",
            "I want to know the proportion of all grams percent for each team name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of ACC_Regular_Season and School_ID , display School_ID in ascending order.",
            "Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart, rank from low to high by the y-axis.",
            "Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart, rank total number in ascending order.",
            "Find ACC_Regular_Season and School_ID , and visualize them by a bar chart, and rank from low to high by the y-axis.",
            "Show me school_id by acc regular season in a histogram, rank from low to high by the y-axis.",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and School_ID , and I want to show total number in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 4
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute founder in a bar chart, and I want to display by the X in desc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute founder, sort by the X-axis in descending.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute founder, I want to display by the X in desc.",
            "For those records from the products and each product's manufacturer, give me the comparison about revenue over the name , and group by attribute founder by a bar chart, and could you list bars from high to low order please?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and revenue , and group by attribute founder, sort by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show me mean age by born state in a histogram, rank by the y axis in asc.",
            "Show the average age of heads of departments born in each state with a bar chart, and show y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Florida",
                        "y_data": 50
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 53
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 55
                    },
                    {
                        "x_data": "California",
                        "y_data": 61.25
                    },
                    {
                        "x_data": "Alabama",
                        "y_data": 68
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bin the hire date into the day of week interval, and then calculate the total salary of employees in each day for a bar chart, note that just select those employees without the letter M in their first name, I want to list Y from low to high order please.",
            "For those employees whose first name does not contain the letter M, sum their salary by binning the hire date into the day of week interval for visualizing a bar chart, show by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 68100
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 70400
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 72300
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 75800
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 78700
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 92000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 116200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Compare all countries with a bar chart.",
            "What is the number of countries in the artist table?",
            "Give me a bar chart about the number of countries in the artist table",
            "Show how many country from each country"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fiji",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 5
                    },
                    {
                        "x_data": "Zimbabwe",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of engineers for different other details in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 19
                    },
                    {
                        "x_data": "Skilled",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of professors in each office with a bar chart.",
            "How many professors in each office? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AAK 160",
                        "y_data": 1
                    },
                    {
                        "x_data": "AAK 194",
                        "y_data": 1
                    },
                    {
                        "x_data": "AAK 201",
                        "y_data": 1
                    },
                    {
                        "x_data": "AAK 230",
                        "y_data": 1
                    },
                    {
                        "x_data": "AAK 297",
                        "y_data": 1
                    },
                    {
                        "x_data": "BBG 185",
                        "y_data": 1
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 1
                    },
                    {
                        "x_data": "DRE 102",
                        "y_data": 2
                    },
                    {
                        "x_data": "DRE 156",
                        "y_data": 2
                    },
                    {
                        "x_data": "DRE 208",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 126",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 284",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 333",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 409B",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Return a bar chart about the distribution of Sex and the amount of Sex , and group by attribute Sex, rank in ascending by the bar.",
            "A bar chart shows the distribution of Sex and the amount of Sex , and group by attribute Sex, sort by the x axis in asc.",
            "Give me the comparison about the amount of Sex over the Sex , and group by attribute Sex by a bar chart, and show in asc by the x axis.",
            "Bar chart x axis sex y axis how many sex, sort by the x axis in asc.",
            "Find Sex and the amount of Sex , and group by attribute Sex, and visualize them by a bar chart, and rank by the bars in asc.",
            "Show me about the distribution of Sex and the amount of Sex , and group by attribute Sex in a bar chart, list by the bars in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "M",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Sex)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show employees' salaries by their first name in a bar chart.",
            "You can return a bar chart with employees' first names and their salaries.",
            "Bar chart x axis first name y axis salary"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Steven",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Den",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    },
                    {
                        "x_data": "John",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of revenue , and group by attribute founder in a bar chart, and I want to rank by the X in asc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, and could you sort in ascending by the bars please?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, show by the names from low to high please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, and I want to sort in ascending by the names.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of revenue , and group by attribute founder, show by the names from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "James",
                        "y_data": 150
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 300
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 60
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "orchestra"
        ],
        "db_id": "orchestra",
        "nl_queries": [
            "Visualize a bar chart for how many orchestras does each record company manage?, could you list by the x-axis in desc please?",
            "How many orchestras does each record company manage Show bar chart, and I want to list in desc by the bars.",
            "Display a bar chart for how many orchestras does each record company manage?, and I want to show by the names from high to low.",
            "Draw a bar chart of record company versus the total number, I want to show by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "RCA",
                        "y_data": 1
                    },
                    {
                        "x_data": "Philips Classics Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Philips",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercury Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kultur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Koch Records / Naxos Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "EMI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Deutsche Grammophon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Delos Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decca Records",
                        "y_data": 2
                    },
                    {
                        "x_data": "Columbia Masterworks",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Record_Company",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex, display by the Y-axis from low to high.",
            "Give me a bar chart for sum weight of each sex, and rank Y-axis from low to high order.",
            "A bar chart shows the distribution of Sex and the sum of Weight , and group by attribute Sex, list Y-axis in asc order please.",
            "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex by a bar chart, display by the Y-axis from low to high.",
            "Show me about the distribution of Sex and the sum of Weight , and group by attribute Sex in a bar chart, display y axis from low to high order.",
            "Find Sex and the sum of Weight , and group by attribute Sex, and visualize them by a bar chart, could you rank y axis from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 184
                    },
                    {
                        "x_data": "M",
                        "y_data": 607
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 6
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 12
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 101.5
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of meter_500 and ID , and could you sort in descending by the total number?",
            "Show me about the distribution of meter_500 and ID in a bar chart, could you order y axis in descending order please?",
            "A bar chart shows the distribution of meter_500 and ID , and could you order y axis in descending order please?",
            "Give me the comparison about ID over the meter_500 , and show y axis from high to low order.",
            "Draw a bar chart about the distribution of meter_500 and ID , and I want to rank y-axis in desc order.",
            "Show id from each meter 500, could you rank in descending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4:52.85",
                        "y_data": 8
                    },
                    {
                        "x_data": "4:54.21",
                        "y_data": 7
                    },
                    {
                        "x_data": "4:56.15",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:54.48",
                        "y_data": 5
                    },
                    {
                        "x_data": "4:55.08",
                        "y_data": 4
                    },
                    {
                        "x_data": "4:54.19",
                        "y_data": 3
                    },
                    {
                        "x_data": "4:56.96",
                        "y_data": 2
                    },
                    {
                        "x_data": "4:57.03",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_500",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "How many courses for each subject? Plot a bar chart.",
            "Find the number of courses for each subject in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    },
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    },
                    {
                        "x_data": "Language",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, and sort District_name from high to low order.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, and display in desc by the bars.",
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, and rank in desc by the X.",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, I want to list X from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kasur District",
                        "y_data": 314617
                    },
                    {
                        "x_data": "Jhang District",
                        "y_data": 365198
                    },
                    {
                        "x_data": "Gujrat District",
                        "y_data": 328512
                    },
                    {
                        "x_data": "Gujranwala District",
                        "y_data": 1526168
                    },
                    {
                        "x_data": "Dera Ghazi Khan District",
                        "y_data": 464742
                    },
                    {
                        "x_data": "Chiniot District",
                        "y_data": 219254
                    },
                    {
                        "x_data": "Bahawalpur District",
                        "y_data": 530438
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "City_Population"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder, sort y-axis in asc order please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder, I want to list by the Y from low to high please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, and I want to list by the Y from low to high please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and show in asc by the total number.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart, I want to sort from low to high by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 6
                    },
                    {
                        "x_data": "James",
                        "y_data": 9
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "school_bus",
            "school"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the type of school and the number of buses for each type by a pie chart.",
            "Show the type of school and the number of buses for each type. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private",
                        "y_data": 3
                    },
                    {
                        "x_data": "Public",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the email by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and commission_pct .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and commission_pct , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and commission_pct .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the email ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KGRANT",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 0
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 0
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 0
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 0
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 0
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "catalogs",
            "catalog_structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5. Bin publication dates into Year interval, and count catalog as a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_publication",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_publication)"
                }
            }
        }
    },
    {
        "tables_used": [
            "locations"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Group and count the city attribute of the location table to visualize a bar chart, show by the names from low to high.",
            "Give me a bar chart to compare the number of departments located in different cities, and rank in ascending by the x-axis.",
            "Create a bar chart showing the number of city across city, order in asc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London",
                        "y_data": 1
                    },
                    {
                        "x_data": "Munich",
                        "y_data": 1
                    },
                    {
                        "x_data": "OX9 9ZB",
                        "y_data": 1
                    },
                    {
                        "x_data": "Seattle",
                        "y_data": 21
                    },
                    {
                        "x_data": "South San Francisco",
                        "y_data": 1
                    },
                    {
                        "x_data": "Southlake",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toronto",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CITY",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CITY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name does not containing the letter M, display their total salary by binning the hire date into Month interval for visualizing a bar chart, and display in descending by the Y-axis.",
            "Bin the hire date into Month interval, and then calculate the total salary of employees in each month for a bar chart, note that just select those employees without the letter M in their first name, and could you show by the Y-axis in descending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 260500
                    },
                    {
                        "x_data": "June",
                        "y_data": 122900
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 107800
                    },
                    {
                        "x_data": "July",
                        "y_data": 82300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of Time and ID , could you sort y-axis in desc order?",
            "Show me about the distribution of Time and ID in a bar chart, could you sort y-axis in desc order?",
            "Give me the comparison about ID over the Time by a bar chart, could you list ID from high to low order?",
            "Find Time and ID , and visualize them by a bar chart, and show y-axis in descending order.",
            "Bar chart x axis time y axis id, could you list ID from high to low order?",
            "Return a bar chart about the distribution of Time and ID , and sort by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "7:52.04",
                        "y_data": 8
                    },
                    {
                        "x_data": "7:47.91",
                        "y_data": 7
                    },
                    {
                        "x_data": "7:56.56",
                        "y_data": 6
                    },
                    {
                        "x_data": "7:49.98",
                        "y_data": 5
                    },
                    {
                        "x_data": "7:48.67",
                        "y_data": 4
                    },
                    {
                        "x_data": "7:46.95",
                        "y_data": 3
                    },
                    {
                        "x_data": "7:55.39",
                        "y_data": 2
                    },
                    {
                        "x_data": "7:53.43",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road.",
            "Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart.",
            "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road.",
            "Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road.",
            "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart.",
            "Stack bar chart of school_id vs ACC_Road based on all home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 4,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show names of technicians and the number of machines they are assigned to repair with a pie chart.",
            "Show names of technicians and the number of machines they are assigned to repair.",
            "what are the names of the technicians and how many machines are they assigned to repair?",
            "Show me the proportion on what are the names of the technicians and how many machines are they assigned to repair?",
            "What are the names of the technicians and how many machines are they assigned to repair. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Plot season by how many season as a line chart, list in desc by the x axis please.",
            "List the number of games in each season with a line chart, order in descending by the x axis.",
            "List the number of games in each season with a line chart, and list in desc by the x axis please.",
            "Plot season by how many season as a line chart, and could you rank by the X from high to low please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 2
                    },
                    {
                        "x_data": "2012",
                        "y_data": 5
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2009",
                        "y_data": 3
                    },
                    {
                        "x_data": "2008",
                        "y_data": 3
                    },
                    {
                        "x_data": "2007",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize the relationship between School_ID and ACC_Percent , and group by attribute ACC_Regular_Season.",
            "Draw a scatter chart about the correlation between School_ID and ACC_Percent , and group by attribute ACC_Regular_Season.",
            "Show me about the correlation between School_ID and ACC_Percent , and group by attribute ACC_Regular_Season in a scatter chart.",
            "What is the relationship between School_ID and ACC_Percent , and group by attribute ACC_Regular_Season?",
            "Return a scatter chart about the correlation between School_ID and ACC_Percent , and group by attribute ACC_Regular_Season.",
            "Scatterplot of acc_percent vs school id by ACC_Regular_Season"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.625,
                        "classify": "10\u20136"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "13\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.563,
                        "classify": "9\u20137"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "List the number of games in each season and group by home team in a group line chart, could you rank by the Season in ascending please?",
            "I want to see trend the number of season over season by Home_team, show x-axis in ascending order.",
            "List the number of games in each season and group by home team in a group line chart, and I want to show by the Season in ascending.",
            "I want to see trend the number of season over season by Home_team, and show x-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007-01-01",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 2,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 2,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 2,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 2,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show me the comparison of the total number of all ships' nationalities with a bar graph, and I want to sort in desc by the x axis.",
            "Return a bar chart showing the total number of ships' nationalities, order Nationality in desc order.",
            "Bar graph to show how many nationality from different nationality, order in descending by the x axis please.",
            "What is the total number of different nationalities of all ships? Give me a bar graph, list X-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 3
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings with a bar chart, sort in asc by the total number.",
            "Plot the total number by grouped by booking status code as a bar graph, sort in ascending by the Y.",
            "Show the booking status code and the corresponding number of bookings in a bar chart, order Y from low to high order.",
            "Return a bar chart on how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, and rank by the y-axis in asc.",
            "Show the booking status code and the corresponding number of bookings Show bar chart, and order in ascending by the Y.",
            "Show me a bar chart for how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, and rank by the Y from low to high.",
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings, and rank by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Confirmed",
                        "y_data": 7
                    },
                    {
                        "x_data": "Provisional",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_status_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Just list the customer event id and the corresponding move property id using a scatter.",
            "Show me a scatter plot of customer event id and property_id for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 70,
                        "y_data": 605
                    },
                    {
                        "x_data": 160,
                        "y_data": 879
                    },
                    {
                        "x_data": 166,
                        "y_data": 629
                    },
                    {
                        "x_data": 216,
                        "y_data": 669
                    },
                    {
                        "x_data": 226,
                        "y_data": 748
                    },
                    {
                        "x_data": 256,
                        "y_data": 108
                    },
                    {
                        "x_data": 428,
                        "y_data": 954
                    },
                    {
                        "x_data": 530,
                        "y_data": 669
                    },
                    {
                        "x_data": 559,
                        "y_data": 107
                    },
                    {
                        "x_data": 591,
                        "y_data": 120
                    },
                    {
                        "x_data": 606,
                        "y_data": 445
                    },
                    {
                        "x_data": 627,
                        "y_data": 748
                    },
                    {
                        "x_data": 817,
                        "y_data": 107
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Customer_Event_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "property_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_to_be_destroyed"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the id of each employee and the number of document destruction authorised by that employee by a scatter chart.",
            "Show the id of each employee and the number of document destruction authorised by that employee. Show scatter chart.",
            "plot scatter on what are the id of each employee and the number of document destruction authorised by that employee?",
            "Return a scatter chart on what are the id of each employee and the number of document destruction authorised by that employee?",
            "What are the id of each employee and the number of document destruction authorised by that employee. Visualize by scatter chart.",
            "Scatter plot to show destruction authorised by employee id on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 30,
                        "y_data": 1
                    },
                    {
                        "x_data": 38,
                        "y_data": 1
                    },
                    {
                        "x_data": 55,
                        "y_data": 3
                    },
                    {
                        "x_data": 123,
                        "y_data": 1
                    },
                    {
                        "x_data": 156,
                        "y_data": 2
                    },
                    {
                        "x_data": 183,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Destruction_Authorised_by_Employee_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Which committees have delegates from the Democratic party, and count them by a bar chart, rank from low to high by the y axis.",
            "Return all the committees that have delegates from Democratic party, and count them by a bar chart, and sort in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Economic Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Appropriations",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Committee",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Committee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart.",
            "Show me a bar chart about the number of races held in each year after 2014."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a pie chart about the proportion of Team_Name and ACC_Percent.",
            "Give me a pie chart to reflect the proportion of Team_Name and ACC_Percent.",
            "Visualize a pie chart about the proportion of Team_Name and ACC_Percent.",
            "Show me about the proportion of ACC_Percent and ACC_Percent in a pie chart.",
            "For the attribute Team_Name and ACC_Percent, show their proportion by a pie chart.",
            "Create a pie chart showing acc_percent across team name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, rank in ascending by the X.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and rank JOB_ID in asc order.",
            "For those employees who did not have any job in the past, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, could you list by the bar from low to high?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, I want to rank by the x axis in asc please.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of salary , and group by attribute job_id, and I want to show bars in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7920
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5760
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2780
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 12200
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8341.379310344828
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3215
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2785
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7125
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pilot"
        ],
        "db_id": "pilot_record",
        "nl_queries": [
            "Bar chart of the number of position from each position, rank by the Y from high to low please.",
            "Please compare the frequency of the position of the pilots using a bar chart, and could you list in descending by the Y-axis?",
            "Can you draw a bar chart to show the number of positions of the pilots?, rank in descending by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Center Team",
                        "y_data": 3
                    },
                    {
                        "x_data": "Forward-Center Team",
                        "y_data": 1
                    },
                    {
                        "x_data": "Forward Team",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Position)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "How many courses for each subject? Plot a bar chart, sort names in descending order.",
            "Find the number of courses for each subject in a bar chart, and rank from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Language",
                        "y_data": 5
                    },
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    },
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "home_game"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Return a line chart on what is the average number of attendance at home games for each year?",
            "Show me the trend about what is the average number of attendance at home games for each year?",
            "What is the average number of attendance at home games for each year. Plot them as line chart.",
            "For each year, return the year and the average number of attendance at home games.",
            "Show the trend about the total average number of attendance at home games change over the years, bin year into year interval.",
            "Plot year by the average of attendance as a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1871-01-01",
                        "y_data": 17125
                    },
                    {
                        "x_data": "1872-01-01",
                        "y_data": 14603.333333333336
                    },
                    {
                        "x_data": "1873-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1874-01-01",
                        "y_data": 27249.7
                    },
                    {
                        "x_data": "1875-01-01",
                        "y_data": 17329.391304347828
                    },
                    {
                        "x_data": "1876-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1877-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1878-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1879-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1880-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1881-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1882-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1883-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1884-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1885-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1886-01-01",
                        "y_data": 11856.35294117647
                    },
                    {
                        "x_data": "1887-01-01",
                        "y_data": 18591.666666666668
                    },
                    {
                        "x_data": "1888-01-01",
                        "y_data": 8186.380952380952
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 6767.571428571428
                    },
                    {
                        "x_data": "1890-01-01",
                        "y_data": 10271.057142857142
                    },
                    {
                        "x_data": "1891-01-01",
                        "y_data": 2324
                    },
                    {
                        "x_data": "1892-01-01",
                        "y_data": 4512.642857142857
                    },
                    {
                        "x_data": "1893-01-01",
                        "y_data": 9379.07142857143
                    },
                    {
                        "x_data": "1894-01-01",
                        "y_data": 143202.375
                    },
                    {
                        "x_data": "1895-01-01",
                        "y_data": 9883.333333333334
                    },
                    {
                        "x_data": "1896-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1897-01-01",
                        "y_data": 9875
                    },
                    {
                        "x_data": "1898-01-01",
                        "y_data": 350
                    },
                    {
                        "x_data": "1899-01-01",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1900-01-01",
                        "y_data": 36116.125
                    },
                    {
                        "x_data": "1901-01-01",
                        "y_data": 7859
                    },
                    {
                        "x_data": "1902-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1904-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1905-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1906-01-01",
                        "y_data": 46664.75
                    },
                    {
                        "x_data": "1907-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1908-01-01",
                        "y_data": 5284.6875
                    },
                    {
                        "x_data": "1909-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1910-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1911-01-01",
                        "y_data": 117353.38888888886
                    },
                    {
                        "x_data": "1912-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1914-01-01",
                        "y_data": 211425.64
                    },
                    {
                        "x_data": "1915-01-01",
                        "y_data": 153360.2
                    },
                    {
                        "x_data": "1916-01-01",
                        "y_data": 55500
                    },
                    {
                        "x_data": "1917-01-01",
                        "y_data": 220268.875
                    },
                    {
                        "x_data": "1918-01-01",
                        "y_data": 46148.75
                    },
                    {
                        "x_data": "1919-01-01",
                        "y_data": 213044.1875
                    },
                    {
                        "x_data": "1920-01-01",
                        "y_data": 280158.1176470588
                    },
                    {
                        "x_data": "1921-01-01",
                        "y_data": 340739.625
                    },
                    {
                        "x_data": "1922-01-01",
                        "y_data": 317164.375
                    },
                    {
                        "x_data": "1923-01-01",
                        "y_data": 435409.8125
                    },
                    {
                        "x_data": "1924-01-01",
                        "y_data": 501204.8125
                    },
                    {
                        "x_data": "1925-01-01",
                        "y_data": 470832.6875
                    },
                    {
                        "x_data": "1926-01-01",
                        "y_data": 238276.375
                    },
                    {
                        "x_data": "1927-01-01",
                        "y_data": 488246.4705882353
                    },
                    {
                        "x_data": "1928-01-01",
                        "y_data": 294843.25
                    },
                    {
                        "x_data": "1929-01-01",
                        "y_data": 336567.82352941175
                    },
                    {
                        "x_data": "1930-01-01",
                        "y_data": 213375.82352941175
                    },
                    {
                        "x_data": "1931-01-01",
                        "y_data": 285558.4117647059
                    },
                    {
                        "x_data": "1932-01-01",
                        "y_data": 221597.8333333333
                    },
                    {
                        "x_data": "1933-01-01",
                        "y_data": 295785.1875
                    },
                    {
                        "x_data": "1934-01-01",
                        "y_data": 189549
                    },
                    {
                        "x_data": "1935-01-01",
                        "y_data": 350890.6875
                    },
                    {
                        "x_data": "1936-01-01",
                        "y_data": 436795.58823529404
                    },
                    {
                        "x_data": "1937-01-01",
                        "y_data": 437536.11764705885
                    },
                    {
                        "x_data": "1938-01-01",
                        "y_data": 476012.22222222225
                    },
                    {
                        "x_data": "1939-01-01",
                        "y_data": 604727.8823529412
                    },
                    {
                        "x_data": "1940-01-01",
                        "y_data": 628654.4705882353
                    },
                    {
                        "x_data": "1941-01-01",
                        "y_data": 560421.8823529412
                    },
                    {
                        "x_data": "1942-01-01",
                        "y_data": 485573.6470588236
                    },
                    {
                        "x_data": "1943-01-01",
                        "y_data": 465679.41176470596
                    },
                    {
                        "x_data": "1944-01-01",
                        "y_data": 524242.9411764706
                    },
                    {
                        "x_data": "1945-01-01",
                        "y_data": 651439.2352941176
                    },
                    {
                        "x_data": "1946-01-01",
                        "y_data": 1019072.2777777779
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 1286085.625
                    },
                    {
                        "x_data": "1948-01-01",
                        "y_data": 1319362
                    },
                    {
                        "x_data": "1949-01-01",
                        "y_data": 1285012.375
                    },
                    {
                        "x_data": "1950-01-01",
                        "y_data": 1088765.5625
                    },
                    {
                        "x_data": "1951-01-01",
                        "y_data": 1024580.3125
                    },
                    {
                        "x_data": "1952-01-01",
                        "y_data": 912397.625
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 929984.5625
                    },
                    {
                        "x_data": "1954-01-01",
                        "y_data": 1033169.8125
                    },
                    {
                        "x_data": "1955-01-01",
                        "y_data": 1041463.875
                    },
                    {
                        "x_data": "1956-01-01",
                        "y_data": 991736.7647058823
                    },
                    {
                        "x_data": "1957-01-01",
                        "y_data": 1007885.2941176472
                    },
                    {
                        "x_data": "1958-01-01",
                        "y_data": 1087706.5625
                    },
                    {
                        "x_data": "1959-01-01",
                        "y_data": 1203611.5625
                    },
                    {
                        "x_data": "1960-01-01",
                        "y_data": 1248884.6875
                    },
                    {
                        "x_data": "1961-01-01",
                        "y_data": 1051839.388888889
                    },
                    {
                        "x_data": "1962-01-01",
                        "y_data": 1074105.2
                    },
                    {
                        "x_data": "1963-01-01",
                        "y_data": 1039067.8
                    },
                    {
                        "x_data": "1964-01-01",
                        "y_data": 1064345.1
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 1127733
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 1205586.5714285714
                    },
                    {
                        "x_data": "1967-01-01",
                        "y_data": 1199437.7
                    },
                    {
                        "x_data": "1968-01-01",
                        "y_data": 1093400.5238095238
                    },
                    {
                        "x_data": "1969-01-01",
                        "y_data": 1094134.84
                    },
                    {
                        "x_data": "1970-01-01",
                        "y_data": 1103714
                    },
                    {
                        "x_data": "1971-01-01",
                        "y_data": 1218456.666666667
                    },
                    {
                        "x_data": "1972-01-01",
                        "y_data": 1145264.708333333
                    },
                    {
                        "x_data": "1973-01-01",
                        "y_data": 1255066.875
                    },
                    {
                        "x_data": "1974-01-01",
                        "y_data": 1249488.416666667
                    },
                    {
                        "x_data": "1975-01-01",
                        "y_data": 1241784.458333333
                    },
                    {
                        "x_data": "1976-01-01",
                        "y_data": 1304951.458333333
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 1510126.3461538462
                    },
                    {
                        "x_data": "1978-01-01",
                        "y_data": 1562493.230769231
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 1677201.4230769232
                    },
                    {
                        "x_data": "1980-01-01",
                        "y_data": 1656938.730769231
                    },
                    {
                        "x_data": "1981-01-01",
                        "y_data": 1023446.3461538459
                    },
                    {
                        "x_data": "1982-01-01",
                        "y_data": 1717054.4230769232
                    },
                    {
                        "x_data": "1983-01-01",
                        "y_data": 1745448.6538461538
                    },
                    {
                        "x_data": "1984-01-01",
                        "y_data": 1721233.730769231
                    },
                    {
                        "x_data": "1985-01-01",
                        "y_data": 1801622.3846153843
                    },
                    {
                        "x_data": "1986-01-01",
                        "y_data": 1828231.7692307688
                    },
                    {
                        "x_data": "1987-01-01",
                        "y_data": 2001087.1153846157
                    },
                    {
                        "x_data": "1988-01-01",
                        "y_data": 2038187.4230769232
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 2052794.9259259256
                    },
                    {
                        "x_data": "1990-01-01",
                        "y_data": 2114356.576923077
                    },
                    {
                        "x_data": "1991-01-01",
                        "y_data": 2187885.346153846
                    },
                    {
                        "x_data": "1992-01-01",
                        "y_data": 2151571.1153846155
                    },
                    {
                        "x_data": "1993-01-01",
                        "y_data": 2509234.0714285714
                    },
                    {
                        "x_data": "1994-01-01",
                        "y_data": 1785157.5357142857
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 1804337.8571428568
                    },
                    {
                        "x_data": "1996-01-01",
                        "y_data": 2005524.2333333332
                    },
                    {
                        "x_data": "1997-01-01",
                        "y_data": 2180498
                    },
                    {
                        "x_data": "1998-01-01",
                        "y_data": 2278377.7741935486
                    },
                    {
                        "x_data": "1999-01-01",
                        "y_data": 2197934.625
                    },
                    {
                        "x_data": "2000-01-01",
                        "y_data": 2275673.625
                    },
                    {
                        "x_data": "2001-01-01",
                        "y_data": 2341054.3870967743
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 2264819.8666666667
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 2182286.2258064514
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 2212707.484848485
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 2497232.666666666
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 2534515.833333333
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 2484490
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 2382495.8484848486
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 2447339.6
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 2283591.625
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 2368569.903225806
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 2414815.096774193
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 2387968.935483871
                    },
                    {
                        "x_data": "2014-01-01",
                        "y_data": 2378697.483870968
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(attendance)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES",
            "car_makers"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "how many car makers are there in each continents? List the continent name and the count, rank by the Y from low to high.",
            "Draw a bar chart for how many car makers are there in each continents? List the continent name and the count, and I want to show in ascending by the Y.",
            "A bar chart about what is the name of each continent and how many car makers are there in each one?, and display by the Y-axis in ascending.",
            "How many car makers are there in each continents? List the continent name and the count by a bar chart, show by the total number in asc.",
            "How many car makers are there in each continents? List the continent name and the count Visualize by bar chart, and I want to show in ascending by the Y.",
            "What is the name of each continent and how many car makers are there in each one Plot them as bar chart, rank by the Y from low to high.",
            "Display a bar chart for what is the name of each continent and how many car makers are there in each one?, and I want to show in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "america",
                        "y_data": 4
                    },
                    {
                        "x_data": "asia",
                        "y_data": 7
                    },
                    {
                        "x_data": "europe",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and I want to rank from low to high by the X.",
            "Bar chart x axis position y axis how many position, could you list from low to high by the X-axis?",
            "List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, rank by the X-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hooker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 1
                    },
                    {
                        "x_data": "Right Centre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Right Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scrum Half",
                        "y_data": 1
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 2
                    },
                    {
                        "x_data": "Stand Off",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Position)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the relationship between card id and card number and group by card type code in a group scatter chart.",
            "What are card ids, customer ids, card types, and card numbers for each customer card?",
            "Scatterplot of card_number vs card id by card_type_code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 4560596484842,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 2,
                        "y_data": 4859448397570735,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 4,
                        "y_data": 4485460762694,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 5,
                        "y_data": 5122249720639438,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 7,
                        "y_data": 4716674779726,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 8,
                        "y_data": 6011225247353230,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 13,
                        "y_data": 5484846021884483,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 3,
                        "y_data": 348237249146948,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 6,
                        "y_data": 5102229294602335,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 9,
                        "y_data": 4929590358481,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 10,
                        "y_data": 4532488235104,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 11,
                        "y_data": 4707949584519,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 12,
                        "y_data": 4929896676202959,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 14,
                        "y_data": 4929384762825,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 15,
                        "y_data": 345475370003028,
                        "classify": "Debit"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "card_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "card_number",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, list in desc by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Guti Midfielder",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gonzalo Higua\u00edn ",
                        "y_data": 8
                    },
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Level_of_membership"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Give me a pie chart showing the number of engineers for different skill description, and display skill_description in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV, Video",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 6
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, list in desc by the total number.",
            "Give me a bar chart for the average of team id of each acc road, could you list by the total number in descending?",
            "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, I want to sort in desc by the Y-axis.",
            "Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and order by the y axis in desc.",
            "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and list Y from high to low order please.",
            "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and I want to sort in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the weekday of birth of professors teaching course ACCT-211? Show a bar chart, could you display by the total number in asc?",
            "What is the weekday of birthdates of the professors in charge of ACCT-211? Visualize with a bar chart, I want to sort in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_DOB",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_DOB)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Create a bar chart showing the total number across location, could you sort Location from low to high order?",
            "Show each location and the number of cinemas there by a bar chart, and I want to show bar in asc order.",
            "Show each location and the number of cinemas there Show bar chart, I want to display in ascending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "County Clare",
                        "y_data": 3
                    },
                    {
                        "x_data": "County Cork",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Dublin",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Laois",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Louth",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Tipperary",
                        "y_data": 2
                    },
                    {
                        "x_data": "County Wicklow",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and could you list Y from high to low order?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of code , and group by attribute headquarter, sort Y-axis from high to low order.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart, and order in descending by the y-axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter, and could you list Y from high to low order?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and could you rank by the Y-axis in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute headquarter, display from low to high by the x-axis.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute headquarter in a bar chart, and could you sort by the Name from low to high?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute headquarter, and order in asc by the x-axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute headquarter by a bar chart, and show x axis from low to high order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute headquarter, and could you sort by the Name from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show the names and ids of tourist attractions that are visited at most once by a bar chart, and display bars from high to low order.",
            "Give me a histogram for what are the names and ids of the tourist attractions that are visited at most once?, rank by the bars in desc.",
            "What are the names and ids of the tourist attractions that are visited at most once Visualize by bar chart, could you order from high to low by the Name?",
            "Show the names and ids of tourist attractions that are visited at most once, display by the bar in desc.",
            "Display a bar chart for what are the names and ids of the tourist attractions that are visited at most once?, and display by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "presidents hall",
                        "y_data": 8429
                    },
                    {
                        "x_data": "history gallery",
                        "y_data": 6653
                    },
                    {
                        "x_data": "fun shops",
                        "y_data": 9360
                    },
                    {
                        "x_data": "flying elephant",
                        "y_data": 5076
                    },
                    {
                        "x_data": "UK gallery",
                        "y_data": 2701
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Tourist_Attraction_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "All_documents",
            "Ref_calendar"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Return a bar chart showing the number of documents stored in each weekday, order from high to low by the total number.",
            "How many documents are stored? Bin the store date by weekday in a bar chart, and I want to show in desc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 7
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Stored",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Stored)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergy types and the number of allergies in each type in a bar chart.",
            "Show all allergy types and the number of allergies in each type. Plot them as bar chart.",
            "what are the allergy types and how many allergies correspond to each one?",
            "Return a bar chart on what are the allergy types and how many allergies correspond to each one?",
            "What are the allergy types and how many allergies correspond to each one.",
            "Bar graph to show the total number from different allergytype"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "food",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "workshop"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Return the number of venues of each workshop in a bar chart, display by the X in desc please.",
            "Draw a bar chart that counts the number of venues of each workshop, order from high to low by the x-axis please.",
            "Show the number of venue from each venue, display by the X in desc please.",
            "A bar chart shows the venue for each workshop, and show by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "New York USA",
                        "y_data": 2
                    },
                    {
                        "x_data": "New Jersey USA",
                        "y_data": 1
                    },
                    {
                        "x_data": "London UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "Istanbul Turkey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sportsinfo",
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "What are the last names for all scholarship students, and count them by a bar chart, I want to rank x axis in desc order.",
            "What are the number of the last names for all scholarship students?, rank in desc by the X-axis please.",
            "A bar chart for what are the number of the last names for all scholarship students?, sort in descending by the x axis.",
            "Show last names for all student who are on scholarship, and count them by a bar chart, could you order X-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shieber",
                        "y_data": 2
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between code and manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, visualize the relationship between code and manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and manufacturer , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 6,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 7,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 10,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": 8,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 9,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 11,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 2,
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 4,
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 1,
                        "y_data": 5,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": 5,
                        "y_data": 1,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all the planned delivery dates and bin by weekday in a bar chart.",
            "Bar chart of the number of planned delivery date from each planned delivery date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Planned_Delivery_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Planned_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality.",
            "What is the total number of every ship type by categorizing by nationality?",
            "Draw a bar chart showing the total number of every ship type by categorizing by nationality.",
            "Stack bar chart of the number of type vs Nationality based on type"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 2,
                        "classify": "United Kingdom"
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 3,
                        "classify": "United Kingdom"
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 1,
                        "classify": "United States"
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 2,
                        "classify": "United States"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Give me the comparison about the amount of Sex over the Sex , and group by attribute Sex by a bar chart.",
            "Return a bar chart about the distribution of Sex and the amount of Sex , and group by attribute Sex.",
            "Show me about the distribution of Sex and the amount of Sex , and group by attribute Sex in a bar chart.",
            "A bar chart shows the distribution of Sex and the amount of Sex , and group by attribute Sex.",
            "Find Sex and the amount of Sex , and group by attribute Sex, and visualize them by a bar chart.",
            "Bar chart x axis sex y axis how many sex"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "M",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Sex)"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "A pie chart showing the number of results of the battles when the bulgarian commander is not 'Boril'."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bulgarian victory",
                        "y_data": 5
                    },
                    {
                        "x_data": "Two Year Truce",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(result)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "result"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, rank names from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "w",
                        "y_data": 3
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "l",
                        "y_data": 3
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Compare the frequency of product names using a bar chart, and display in desc by the X-axis.",
            "Bar chart x axis product name y axis how many product name, display in desc by the X-axis.",
            "Show me a bar chart with the product name and their frequency, sort by the X in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "jcrew",
                        "y_data": 4
                    },
                    {
                        "x_data": "gucci",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apple",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show all countries and the number of people from each country with a bar chart, rank bar in asc order.",
            "Give me a bar chart for the total number of each country, I want to list by the x axis in ascending.",
            "Show all countries and the number of people from each country, rank bar in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 1
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sweden",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the max gpa of all students in each department with a bar chart, and sort in desc by the bar please.",
            "What is the highest student GPA for every department? Return a bar chart, and display in desc by the bars.",
            "Show me maximal stu gpa by dept code in a histogram, and display in desc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.27
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 3.15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday, could you list the average of manager id in asc order?",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday, could you list the average of manager id in asc order?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, I want to list in ascending by the the average of manager id.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, and order in asc by the Y.",
            "For those employees who did not have any job in the past, find hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart, and I want to list in ascending by the the average of manager id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 115.13333333333334
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 120.28571428571429
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 122.71428571428571
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 123
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 128.3846153846154
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 129.46666666666667
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 135
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "countries"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "You can give me a bar chart, that groups and counts the country name, and could you list from low to high by the bars please?",
            "Please show me how many employees working on different countries using a bar chart, and could you display from low to high by the x axis please?",
            "Bar graph to show how many country name from different country name, order in asc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 2
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States of America",
                        "y_data": 68
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "COUNTRY_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(COUNTRY_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Please draw a histogram to show the total number of participants in each type code, and order in desc by the Participant_Type_Code.",
            "Bar chart x axis participant type code y axis the number of participant type code, show by the bar in desc please.",
            "Compare the number of participants in each participant type code using a bar chart, order bars from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Participant",
                        "y_data": 8
                    },
                    {
                        "x_data": "Organizer",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Participant_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather",
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the id and local authority of the station whose maximum precipitation is higher than 50. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chiltern",
                        "y_data": 1
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 3
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 4
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Ignore movies whose director is NULL. For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 5
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 3
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "body_builder"
        ],
        "db_id": "body_builder",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between People_ID and Snatch .",
            "Visualize the relationship between People_ID and Snatch .",
            "Return a scatter chart about the correlation between People_ID and Snatch .",
            "A scatter chart shows the correlation between People_ID and Snatch .",
            "Show me about the correlation between People_ID and Snatch in a scatter chart.",
            "Plot a scatter chart, people id by snatch."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 142.5
                    },
                    {
                        "x_data": 2,
                        "y_data": 137.5
                    },
                    {
                        "x_data": 3,
                        "y_data": 140
                    },
                    {
                        "x_data": 5,
                        "y_data": 137.5
                    },
                    {
                        "x_data": 6,
                        "y_data": 130
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "People_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Snatch"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Reviewer"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, and show in descending by the Y-axis.",
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and rank Y in descending order.",
            "Draw a bar chart for what is the average rating star for each reviewer?, sort y axis in desc order please.",
            "A bar chart about what is the average rating star for each reviewer?, I want to show from high to low by the y axis.",
            "What is the average rating star for each reviewer, display in descending by the total number.",
            "What is the average number of stars that each reviewer awards for a movie Show bar chart, and rank Y in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Cameron",
                        "y_data": 5
                    },
                    {
                        "x_data": "Elizabeth Thomas",
                        "y_data": 4
                    },
                    {
                        "x_data": "Daniel Lewis",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sarah Martinez",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mike Anderson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chris Jackson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ashley White",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brittany Harris",
                        "y_data": 2.6666666666666665
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "How many entrepreneurs correspond to each investor, and order by the names in asc.",
            "Display a bar chart for what are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?, and show by the X from low to high.",
            "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor, and show by the bars from low to high.",
            "how many entrepreneurs correspond to each investor?, I want to display by the bar in asc.",
            "Draw a bar chart of investor versus the total number, I want to display by the bar in asc.",
            "Return a histogram on how many entrepreneurs correspond to each investor?, sort by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Doug Richard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duncan Bannatyne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Peter Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachel Elnaugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Woodroffe",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Employees"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Bar chart x axis role code y axis the total number, I want to display in descending by the Role_Code.",
            "Show all role codes and the number of employees in each role Show bar chart, and could you show by the bars in desc please?",
            "Show all role codes and the number of employees in each role by a bar chart, display from high to low by the X-axis please.",
            "What is the code of each role and the number of employees in each role Show bar chart, and I want to show by the x axis in desc please.",
            "Return a histogram on what is the code of each role and the number of employees in each role?, sort x axis in desc order please.",
            "Give me a histogram for what is the code of each role and the number of employees in each role?, and sort x axis in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR",
                        "y_data": 5
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR",
                        "y_data": 1
                    },
                    {
                        "x_data": "ED",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Role_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many staffs have contacted with each engineer? Give me a bar chart grouping by each engineer's first name, list from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Archibald",
                        "y_data": 6
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Etha",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff",
            "Projects"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Scatter chart. how many staff does each project has? List the project id and the number in an ascending order.",
            "how many staff does each project has? List the project id and the number in an ascending order.",
            "How many staff does each project has? List the project id and the number in an ascending order with a scatter chart.",
            "How many staff does each project has? List the project id and the number in an ascending order. Visualize by scatter chart.",
            "For each project id, how many staff does it have? List them in increasing order. Show scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 1
                    },
                    {
                        "x_data": 4,
                        "y_data": 1
                    },
                    {
                        "x_data": 7,
                        "y_data": 1
                    },
                    {
                        "x_data": 8,
                        "y_data": 1
                    },
                    {
                        "x_data": 9,
                        "y_data": 1
                    },
                    {
                        "x_data": 15,
                        "y_data": 1
                    },
                    {
                        "x_data": 1,
                        "y_data": 2
                    },
                    {
                        "x_data": 5,
                        "y_data": 2
                    },
                    {
                        "x_data": 11,
                        "y_data": 2
                    },
                    {
                        "x_data": 2,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "project_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 7650
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 6000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the average amount payment as the Y-axis.",
            "Calculate the average of amount for all the payments processed with Visa by each year using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 262456.6666666667
                    },
                    {
                        "x_data": "2018",
                        "y_data": 7343
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart",
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of revenue , and group by attribute founder in a bar chart, and sort by the the average of revenue in ascending.",
            "For those records from the products and each product's manufacturer, find founder and the average of revenue , and group by attribute founder, and visualize them by a bar chart, display by the total number in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder by a bar chart, could you order by the the average of revenue in ascending?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder, and order by the the average of revenue in ascending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of revenue , and group by attribute founder, and rank y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "has_pet"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Give me a histogram for what are the different first names and ages of the students who do have pets?, and display in desc by the names.",
            "What are the different first names and ages of the students who do have pets Visualize by bar chart, I want to rank in descending by the bar.",
            "Draw a bar chart for what are the different first names and ages of the students who do have pets?, and could you order in desc by the bars?",
            "Find the first name and age of students who have a pet, and I want to rank in descending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tracy",
                        "y_data": 19
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way Plot them as bar chart, and sort X from high to low order.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods Visualize by bar chart, list in desc by the bars.",
            "Plot the total number by grouped by how to get there as a bar graph, and rank from high to low by the x axis.",
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way in a bar chart, and show by the bars from high to low.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods in a bar chart, rank from high to low by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "walk",
                        "y_data": 5
                    },
                    {
                        "x_data": "shuttle",
                        "y_data": 4
                    },
                    {
                        "x_data": "bus",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "How_to_Get_There",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list total number of manager id in ascending order please.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list total number of manager id in ascending order please.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and order from low to high by the total number please.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and list total number of manager id in ascending order please.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart, could you list by the total number from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manager"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show the number of the countries that have managers of age above 50 or below 46.",
            "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart",
            "A bar chart for showing the number of the countries that have managers of age above 50 or below 46."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "England",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different starting date. Bin starting date by weekday and group by location code with a stacked bar chart.",
            "Stacked bar chart of how many date in location from for with each Location_Code in each date in location from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "c"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3,
                        "classify": "e"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "x"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain",
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, could you order by the bars in ascending please?",
            "What are the id and name of the mountains that have at least 2 photos Show bar chart, and could you order in ascending by the x-axis?",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, could you order names from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ighil Mgoun",
                        "y_data": 14
                    },
                    {
                        "x_data": "Mount Cameroon",
                        "y_data": 12
                    },
                    {
                        "x_data": "Taska n\u2019Zat",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "department)"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the name and budget of departments whose budgets are more than the average budget Visualize by bar chart, I want to order from low to high by the x-axis please.",
            "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, display by the bars from low to high.",
            "What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, and display by the bars from low to high.",
            "Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and I want to order from low to high by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Astronomy",
                        "y_data": 617253.94
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 734550.7
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 647610.55
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 794541.46
                    },
                    {
                        "x_data": "English",
                        "y_data": 611042.66
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 866831.75
                    },
                    {
                        "x_data": "History",
                        "y_data": 699140.86
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 601283.6
                    },
                    {
                        "x_data": "Math",
                        "y_data": 777605.11
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 942162.76
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 573745.09
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 848175.04
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "budget"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "What is total number of show times per dat for each cinema Show bar chart, and I want to order from low to high by the bar please.",
            "Display a bar chart for what is total number of show times per dat for each cinema?, rank by the bars from low to high.",
            "Give me a histogram for what is total number of show times per dat for each cinema?, and could you order by the Name from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 5
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 10
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.show_times_per_day)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, and I want to sort by the the number of roomname in desc please.",
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, list by the Y-axis in descending.",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, and rank from high to low by the y-axis.",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, I want to show total number from high to low order.",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, list by the Y-axis in descending.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY, and I want to sort by the the number of roomname in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 3
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(roomName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for department_id, hire_date, visualize the trend.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of department_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of department_id over hire_date in a line chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me the trend about department_id over hire_date with a line chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of department_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of department_id over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 10
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "For each director, return the highest rating among all of their movies and the value of that rating, group by title in a scatter, and Ignore movies whose director is NULL."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 5,
                        "y_data": 5,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": 4,
                        "y_data": 4,
                        "classify": "Gone with the Wind"
                    },
                    {
                        "x_data": 4,
                        "y_data": 4,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "The Sound of Music"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "stars",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.stars)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of salary bin hire_date by weekday, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 79600
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 94300
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 124400
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 108200
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 94800
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 97400
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 86200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Show the number of purchases for each coffee shop address in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bridgeport",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheshire",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Waterbury",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Address)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "List all customer status codes and the number of customers having each status code by a pie chart.",
            "Visualize a pie chart to show customer status codes and the number of customers having each status code.",
            "For each customer status code, how many customers are classified that way. Show the proportion.",
            "I want to know the proportion of the total number for each customer status code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bad Customer",
                        "y_data": 9
                    },
                    {
                        "x_data": "Good Customer",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_status_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For each manufacturer, what are the names and prices of their most expensive product?, and order y axis in descending order.",
            "Show the product name and price of its most expensive product using a bar chart, and show from high to low by the total number.",
            "Just list the name and price of its most expensive product in a bar chart, could you order y axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the transaction types and the total amount of transactions, and order by the X-axis from low to high.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?, and sort X in asc order please.",
            "what are total transaction amounts for each transaction type?, sort X in asc order please.",
            "What are total transaction amounts for each transaction type, and show transaction_type in asc order.",
            "Show the transaction types and the total amount of transactions with a bar chart, and show bar from low to high order.",
            "Show sum transaction amount from each transaction type, could you order in ascending by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Payment",
                        "y_data": 8743.15
                    },
                    {
                        "x_data": "Refund",
                        "y_data": 11192.69
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(transaction_amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the dog name and age of the dogs who have been abandoned in a bar chart.",
            "How old is each dog that was abandoned? Show in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kacey",
                        "y_data": 6
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 4
                    },
                    {
                        "x_data": "Evangeline",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and order by the y-axis in desc.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart, sort from high to low by the total number.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart, and display by the y-axis from high to low.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and list y axis in desc order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and order by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    },
                    {
                        "x_data": "June",
                        "y_data": 83.57142857142857
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 50.333333333333336
                    },
                    {
                        "x_data": "July",
                        "y_data": 46.12903225806452
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about Team_ID over the All_Neutral by a bar chart, and display in desc by the y-axis please.",
            "Give me a bar chart for team_id of each all neutral, and sort in descending by the Team_ID.",
            "Show me about the distribution of All_Neutral and Team_ID in a bar chart, and sort in descending by the Team_ID.",
            "Visualize a bar chart about the distribution of All_Neutral and Team_ID , I want to display by the Y-axis from high to low please.",
            "Find All_Neutral and Team_ID , and visualize them by a bar chart, sort in descending by the Team_ID.",
            "Give me the comparison about Team_ID over the All_Neutral , and I want to display by the Y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 3
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "9\u20131",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the name , and group by attribute name by a bar chart, and rank by the Y-axis in desc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of revenue , and group by attribute name, I want to show Y-axis from high to low order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name, show by the total number from high to low.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of revenue , and group by attribute name in a bar chart, I want to order y axis in desc order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of revenue , and group by attribute name, and show by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 300
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 150
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 60
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Draw a bar chart about the distribution of Name and Weight .",
            "Return a bar chart about the distribution of Name and Weight .",
            "Visualize a bar chart about the distribution of Name and Weight .",
            "Show me about the distribution of Name and Weight in a bar chart.",
            "A bar chart shows the distribution of Name and Weight .",
            "Show weight from each name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hubert Henno",
                        "y_data": 83
                    },
                    {
                        "x_data": "Dominique Daquin",
                        "y_data": 85
                    },
                    {
                        "x_data": "St\u00e9phane Antiga",
                        "y_data": 94
                    },
                    {
                        "x_data": "Laurent Capet",
                        "y_data": 92
                    },
                    {
                        "x_data": "Frantz Granvorka",
                        "y_data": 90
                    },
                    {
                        "x_data": "Vincent Montm\u00e9at",
                        "y_data": 88
                    },
                    {
                        "x_data": "Lo\u00efc De Kergret",
                        "y_data": 89
                    },
                    {
                        "x_data": "Philippe Bar\u00e7a-Cysique",
                        "y_data": 88
                    },
                    {
                        "x_data": "Guillaume Samica",
                        "y_data": 82
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, list Y in descending order.",
            "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, could you list from high to low by the Y?",
            "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart, and sort y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings in each weekday and bin booking end date by weekday with a bar chart.",
            "How many apartment bookings in each weekday? Show me a bar chart binning booking end date by weekday.",
            "Bar chart x axis booking end date y axis the number of booking end date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_end_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_end_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show how many delegates in each county with a bar chart.",
            "Use a bar chart to show the number of delegates in each county."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, I want to order X-axis from high to low order please.",
            "Bar chart x axis location y axis the average of number of platforms, and show x axis from high to low order.",
            "Give me a bar chart about the average of number_of_platforms in different locations, sort from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London",
                        "y_data": 14
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Number_of_Platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, order by the total number in asc.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and order by the total number in ascending.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id, order from low to high by the total number.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, and order y-axis from low to high order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, order by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Show me a bar chart for what are the ids and details of events that have more than one participants?",
            "A bar chart about what are the ids and details of events that have more than one participants?",
            "What are the ids and details of events that have more than one participants."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 70
                    },
                    {
                        "x_data": "Success",
                        "y_data": 83
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Event_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show budget type codes and the number of documents in each budget type Show bar chart, and I want to list by the total number in desc please.",
            "what are the different budget type codes, and how many documents are there for each?, I want to list by the total number in desc please.",
            "What are the different budget type codes, and how many documents are there for each Plot them as bar chart, could you list in desc by the y axis please?",
            "Show budget type codes and the number of documents in each budget type with a bar chart, could you order by the y axis from high to low please?",
            "Show me a bar chart for what are the different budget type codes, and how many documents are there for each?, and could you list in desc by the y axis please?",
            "Give me a bar chart for the total number of each budget type code, and I want to list by the total number in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GV",
                        "y_data": 6
                    },
                    {
                        "x_data": "SF",
                        "y_data": 2
                    },
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "payment",
            "payment",
            "staff"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and I want to display by the Y in descending.",
            "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, could you list from high to low by the Y-axis please?",
            "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart, I want to display by the Y in descending.",
            "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, I want to display by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 47
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 47
                    },
                    {
                        "x_data": "June",
                        "y_data": 15
                    },
                    {
                        "x_data": "May",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, sort Y-axis from high to low order.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, sort Y-axis from high to low order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, and display by the total number in descending.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time, and I want to sort by the Y-axis from high to low.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time, and I want to order in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 1862
                    },
                    {
                        "x_data": "July",
                        "y_data": 1742
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1449
                    },
                    {
                        "x_data": "June",
                        "y_data": 740
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airports"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "Find the altitude (or elevation) of the airports in the city of New York with a bar chart, order in ascending by the elevation.",
            "What is the altitude (or elevation) of the airports in the city of New York? Show me a bar chart, order in ascending by the elevation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John F Kennedy International Airport",
                        "y_data": 13
                    },
                    {
                        "x_data": "La Guardia Airport",
                        "y_data": 21
                    },
                    {
                        "x_data": "Indianola Municipal Airport",
                        "y_data": 126
                    },
                    {
                        "x_data": "One Police Plaza Heliport",
                        "y_data": 244
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "elevation"
                }
            }
        }
    },
    {
        "tables_used": [
            "Professionals",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Find the id and cell phone of the professionals who operate two or more types of treatments, could you order in asc by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "00230569697",
                        "y_data": 4
                    },
                    {
                        "x_data": "139-321-7313",
                        "y_data": 6
                    },
                    {
                        "x_data": "328.842.3792",
                        "y_data": 8
                    },
                    {
                        "x_data": "962-983-8109x3509",
                        "y_data": 9
                    },
                    {
                        "x_data": "461-801-2600",
                        "y_data": 10
                    },
                    {
                        "x_data": "1-185-137-1945x409",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cell_number",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "professional_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Please compare the number of names of parties using a bar chart, show x axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the average weight for each pet type. Plot them as pie chart.",
            "Display a pie chart for what is the average weight for each type of pet?",
            "Give the proportion of what is the average weight for each type of pet?",
            "What is the average weight for each type of pet. Show a pie chart.",
            "Give me a pie to show mean weight from different pettype."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 12
                    },
                    {
                        "x_data": "dog",
                        "y_data": 11.35
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(weight)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "For each year, bin the year into day of the week interval, and return the average of the number of times the team Boston Red Stockings won in the postseasons using a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1903~1913",
                        "y_data": 5
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 5
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 5
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 5
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 5
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 10
                    },
                    {
                        "x_data": "2013",
                        "y_data": 15
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart, could you show Y in ascending order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart, could you sort by the y axis from low to high please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, and sort from low to high by the Y.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, list by the Y-axis in asc please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, and could you show Y in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 150.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 151
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 152
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 152.5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 153
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 153.5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 155
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "circuits"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?, and list y-axis in desc order please.",
            "What are the ids and locations of all circuits in France or Belgium Show bar chart, sort by the total number in desc.",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?, could you order Y from high to low order please?",
            "Find the id and location of circuits that belong to France or Belgium Plot them as bar chart, could you sort in descending by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Reims",
                        "y_data": 55
                    },
                    {
                        "x_data": "Le Mans",
                        "y_data": 54
                    },
                    {
                        "x_data": "Rouen",
                        "y_data": 53
                    },
                    {
                        "x_data": "Clermont-Ferrand",
                        "y_data": 51
                    },
                    {
                        "x_data": "Brussels",
                        "y_data": 50
                    },
                    {
                        "x_data": "Dijon",
                        "y_data": 41
                    },
                    {
                        "x_data": "Heusden-Zolder",
                        "y_data": 40
                    },
                    {
                        "x_data": "Le Castellet",
                        "y_data": 34
                    },
                    {
                        "x_data": "Spa",
                        "y_data": 13
                    },
                    {
                        "x_data": "Magny Cours",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "circuitId"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergy types and the number of allergies in each type in a bar chart, and show in descending by the total number please.",
            "Return a bar chart on what are the allergy types and how many allergies correspond to each one?, and show in descending by the total number please.",
            "What are the allergy types and how many allergies correspond to each one, and could you sort in desc by the Y?",
            "Bar graph to show the total number from different allergytype, sort y-axis from high to low order.",
            "Show all allergy types and the number of allergies in each type Plot them as bar chart, order in desc by the y axis.",
            "what are the allergy types and how many allergies correspond to each one?, could you display in desc by the Y-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "food",
                        "y_data": 7
                    },
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a bar chart for what is minimum age for different job title?, and I want to rank in desc by the y axis.",
            "Show minimal age from each job, I want to rank by the minimal age from high to low.",
            "How old is the youngest person for each job Visualize by bar chart, and I want to rank by the minimal age from high to low.",
            "What is minimum age for different job title, show in descending by the total number.",
            "Return a bar chart on how old is the youngest person for each job?, and I want to rank by the minimal age from high to low.",
            "what is minimum age for different job title?, and rank by the y-axis from high to low.",
            "how old is the youngest person for each job?, and show y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "student",
                        "y_data": 25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and I want to show in ascending by the x axis please.",
            "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart, and order bars in asc order please.",
            "Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and display by the x-axis in ascending.",
            "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and display from low to high by the x-axis.",
            "Show sum team id from each all home, sort bars from low to high order please.",
            "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart, and display from low to high by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 4
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Give me a histogram for what is the number of professors for different school?",
            "Return a bar chart on what is the number of professors for different school?",
            "What is the number of professors for different school. Plot them as bar chart.",
            "Return a bar chart on how many different professors are there for the different schools?",
            "A bar chart about how many different professors are there for the different schools?",
            "How many different professors are there for the different schools. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A&SCI",
                        "y_data": 12
                    },
                    {
                        "x_data": "BUS",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SCHOOL_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Show the number of year of the maximum price and score of wines in a bar chart, and bin the year into the weekday interval, and could you order y axis from high to low order?",
            "A bar chart shows the number of year of the maximum price and score of wines, and bin the year into the weekday interval, could you rank by the y axis in desc?",
            "Bar graph to show how many year from different year, sort the number of year in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player",
            "team"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\"."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of Team_Name and School_ID , list x-axis in desc order.",
            "Visualize a bar chart about the distribution of Team_Name and School_ID , sort in desc by the names.",
            "Show me about the distribution of Team_Name and School_ID in a bar chart, show in desc by the bar.",
            "Give me the comparison about School_ID over the Team_Name , order X-axis from high to low order.",
            "Return a bar chart about the distribution of Team_Name and School_ID , could you order from high to low by the x axis?",
            "Bar chart x axis team name y axis school_id, order x axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 5
                    },
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a line chart about the change of commission_pct over hire_date , and could you sort by the x-axis from low to high?",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of commission_pct over hire_date, list X-axis in asc order.",
            "For those employees who was hired before 2002-06-21, show me about the change of commission_pct over hire_date in a line chart, and I want to list in ascending by the HIRE_DATE.",
            "For those employees who was hired before 2002-06-21, show me the trend about commission_pct over hire_date with a line chart, and could you display x-axis in ascending order?",
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of commission_pct over hire_date , list X-axis in asc order.",
            "For those employees who was hired before 2002-06-21, for commission_pct, hire_date, visualize the trend, and order from low to high by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 0.4
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is skill description and group by fault short name, and order by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Electrical",
                        "y_data": 0,
                        "classify": "MW"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 1,
                        "classify": "MW"
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 4,
                        "classify": "MW"
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 3,
                        "classify": "PW"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 2,
                        "classify": "PW"
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 2,
                        "classify": "PW"
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 0,
                        "classify": "TW"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 2,
                        "classify": "TW"
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 1,
                        "classify": "TW"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, could you show by the X-axis from high to low?",
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name, and display from high to low by the first_name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Velva",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sigurd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ruben",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monte",
                        "y_data": 3
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Domenica",
                        "y_data": 2
                    },
                    {
                        "x_data": "Danny",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of professors with a PhD degree in each department Show bar chart, I want to order y-axis from high to low order.",
            "A bar chart about how many professors have a PhD in each department?, sort by the Y in desc.",
            "How many professors have a PhD in each department Show bar chart, sort Y-axis in desc order.",
            "Return a histogram on how many professors have a PhD in each department?, list by the total number in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CIS",
                        "y_data": 3
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    },
                    {
                        "x_data": "MATH",
                        "y_data": 2
                    },
                    {
                        "x_data": "ENG",
                        "y_data": 2
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2
                    },
                    {
                        "x_data": "SOC",
                        "y_data": 1
                    },
                    {
                        "x_data": "PSYCH",
                        "y_data": 1
                    },
                    {
                        "x_data": "MKT/MGT",
                        "y_data": 1
                    },
                    {
                        "x_data": "HIST",
                        "y_data": 1
                    },
                    {
                        "x_data": "ECON/FIN",
                        "y_data": 1
                    },
                    {
                        "x_data": "ART",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "actor",
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Return a histogram on how many actors have appeared in each musical?, and order y-axis in desc order please.",
            "How many actors have appeared in each musical Plot them as bar chart, and could you rank from high to low by the the total number ?",
            "how many actors have appeared in each musical?, could you rank in descending by the Y?",
            "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, sort Y-axis in desc order.",
            "Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, could you rank from high to low by the the total number ?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Book of Mormon",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Phantom of the Opera",
                        "y_data": 2
                    },
                    {
                        "x_data": "Les Mis\u00e9rables",
                        "y_data": 2
                    },
                    {
                        "x_data": "West Side Story",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me department_id by first name in a histogram, I want to list by the bars in asc.",
            "Use a histogram to show the department's id and corresponding employees' first name, and order x axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 50
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 60
                    },
                    {
                        "x_data": "Den",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 10
                    },
                    {
                        "x_data": "John",
                        "y_data": 80
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 100
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 90
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Show me about the proportion of the number of distinct states with a pie chart.",
            "Group by the distinct states, and count them in a pie chart.",
            "I want to know the proportion of the total number for each state."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 1
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "NY",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "List the number of games for each home team and group by away team in a stacked bar chart The x-axis is home team, and order in asc by the names.",
            "Stack bar chart of how many home team vs Away_team based on home team, and order names in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 7,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 3,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the names of people and the number of times they have been on the affirmative side of debates by a bar chart, sort in descending by the x-axis.",
            "Show the names of people and the number of times they have been on the affirmative side of debates, and I want to order by the X-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000, and could you list from high to low by the Name?",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart, sort Name from high to low order.",
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000, sort Name from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Movie",
            "Rating"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show me a bar chart for how many movie reviews does each director get?",
            "Return a bar chart on how many movie reviews does each director get?",
            "How many movie reviews does each director get. Show bar chart.",
            "For each director, how many reviews have they received. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 2
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 5
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart, rank in desc by the x-axis.",
            "Give me the comparison about Team_ID over the ACC_Regular_Season , and list x axis in desc order.",
            "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID , and I want to sort by the X-axis in descending.",
            "A bar chart shows the distribution of ACC_Regular_Season and Team_ID , show x axis in descending order.",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID , and I want to rank X in descending order.",
            "Show me team_id by acc regular season in a histogram, and rank X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20137",
                        "y_data": 4
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Compare the number of the names of phones by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Bar graph to show minimal room count from different apt type code, and order in ascending by the Y-axis.",
            "Return a bar chart showing the minimum room count of apartments in different type, and show by the total number from low to high.",
            "Show the minimum room count of apartments in different type with a bar chart, and list from low to high by the minimal room count."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duplex",
                        "y_data": 3
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Studio",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(room_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students living in each city with a bar chart, and display in ascending by the Y.",
            "Create a bar chart showing the total number across city code, sort y-axis in ascending order.",
            "How many students live in each city? Show a bar chart, order by the Y from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 1
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, and I want to sort Y in descending order.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, and list y-axis in desc order.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, and list Y from high to low order.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart, I want to show in desc by the y-axis.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, I want to show in desc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 65.33333333333333
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 65
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 62
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 62
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 60.666666666666664
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 60.666666666666664
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, and rank in asc by the x-axis.",
            "Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, and I want to show by the X-axis from low to high.",
            "Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, show by the X from low to high.",
            "Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, show x axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1976~1979",
                        "y_data": 2,
                        "classify": "b"
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 5,
                        "classify": "b"
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 2,
                        "classify": "b"
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 6,
                        "classify": "b"
                    },
                    {
                        "x_data": "2012~2015",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "2016~2017",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "1976~1979",
                        "y_data": 2,
                        "classify": "c"
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 6,
                        "classify": "c"
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 2,
                        "classify": "c"
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 7,
                        "classify": "c"
                    },
                    {
                        "x_data": "2012~2015",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "2016~2017",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "1976~1979",
                        "y_data": 2,
                        "classify": "e"
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 8,
                        "classify": "e"
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 2,
                        "classify": "e"
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 8,
                        "classify": "e"
                    },
                    {
                        "x_data": "2012~2015",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "2016~2017",
                        "y_data": 2,
                        "classify": "e"
                    },
                    {
                        "x_data": "1976~1979",
                        "y_data": 2,
                        "classify": "n"
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 8,
                        "classify": "n"
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 2,
                        "classify": "n"
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 2,
                        "classify": "n"
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 8,
                        "classify": "n"
                    },
                    {
                        "x_data": "2012~2015",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "2016~2017",
                        "y_data": 2,
                        "classify": "n"
                    },
                    {
                        "x_data": "1976~1979",
                        "y_data": 4,
                        "classify": "x"
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 8,
                        "classify": "x"
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 10,
                        "classify": "x"
                    },
                    {
                        "x_data": "2012~2015",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "2016~2017",
                        "y_data": 2,
                        "classify": "x"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time, and display y axis from low to high order.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart, could you display from low to high by the total number?",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of salary bin hire_date by time, and visualize them by a bar chart, and order by the y-axis from low to high please.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and order by the y-axis from low to high please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the hire_date bin hire_date by time by a bar chart, and show by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "July",
                        "y_data": 117000
                    },
                    {
                        "x_data": "June",
                        "y_data": 138400
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 146400
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 281300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, display Y in desc order.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and could you display in descending by the the average of employee id please?",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, and display y axis in descending order.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, and show by the total number in desc.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time, and display Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 191.08333333333334
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 162.3846153846154
                    },
                    {
                        "x_data": "July",
                        "y_data": 128.33333333333334
                    },
                    {
                        "x_data": "June",
                        "y_data": 107.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, could you sort from high to low by the X-axis?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of price , and group by attribute name, show by the X in desc please.",
            "For those records from the products and each product's manufacturer, find name and the average of price , and group by attribute name, and visualize them by a bar chart, could you list by the Name in desc?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the name , and group by attribute name by a bar chart, could you list by the bars in desc?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of price , and group by attribute name, and could you list by the bars in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "List the number of the name of technicians whose team is not \"NYY\", and I want to order from low to high by the y-axis please.",
            "A bar chart for listing the number of the name of technicians whose team is not \"NYY\", I want to rank in asc by the Y-axis.",
            "List the name of technicians whose team is not \"NYY\", and count them by a bar chart, I want to order from low to high by the y-axis please.",
            "What is the name of the technician whose team is not 'NYY', and count them by a bar chart, show by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lou Boudrea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mickey Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the number of debates for each person on the affirmative side in a bar chart, and order by the total number in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "device"
        ],
        "db_id": "device",
        "nl_queries": [
            "what are the different software platforms for devices, and how many devices have each?, order by the x-axis in ascending please.",
            "Bar chart x axis software platform y axis the total number, I want to show in ascending by the X-axis.",
            "What are the different software platforms for devices, and how many devices have each, I want to show bar in ascending order.",
            "A bar chart about what are the different software platforms for devices, and how many devices have each?, and show in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Android",
                        "y_data": 5
                    },
                    {
                        "x_data": "iOS",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Software_Platform",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "How many parties of the time they took office, binning the took office into WEEKDAY interval, I want to show by the Y-axis in descending.",
            "Bar graph to show the number of took office from different took office, I want to sort in desc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Took_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Took_office)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Show the relationship between oldest age and average age in a scatter chart.",
            "Plot a scatter chart, avg(age) by maximal age."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 19.7,
                        "y_data": 26
                    },
                    {
                        "x_data": 19.5,
                        "y_data": 27
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight",
            "Aircraft"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "What is the name of each aircraft and how many flights does each one complete Show bar chart, list bars from low to high order.",
            "Display a bar chart for what is the name of each aircraft and how many flights does each one complete?, show in asc by the names.",
            "Show aircraft names and number of flights for each aircraft, and show from low to high by the X.",
            "Visualize a bar chart for what is the name of each aircraft and how many flights does each one complete?, and rank in asc by the bar.",
            "Show aircraft names and number of flights for each aircraft with a bar chart, show by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Airbus A340-300",
                        "y_data": 2
                    },
                    {
                        "x_data": "Boeing 737-800",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boeing 747-400",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boeing 757-300",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embraer ERJ-145",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lockheed L1011",
                        "y_data": 2
                    },
                    {
                        "x_data": "Piper Archer III",
                        "y_data": 1
                    },
                    {
                        "x_data": "SAAB 340",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Does it have something interesting about the manager id and the location id?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 1700
                    },
                    {
                        "x_data": 103,
                        "y_data": 1400
                    },
                    {
                        "x_data": 108,
                        "y_data": 1700
                    },
                    {
                        "x_data": 114,
                        "y_data": 1700
                    },
                    {
                        "x_data": 121,
                        "y_data": 1500
                    },
                    {
                        "x_data": 145,
                        "y_data": 2500
                    },
                    {
                        "x_data": 200,
                        "y_data": 1700
                    },
                    {
                        "x_data": 201,
                        "y_data": 1800
                    },
                    {
                        "x_data": 203,
                        "y_data": 2400
                    },
                    {
                        "x_data": 204,
                        "y_data": 2700
                    },
                    {
                        "x_data": 205,
                        "y_data": 1700
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "LOCATION_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, show total number in descending order.",
            "Draw a bar chart of gender versus the number of gender, and rank by the y axis from high to low.",
            "Compare the distribution of the players' gender using a bar chart, show by the total number from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 9
                    },
                    {
                        "x_data": "F",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Gender)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Return the average price for each product type Visualize by bar chart, and sort x axis from low to high order.",
            "Return the average price for each product type by a bar chart, and rank bars from low to high order.",
            "What is the average price for each type of product Visualize by bar chart, and could you sort by the X-axis in asc please?",
            "what is the average price for each type of product?, rank x axis in asc order.",
            "Bar graph to show mean product price from different product type code, and rank x axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 715.5366666666665
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 796.0416666666665
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For employees without the letter M in their first name, give me a line chart to show the salary change over their hire date using a line chart, and I want to sort by the X-axis from high to low please.",
            "For those employees whose first name does not contain the letter M, give me a line chart to show the hire date and the corresponding salaries, display by the x-axis in desc please.",
            "For employees without the letter M in their first name, give me a line chart to show the salary change over their hire date using a line chart, and show X-axis from high to low order.",
            "For those employees whose first name does not contain the letter M, give me a line chart to show the hire date and the corresponding salaries, and show X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 4400
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 3900
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 3800
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 3400
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 8400
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 8600
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 7300
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 9600
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 13500
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 14000
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 3500
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 2100
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 5800
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, I want to order by the Y from low to high please.",
            "A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and rank by the y axis in asc.",
            "Show total number of id from each meter 200, I want to sort in ascending by the Y.",
            "Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and I want to order by the Y from low to high please.",
            "Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and display in asc by the Y-axis.",
            "Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, and order in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:57.21",
                        "y_data": 2
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 3
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 4
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 5
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:54.40",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal",
            "journal",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, rank in descending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "at Pittsburgh Steelers",
                        "y_data": 1763
                    },
                    {
                        "x_data": "at Oakland Raiders",
                        "y_data": 1934
                    },
                    {
                        "x_data": "at Cincinnati Bengals",
                        "y_data": 3421
                    },
                    {
                        "x_data": "Tampa Bay Buccaneers",
                        "y_data": 4798
                    },
                    {
                        "x_data": "Miami Dolphins",
                        "y_data": 798
                    },
                    {
                        "x_data": "Jacksonville Jaguars",
                        "y_data": 1232
                    },
                    {
                        "x_data": "Green Bay Packers",
                        "y_data": 2804
                    },
                    {
                        "x_data": "Cleveland Browns",
                        "y_data": 3798
                    },
                    {
                        "x_data": "Baltimore Ravens",
                        "y_data": 6532
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Theme",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Sales"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Find the number of people who is under 40 for each gender, and list x axis in asc order.",
            "Draw a bar chart for how many people are under 40 for each gender?, order by the gender from low to high.",
            "How many people are under 40 for each gender Plot them as bar chart, list x axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "female",
                        "y_data": 2
                    },
                    {
                        "x_data": "male",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "medication",
            "prescribes"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Draw a bar chart for how many medications are prescribed for each brand?, and display in asc by the total number.",
            "Find the number of medications prescribed for each brand Plot them as bar chart, sort in ascending by the y axis.",
            "How many medications are prescribed for each brand Visualize by bar chart, and could you list Y-axis in asc order?",
            "Display a bar chart for how many medications are prescribed for each brand?, sort in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Procrastin-X",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thesisin",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, a line chart shows the change of department_id over hire_date, sort in ascending by the HIRE_DATE.",
            "For those employees who did not have any job in the past, a line chart shows the trend of department_id over hire_date , order by the X in ascending.",
            "For those employees who did not have any job in the past, show me about the change of department_id over hire_date in a line chart, sort in ascending by the HIRE_DATE.",
            "For those employees who did not have any job in the past, return a line chart about the change of department_id over hire_date , order by the X in ascending.",
            "For those employees who did not have any job in the past, for department_id, hire_date, visualize the trend, order by the X in ascending.",
            "For those employees who did not have any job in the past, give me the trend about department_id over hire_date , display in ascending by the HIRE_DATE."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 40
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Give me a pie chart showing the number of engineers for different skill description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Electrical",
                        "y_data": 9
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 6
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is falut short name and group by skill description, and order in ascending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MW",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 3,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 2,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 2,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 4,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 2,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 1,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_short_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_short_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? Show their average number by each participant type code using a bar chart, could you show by the Y-axis in ascending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Organizer",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Participant",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and department_id , and visualize them by a bar chart, I want to list from low to high by the DEPARTMENT_ID.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and department_id , and I want to sort from low to high by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and department_id , list from low to high by the DEPARTMENT_ID.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and department_id in a bar chart, I want to sort from low to high by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and department_id , and I want to list from low to high by the DEPARTMENT_ID."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kimberely",
                        "y_data": 0
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    },
                    {
                        "x_data": "William",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_Channel",
            "cartoon"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a pie chart",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a pie chart",
            "A pie chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sky Famiglia",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sky Famiglia + Sky HD",
                        "y_data": 1
                    },
                    {
                        "x_data": "no ( FTV )",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Package_Option)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Package_Option"
                }
            }
        }
    },
    {
        "tables_used": [
            "university"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find the total student enrollment for different affiliation type schools Plot them as bar chart, I want to show by the sum enrollment in desc.",
            "What are the total enrollments of universities of each affiliation type Plot them as bar chart, and I want to show by the sum enrollment in desc.",
            "Show me a bar chart for what are the total enrollments of universities of each affiliation type?, list Y-axis in desc order.",
            "Draw a bar chart of affiliation versus sum enrollment, I want to show by the sum enrollment in desc.",
            "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, I want to show by the sum enrollment in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Public",
                        "y_data": 119027
                    },
                    {
                        "x_data": "Private/Methodist",
                        "y_data": 2100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Affiliation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show different citizenship of singers and the number of singers of each citizenship Plot them as bar chart, could you sort by the x-axis in asc please?",
            "Show different citizenship of singers and the number of singers of each citizenship in a bar chart, and rank in asc by the X.",
            "Show me the total number by citizenship in a histogram, and display bars in asc order.",
            "For each citizenship, how many singers are from that country, and display bars in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway",
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show id and location of railways that are associated with more than one train Visualize by bar chart, and show in descending by the total number.",
            "Show id and location of railways that are associated with more than one train by a bar chart, and could you display Y-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bressingham",
                        "y_data": 5
                    },
                    {
                        "x_data": "York",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Railway_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "perpetrator"
        ],
        "db_id": "perpetrator",
        "nl_queries": [
            "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, and list in descending by the y axis please.",
            "Bar chart x axis country y axis the total number, list total number from high to low order.",
            "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, and display by the Y-axis in descending please.",
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and sort by the the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "South Korea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "India",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hall_of_fame"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "bin the yearid into the day of the week interval and count them for visualizing a bar chart, list by the y axis in descending.",
            "Bar graph to show how many yearid from different yearid, list in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 12
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 12
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 11
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 11
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 11
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 11
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "yearid",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(yearid)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Reviewer"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Draw a bar chart for what is the average rating star for each reviewer?",
            "A bar chart about what is the average rating star for each reviewer?",
            "What is the average rating star for each reviewer.",
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?",
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?",
            "What is the average number of stars that each reviewer awards for a movie. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ashley White",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brittany Harris",
                        "y_data": 2.6666666666666665
                    },
                    {
                        "x_data": "Chris Jackson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Daniel Lewis",
                        "y_data": 4
                    },
                    {
                        "x_data": "Elizabeth Thomas",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mike Anderson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sarah Martinez",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Reviewer"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, could you display in ascending by the X-axis?",
            "What is the average rating star for each reviewer, could you display in ascending by the X-axis?",
            "A bar chart about what is the average rating star for each reviewer?, display in ascending by the x axis please.",
            "What is the average number of stars that each reviewer awards for a movie Show bar chart, and list by the bar from low to high.",
            "Draw a bar chart for what is the average rating star for each reviewer?, and I want to order from low to high by the X.",
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and display in ascending by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ashley White",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brittany Harris",
                        "y_data": 2.6666666666666665
                    },
                    {
                        "x_data": "Chris Jackson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Daniel Lewis",
                        "y_data": 4
                    },
                    {
                        "x_data": "Elizabeth Thomas",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mike Anderson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sarah Martinez",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Draw a bar chart of type versus the total number, I want to sort x axis in desc order.",
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, rank bars in descending order.",
            "Please give me a bar chart showing institution types, along with the number of institutions for each type, and display bars from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tribal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Public",
                        "y_data": 3
                    },
                    {
                        "x_data": "Private",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, show me about the change of salary over hire_date in a line chart, and rank in descending by the x axis.",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of salary over hire_date, could you show X-axis in descending order?",
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of salary over hire_date , display HIRE_DATE from high to low order.",
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of salary over hire_date , and show from high to low by the HIRE_DATE.",
            "For those employees who was hired before 2002-06-21, return a line chart about the change of salary over hire_date , and rank in descending by the x axis.",
            "For those employees who was hired before 2002-06-21, show me the trend about salary over hire_date with a line chart, and show from high to low by the HIRE_DATE."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 8300
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 13000
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 4400
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 3900
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 3800
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 3400
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 8400
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 8600
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 7300
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 7400
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 9600
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 7200
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 13500
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 14000
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 3500
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 2100
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 5800
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 7900
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 7800
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 7700
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril', and I want to order by the the number of result from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bulgarian victory",
                        "y_data": 5
                    },
                    {
                        "x_data": "Two Year Truce",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "result",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a stacked bar chart. The x-axis is course description and group by instructor's first name.",
            "How many courses for each course description? Show me a stacked bar chart. The x-axis is course description and group by instructor's first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, and could you show x axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 2,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 1,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 5,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 0,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 1,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 4,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 1,
                        "classify": "Furniture"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 0,
                        "classify": "Furniture"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 1,
                        "classify": "Furniture"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the total credits of all classes offered by each department. Visualize by bar chart.",
            "Give me a histogram for what are the total number of credits offered by each department?",
            "A bar chart about what are the total number of credits offered by each department?",
            "What are the total number of credits offered by each department. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 15
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.crs_credit)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie type that the student with first name Lisa has? Visualize by bar chart, display bar in asc order.",
            "What is the number of each allergie type the girl named Lisa has? Show bar chart, and I want to sort by the X from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 2
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 4
                    },
                    {
                        "x_data": "food",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Bar chart x axis name y axis age, and show Age in desc order.",
            "Show all artist names and ages in a histogram, list Y from high to low order.",
            "What are the names and ages of artists? Show the result in a bar graph, list y axis in descending order.",
            "A bar chart compares the ages of all artists, I want to display in desc by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 57
                    },
                    {
                        "x_data": "Larry Nelson",
                        "y_data": 50
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 48
                    },
                    {
                        "x_data": "Mark Brooks",
                        "y_data": 48
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 47
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 46
                    },
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Plot the number of home city by grouped by home city as a bar graph, I want to rank in descending by the bars.",
            "Show the comparison of the total number of the home city of all drivers with a bar chart, I want to rank in descending by the bars.",
            "Please give me a pie chart to show the number of home cities of all drivers, show by the names in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Manchester",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 6
                    },
                    {
                        "x_data": "East Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Coventry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bethel",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_city",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_city)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday, display by the total number in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, and order in desc by the the average of department id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart, list by the the average of department id in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of department_id bin hire_date by weekday, and visualize them by a bar chart, and rank from high to low by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, sort by the the average of department id in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 65.33333333333333
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 65
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 63.57142857142857
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 62
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 60.666666666666664
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 60.666666666666664
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show different parties of people along with the number of people in each party with a bar chart.",
            "Show different parties of people along with the number of people in each party. Plot them as bar chart.",
            "Bar graph to show the total number from different party"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anti-Lecompton Democrat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Independent Democrat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Count the number of people of each sex who have a weight higher than 85 by a bar chart, and I want to order by the X in asc.",
            "Count the number of people of each sex who have a weight higher than 85, display x-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "M",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show the average price of each film in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "genre"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "List the names of all genres in alphabetical oder, together with its ratings in a bar chart.",
            "List the names of all genres in alphabetical oder, together with its ratings. Plot them as bar chart.",
            "Show me a bar chart for what are the names of all genres in alphabetical order, combined with its ratings?",
            "Return a bar chart on what are the names of all genres in alphabetical order, combined with its ratings?",
            "What are the names of all genres in alphabetical order, combined with its ratings. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "blues",
                        "y_data": 7
                    },
                    {
                        "x_data": "folk",
                        "y_data": 9
                    },
                    {
                        "x_data": "modern",
                        "y_data": 8
                    },
                    {
                        "x_data": "nazrul",
                        "y_data": 7
                    },
                    {
                        "x_data": "pop",
                        "y_data": 9
                    },
                    {
                        "x_data": "tagore",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "g_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "rating"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me a bar chart for what are the department names and how many employees work in each of them?, could you list in asc by the bars?",
            "What are the department names and how many employees work in each of them Visualize by bar chart, and rank X in ascending order.",
            "Draw a bar chart for what are the department names and how many employees work in each of them?, and order from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 2
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 1
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 6
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT",
                        "y_data": 5
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 34
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart, rank Name from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 6
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 4
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 9
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Editor_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "Draw a bar chart for what are the name and assets of each company, sorted in ascending order of company name?",
            "Return a bar chart on what are the name and assets of each company, sorted in ascending order of company name?",
            "What are the name and assets of each company, sorted in ascending order of company name.",
            "List the name and assets of each company in ascending order of company name in a bar chart.",
            "List the name and assets of each company in ascending order of company name. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AT&T Inc.",
                        "y_data": 268.5
                    },
                    {
                        "x_data": "BNP Paribas",
                        "y_data": 2680.7
                    },
                    {
                        "x_data": "Berkshire Hathaway",
                        "y_data": 372.2
                    },
                    {
                        "x_data": "Chevron",
                        "y_data": 184.8
                    },
                    {
                        "x_data": "China Construction Bank",
                        "y_data": 1408
                    },
                    {
                        "x_data": "Citigroup",
                        "y_data": 1913.9
                    },
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 302.5
                    },
                    {
                        "x_data": "Gazprom",
                        "y_data": 275.9
                    },
                    {
                        "x_data": "General Electric",
                        "y_data": 751.2
                    },
                    {
                        "x_data": "HSBC",
                        "y_data": 2467.9
                    },
                    {
                        "x_data": "Industrial and Commercial Bank of China",
                        "y_data": 1723.5
                    },
                    {
                        "x_data": "JPMorgan Chase",
                        "y_data": 2117.6
                    },
                    {
                        "x_data": "PetroChina",
                        "y_data": 251.3
                    },
                    {
                        "x_data": "Petrobras",
                        "y_data": 313.2
                    },
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 317.2
                    },
                    {
                        "x_data": "Santander Group",
                        "y_data": 1570.6
                    },
                    {
                        "x_data": "Total",
                        "y_data": 192.8
                    },
                    {
                        "x_data": "Walmart",
                        "y_data": 180.7
                    },
                    {
                        "x_data": "Wells Fargo",
                        "y_data": 1258.1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Assets_billion"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and employee_id , order by the X in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and employee_id , list x-axis in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the first_name by a bar chart, show in ascending by the X-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and employee_id , and visualize them by a bar chart, order from low to high by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and employee_id in a bar chart, and I want to list X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hermann",
                        "y_data": 204
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 178
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 201
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 202
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 205
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 203
                    },
                    {
                        "x_data": "William",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the number of debates for each person on the affirmative side in a bar chart, and rank X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and I want to list by the mean salary in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and I want to list by the mean salary in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, and order by the Y-axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart, and order mean salary from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, I want to rank by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 9083.333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of engineers for different skill description The x-axis is skill description and group by other deteails, I want to show y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV, Video",
                        "y_data": 4,
                        "classify": ""
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 6,
                        "classify": ""
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 9,
                        "classify": ""
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 1,
                        "classify": "Skilled"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 0,
                        "classify": "Skilled"
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 0,
                        "classify": "Skilled"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "camera_lens"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Group and count brand for each camera lens using a bar chart.",
            "Show the number of brand from each brand"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Olympus",
                        "y_data": 3
                    },
                    {
                        "x_data": "Panasonic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Schneider Kreuznach",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigma",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "brand",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(brand)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and display from high to low by the y-axis.",
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, sort from high to low by the total number of meter 100 please.",
            "Create a bar chart showing total number of meter 100 across meter 200, and rank y-axis from high to low order.",
            "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, could you list y-axis from high to low order?",
            "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, and I want to order y-axis from high to low order.",
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, sort from high to low by the total number of meter 100 please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:57.26",
                        "y_data": 114
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:54.40",
                        "y_data": 55
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a histogram to show the date and the amount for all the payments processed with Visa, and show Date_Payment_Made in ascending order please.",
            "Which Payments were processed with Visa? List the date and the amount using a bar chart, list by the x axis from low to high please.",
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart, rank in asc by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-05-03",
                        "y_data": 172309
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 155654
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 459407
                    },
                    {
                        "x_data": "2018-02-24",
                        "y_data": 7343
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Amount_Payment"
                }
            }
        }
    },
    {
        "tables_used": [
            "company",
            "station_company)"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the number of companies without a gas station in each main industry with a bar chart, could you list from low to high by the Y?",
            "How many companies without a gas station in each main industry? Draw a bar chart, and display by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Main_Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart showing the number of first name for all female students Their sex is F, and show total number from low to high order.",
            "A bar chart about the number of first name for all female students whose sex is F, and list in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each day and bin date from by weekday with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the relationship between number of accounts and customer id in a scatter chart.",
            "What is the relationship between number of accounts and customer id? Show me a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 1
                    },
                    {
                        "x_data": 6,
                        "y_data": 1
                    },
                    {
                        "x_data": 8,
                        "y_data": 4
                    },
                    {
                        "x_data": 9,
                        "y_data": 1
                    },
                    {
                        "x_data": 12,
                        "y_data": 1
                    },
                    {
                        "x_data": 13,
                        "y_data": 4
                    },
                    {
                        "x_data": 15,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "customer_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of classes offered for all class rooms that held at least 2 classes Show bar chart, and order from low to high by the Y.",
            "Bar chart of the total number from each class room, and order by the y axis from low to high.",
            "For each classroom with at least 2 classes, how many classes are offered, and sort in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BUS252",
                        "y_data": 2
                    },
                    {
                        "x_data": "BUS311",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR209",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR200",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CLASS_ROOM",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart for what is the number of employees from each city?, and could you display bars in desc order?",
            "Count the number of employees for each city Plot them as bar chart, I want to sort x axis in desc order.",
            "Bar chart of the total number from each city, and order in descending by the bars please.",
            "What is the number of employees from each city, list x axis in desc order.",
            "what is the number of employees from each city?, and I want to show from high to low by the x axis.",
            "Count the number of employees for each city with a bar chart, display x axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wasps",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sale",
                        "y_data": 1
                    },
                    {
                        "x_data": "Leicester",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bristol",
                        "y_data": 3
                    },
                    {
                        "x_data": "Bath",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "City",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "accelerator_compatible_browser",
            "browser",
            "web_client_accelerator"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "A pie chart showing the proportion of the number of accelerators for each browser."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Firefox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Internet Explorer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Opera",
                        "y_data": 2
                    },
                    {
                        "x_data": "Safari",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show all template type codes and the number of documents using each type with a bar chart.",
            "Show all template type codes and the number of documents using each type. Visualize by bar chart.",
            "what are the different template type codes, and how many documents use each type?",
            "A bar chart about what are the different template type codes, and how many documents use each type?",
            "What are the different template type codes, and how many documents use each type. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PP",
                        "y_data": 4
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Has_allergy"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What are the last names and ages of the students who are allergic to milk and cat? Plot them as bar chart, and could you rank Y in desc order please?",
            "Find the last name and age of the student who has allergy to both milk and cat Show a bar chart, and sort total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apap",
                        "y_data": 18
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 17
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday.",
            "Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday by a bar chart.",
            "Return a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday.",
            "Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday.",
            "Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday.",
            "Show sum employee id from each start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 12
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Bar chart of the total number from each origin, could you sort total number in desc order?",
            "For each origin, how many flights came from there Show bar chart, I want to show from high to low by the the total number .",
            "Show all origins and the number of flights from each origin Show bar chart, display in desc by the y axis please.",
            "Show all origins and the number of flights from each origin by a bar chart, display by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Los Angeles",
                        "y_data": 8
                    },
                    {
                        "x_data": "Chicago",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates that have an average sea level pressure between 303 and 31?, I want to rank y-axis in asc order please.",
            "What are the number of the dates in which the mean sea level pressure was between 303 and 31?, and could you show total number in ascending order?",
            "A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, sort in asc by the how many date please.",
            "What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a bar chart, could you rank by the Y in asc please?",
            "A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, and sort in asc by the how many date please.",
            "What are the dates that have an average sea level pressure between 303 and 31, and count them by a bar chart, and rank by the y-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015",
                        "y_data": 22
                    },
                    {
                        "x_data": "2013",
                        "y_data": 27
                    },
                    {
                        "x_data": "2014",
                        "y_data": 38
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, list by the X-axis in ascending please.",
            "For those employees who did not have any job in the past, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, rank by the JOB_ID in asc.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, show JOB_ID from low to high order.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id, and sort in asc by the JOB_ID.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and I want to display x axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4759
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 488
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?, display by the y-axis in descending.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?, and show by the y-axis in desc.",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and display by the y-axis in descending.",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and display in desc by the Y.",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart, and could you sort in descending by the y-axis please?",
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20, display Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mar",
                        "y_data": 5
                    },
                    {
                        "x_data": "Feb",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_became_customer",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_became_customer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show the relationship between service type code and number of services and group by service type description with a group scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 2,
                        "classify": "provide adv promoting service"
                    },
                    {
                        "x_data": 2,
                        "y_data": 5,
                        "classify": "provide dinning service"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "provide filming service"
                    },
                    {
                        "x_data": 1,
                        "y_data": 5,
                        "classify": "provide photo service"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Service_Type_Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and sort in desc by the JOB_ID.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, list by the bars from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, I want to rank in desc by the names.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the amount of job_id , and group by attribute job_id, and visualize them by a bar chart, and order in desc by the names.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, and I want to rank in desc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "policies"
        ],
        "db_id": "insurance_and_eClaims",
        "nl_queries": [
            "Find the number of records of each policy type and its type code. Visualize by bar chart.",
            "For each policy type, return its type code and its count in the record. Visualize by bar chart.",
            "Bar chart x axis policy type code y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Deputy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Jurisdiction",
                        "y_data": 3
                    },
                    {
                        "x_data": "Normal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Uniformed",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Policy_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Bar chart of total number of credits from each dept name, and show from high to low by the total number of credits.",
            "Draw a bar chart for how many total credits are offered by each department?, and rank y-axis in descending order.",
            "Find the total credits of courses provided by different department Plot them as bar chart, and list from high to low by the y-axis.",
            "Show me a bar chart for how many total credits are offered by each department?, order from high to low by the Y-axis.",
            "How many total credits are offered by each department Show bar chart, and order by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cybernetics",
                        "y_data": 67
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 49
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 44
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 40
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 40
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 38
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 37
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 37
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 37
                    },
                    {
                        "x_data": "Math",
                        "y_data": 34
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 34
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 33
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 30
                    },
                    {
                        "x_data": "History",
                        "y_data": 29
                    },
                    {
                        "x_data": "English",
                        "y_data": 28
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 28
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 23
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 23
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 21
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the average of account details for different statement details in a bar chart, and display the average of account details in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private Project",
                        "y_data": 3555.8333333333335
                    },
                    {
                        "x_data": "Open Project",
                        "y_data": 2257.3333333333335
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Account_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle",
            "ship",
            "death"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "Show me the proportion on what are the ids and names of the battles that led to more than 10 people killed in total.",
            "Pie chart. what are the ids and names of the battles that led to more than 10 people killed in total.",
            "What are the ids and names of the battles that led to more than 10 people killed in total."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle of Messinopolis",
                        "y_data": 5
                    },
                    {
                        "x_data": "Battle of Boruy",
                        "y_data": 6
                    },
                    {
                        "x_data": "Siege of Constantinople",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "gymnast",
            "people"
        ],
        "db_id": "gymnast",
        "nl_queries": [
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts.",
            "Return a bar chart on how many gymnasts are from each hometown?",
            "Show me a bar chart for how many gymnasts are from each hometown?",
            "How many gymnasts are from each hometown. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bonao",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Alcarrizos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santiago de los Caballeros",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santo Domingo",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each year? Return a bar chart that bins arrived date by year interval, sort in asc by the Y.",
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by year interval, and could you sort by the total number in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    }
]