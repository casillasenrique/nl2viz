[
    {
        "tables_used": [
            "building",
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and could you show bars in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tampa City Hall",
                        "y_data": 2
                    },
                    {
                        "x_data": "Park Tower",
                        "y_data": 1
                    },
                    {
                        "x_data": "One Tampa City Center",
                        "y_data": 2
                    },
                    {
                        "x_data": "Franklin Exchange Building",
                        "y_data": 2
                    },
                    {
                        "x_data": "Floridan Hotel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Citizens Bank Building",
                        "y_data": 2
                    },
                    {
                        "x_data": "100 North Tampa",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and department_id in a bar chart, and could you show by the names from high to low?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and department_id , and rank by the bar in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and department_id , sort by the bar in descending please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and department_id , and rank by the bar in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and department_id , and visualize them by a bar chart, and sort by the bar in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 110
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 0
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Return a bar chart on what are the ids and details of events that have more than one participants?",
            "Draw a bar chart for what are the ids and details of events that have more than one participants?",
            "What are the ids and details of events that have more than one participants. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 23.333333333333332
                    },
                    {
                        "x_data": "Success",
                        "y_data": 41.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Event_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name , display in asc by the X-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and commission_pct , and I want to show names from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and commission_pct , could you order by the X-axis from low to high?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name by a bar chart, and could you order in ascending by the X?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and commission_pct , and visualize them by a bar chart, rank by the X in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baer",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 0
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 0
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 0
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart, and could you show from low to high by the sum salary please?",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, sort by the sum salary in ascending please.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, rank sum salary in ascending order.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, I want to sort in asc by the Y-axis.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday, and rank sum salary in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 73400
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 83300
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 84400
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 85700
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 86100
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 86200
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 113400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality.",
            "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality.",
            "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality.",
            "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality.",
            "Bar chart x axis nationality y axis how many nationality"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Parts",
            "Asset_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many assets can each parts be used in? List the part name and the number, and order y-axis in asc order.",
            "Visualize a bar chart for how many assets can each parts be used in? List the part name and the number, and display by the Y in ascending.",
            "How many assets can each parts be used in? List the part name and the number with a bar chart, and show by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "top",
                        "y_data": 4
                    },
                    {
                        "x_data": "middle",
                        "y_data": 5
                    },
                    {
                        "x_data": "package",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "part_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a pie chart about the proportion of ACC_Regular_Season and ACC_Percent.",
            "For the attribute ACC_Regular_Season and ACC_Percent, show their proportion by a pie chart.",
            "A pie chart shows the proportion of ACC_Regular_Season and ACC_Percent.",
            "Return a pie chart about the proportion of ACC_Regular_Season and ACC_Percent.",
            "Draw a pie chart about the proportion of ACC_Regular_Season and ACC_Percent.",
            "Create a pie chart showing acc_percent across acc regular season."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students Plot them as bar chart, I want to rank by the bar in desc.",
            "Give me a histogram for what is the first name and GPA of every student that has a GPA lower than average?, and could you order in desc by the bars?",
            "Draw a bar chart for what is the first name and GPA of every student that has a GPA lower than average?, and display from high to low by the names.",
            "What is the first name and GPA of every student that has a GPA lower than average Show bar chart, show x axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 2
                    },
                    {
                        "x_data": "Juliette",
                        "y_data": 2
                    },
                    {
                        "x_data": "John",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(STU_GPA)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Find the number of the parties associated with the delegates from district 1 Who served as governors of the parties?, could you sort from high to low by the Governor?",
            "Who were the governors of the parties associated with delegates from district 1, and count them by a bar chart, and order bar from high to low order.",
            "A bar chart for finding the number of the parties associated with the delegates from district 1 Who served as governors of the parties?, order bars from high to low order.",
            "Find the parties associated with the delegates from district 1 Who served as governors of the parties, and count them by a bar chart, rank by the x axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tom Golisano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter Vallone",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Governor",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Governor)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 14
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 15
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 16
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 16
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of courses each teacher teaches in a pie chart.",
            "What is the number of courses each teacher teaches? Return a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road.",
            "Return a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road.",
            "Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road.",
            "Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road.",
            "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart.",
            "Give me a bar chart for total number of team id of each acc road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 7
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents",
            "Catalog_Contents_Additional_Attributes"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "A bar chart for finding the number of the names of catalog entries with level number 8, display Y-axis in ascending order.",
            "What are the number of the names of catalog entries with level number 8?, sort by the Y in ascending.",
            "Find the names of catalog entries with level number 8, and count them by a bar chart, list by the y-axis in ascending.",
            "Find the number of the names of catalog entries with level number 8, display Y-axis in ascending order.",
            "What are the names of catalog entries with level number 8, and count them by a bar chart, and rank Y in asc order.",
            "A bar chart for what are the number of the names of catalog entries with level number 8?, and list in asc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carbonated Water",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ginger Beer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Root beer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cola",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(catalog_entry_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Policies"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy, and order in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mrs. Hanna Willms",
                        "y_data": 3
                    },
                    {
                        "x_data": "Lauriane Ferry PhD",
                        "y_data": 6
                    },
                    {
                        "x_data": "Ellsworth Paucek",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dr. Diana Rath",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Customer_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Customer_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, order by the names from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart, and list by the X in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and sort bar in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, could you show in desc by the x axis please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, and could you show in desc by the x axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "countries"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "You can give me a pie chart, that groups and counts the country name.",
            "Please show me how many employees working on different countries using a pie chart.",
            "Tell me the proportion of the number of employees working on different countries with a pie chart.",
            "Create a pie chart showing how many country name across country name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 2
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States of America",
                        "y_data": 68
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(COUNTRY_NAME)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "COUNTRY_NAME"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Facilities",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the facility codes of apartments with more than 4 bedrooms, and count them by a bar chart, display by the Y-axis from high to low.",
            "What are the facility codes of the apartments with more than four bedrooms, and count them by a bar chart, I want to list by the y-axis from high to low.",
            "Show the number of the facility codes of apartments with more than 4 bedrooms, and display by the Y-axis from high to low.",
            "What are the number of the facility codes of the apartments with more than four bedrooms?, and list by the y axis from high to low.",
            "A bar chart for what are the number of the facility codes of the apartments with more than four bedrooms?, and list Y in descending order.",
            "A bar chart for showing the number of the facility codes of apartments with more than 4 bedrooms, I want to list by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gym",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cable TV",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "facility_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(facility_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What are the names of products with price at most 200, and count them by a bar chart, display by the Name in ascending.",
            "What are the number of the names of products with price at most 200?, and order by the X-axis in asc.",
            "Select the name of the products with a price less than or equal to $200, and count them by a bar chart, I want to list in asc by the bars.",
            "A bar chart for what are the number of the names of products with price at most 200?, and rank by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the number of cards in different card type code in a bar chart, rank Y-axis in asc order.",
            "Show me the number of card type code by card type code in a histogram, display from low to high by the y axis.",
            "How many cards in different card type code? Plot a bar chart, sort total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(card_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Neutral.",
            "Return a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Neutral.",
            "Visualize a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Neutral.",
            "Visualize the relationship between Team_ID and ACC_Percent , and group by attribute All_Neutral.",
            "What is the relationship between Team_ID and ACC_Percent , and group by attribute All_Neutral?",
            "Scatterplot of acc_percent vs team id by All_Neutral"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.563,
                        "classify": "3\u20133"
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.625,
                        "classify": "4\u20133"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "5\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "9\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart.",
            "Draw a pie chart about the proportion of All_Games and All_Games_Percent.",
            "A pie chart shows the proportion of All_Games and All_Games_Percent.",
            "Return a pie chart about the proportion of All_Games and All_Games_Percent.",
            "Visualize a pie chart about the proportion of All_Games and All_Games_Percent.",
            "Create a pie chart showing all_games_percent across all games."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and order Y in desc order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart, I want to sort by the total number in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart, rank by the y-axis in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, order Y in desc order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, order in desc by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 2090
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1942
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1870
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1833
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1827
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1818
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1744
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each instructor in a bar chart, and I want to order in desc by the y axis.",
            "How many courses for each teacher? Show me a bar chart, and show y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Payments"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "List all payment methods and number of payments using each payment methods with a pie chart.",
            "List all payment methods and number of payments using each payment methods. Show a pie chart.",
            "For each payment method, how many payments were made. Visualize by pie chart.",
            "Give me a pie to show the total number from different payment method code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit Card",
                        "y_data": 5
                    },
                    {
                        "x_data": "Direct Debit",
                        "y_data": 10
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each day and bin date from by weekday with a bar chart, display by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Return a bar chart on how many students have each different allergy?, could you sort bars in desc order?",
            "Show all allergies with number of students affected Show bar chart, and could you rank in descending by the names?",
            "Show all allergies with number of students affected with a bar chart, sort bars in desc order.",
            "Show the total number from each allergy, and sort bars in desc order.",
            "How many students have each different allergy Show bar chart, and I want to order X in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 13
                    },
                    {
                        "x_data": "Soy",
                        "y_data": 4
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 4
                    },
                    {
                        "x_data": "Rodent",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 6
                    },
                    {
                        "x_data": "Nuts",
                        "y_data": 11
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 3
                    },
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 4
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Anchovies",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Visualize a bar chart about the distribution of middle_name and author_tutor_ATB .",
            "Give me the comparison about author_tutor_ATB over the middle_name .",
            "Show me about the distribution of middle_name and author_tutor_ATB in a bar chart.",
            "Give me the comparison about author_tutor_ATB over the middle_name by a bar chart.",
            "Return a bar chart about the distribution of middle_name and author_tutor_ATB ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Keira",
                        "y_data": 817
                    },
                    {
                        "x_data": "Ruthie",
                        "y_data": 331
                    },
                    {
                        "x_data": "Alejandra",
                        "y_data": 229
                    },
                    {
                        "x_data": "Ethyl",
                        "y_data": 349
                    },
                    {
                        "x_data": "Joyce",
                        "y_data": 159
                    },
                    {
                        "x_data": "Amani",
                        "y_data": 833
                    },
                    {
                        "x_data": "Mathew",
                        "y_data": 505
                    },
                    {
                        "x_data": "Aniyah",
                        "y_data": 782
                    },
                    {
                        "x_data": "Kennith",
                        "y_data": 557
                    },
                    {
                        "x_data": "Ethelyn",
                        "y_data": 869
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 613
                    },
                    {
                        "x_data": "Corene",
                        "y_data": 975
                    },
                    {
                        "x_data": "Fritz",
                        "y_data": 974
                    },
                    {
                        "x_data": "Jayce",
                        "y_data": 847
                    },
                    {
                        "x_data": "Zena",
                        "y_data": 388
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "middle_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_tutor_ATB"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names of high school students and their corresponding number of friends Plot them as bar chart, order by the bar in ascending.",
            "What are the names of the high schoolers and how many friends does each have Show bar chart, sort by the bar in asc.",
            "A bar chart about what are the names of the high schoolers and how many friends does each have?, and I want to display X-axis from low to high order.",
            "Display a bar chart for what are the names of the high schoolers and how many friends does each have?, order by the bar in ascending.",
            "Show the names of high school students and their corresponding number of friends in a bar chart, and order X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Compare the number of the names of phones by a bar chart, and display by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_contact_channels"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by weekday in a stacked bar chart.",
            "How many customers using email as the contact channel? Group by customer name and bin active date by weekday in a stacked bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "active_from_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(active_from_date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For employees with first names that end with the letter m, give me a pie chart to show their total salary.",
            "For those employees whose first name is ending with the letter m, sum their salary for visualizing a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 7900
                    },
                    {
                        "x_data": "William",
                        "y_data": 15700
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the correlation between code and price in a scatter chart.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and price .",
            "For those records from the products and each product's manufacturer, what is the relationship between code and price ?",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and price .",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and price ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 240
                    },
                    {
                        "x_data": 2,
                        "y_data": 120
                    },
                    {
                        "x_data": 3,
                        "y_data": 150
                    },
                    {
                        "x_data": 4,
                        "y_data": 5
                    },
                    {
                        "x_data": 5,
                        "y_data": 240
                    },
                    {
                        "x_data": 6,
                        "y_data": 180
                    },
                    {
                        "x_data": 7,
                        "y_data": 90
                    },
                    {
                        "x_data": 8,
                        "y_data": 270
                    },
                    {
                        "x_data": 9,
                        "y_data": 66
                    },
                    {
                        "x_data": 10,
                        "y_data": 180
                    },
                    {
                        "x_data": 11,
                        "y_data": 150
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Show the number of singers in each country with a pie chart.",
            "What is the number of singers for each country? Return a pie chart.",
            "Compute the total how many country across country as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 4
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart, sort in descending by the Y.",
            "Give me the comparison about the sum of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, I want to sort total number in descending order.",
            "Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, rank by the total number from high to low please.",
            "Draw a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, and I want to show total number in desc order.",
            "Return a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, and could you order from high to low by the Y?",
            "Stack bar chart of sum employee id vs Is_full_time based on start from, sort in descending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 12,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Please show me a bar chart for visualizing the name and revenue of all manufacturers sorted by their revenue in the descending order.",
            "What are the names, and revenues for manufacturers, sorted by revenue descending in a bar graph?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the names of people and the number of times they have been on the affirmative side of debates by a bar chart.",
            "Show the names of people and the number of times they have been on the affirmative side of debates."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students in each department that has the top 3 highest number of students with a bar chart.",
            "Which departments have the top 3 highest number of students? Show the department name and number of students with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 3
                    },
                    {
                        "x_data": "Computer Info. Systems",
                        "y_data": 2
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, and display by the total number from high to low please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, could you show by the Code from high to low?",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart, display by the total number from high to low please.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute founder by a bar chart, sort by the y-axis in desc.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart, I want to sort in descending by the Code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_orders"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show the shipping charge and customer id for customer orders with order status Cancelled or Paid by a scatter chart.",
            "Show the shipping charge and customer id for customer orders with order status Cancelled or Paid. Show scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 85.79,
                        "y_data": 2
                    },
                    {
                        "x_data": 98.4,
                        "y_data": 8
                    },
                    {
                        "x_data": 36.87,
                        "y_data": 9
                    },
                    {
                        "x_data": 35.63,
                        "y_data": 7
                    },
                    {
                        "x_data": 99.26,
                        "y_data": 2
                    },
                    {
                        "x_data": 26.56,
                        "y_data": 15
                    },
                    {
                        "x_data": 57.36,
                        "y_data": 1
                    },
                    {
                        "x_data": 33.58,
                        "y_data": 14
                    },
                    {
                        "x_data": 22.84,
                        "y_data": 1
                    },
                    {
                        "x_data": 21.24,
                        "y_data": 12
                    },
                    {
                        "x_data": 31.33,
                        "y_data": 12
                    },
                    {
                        "x_data": 46.4,
                        "y_data": 14
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "order_shipping_charges"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "camera_lens"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Count the brand of each camera lens with a pie chart.",
            "Compute the total how many brand across brand as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Olympus",
                        "y_data": 3
                    },
                    {
                        "x_data": "Panasonic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Schneider Kreuznach",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigma",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(brand)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "brand"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "What is the maximum price of wines in each year?",
            "Show me the trend about the maximum price of wines for each year.",
            "Given a line chart about the maximum price of wines for each year.",
            "Visualize the general trend of maximal price over the year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2004-01-01",
                        "y_data": 75
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 200
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 225
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 130
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 78
                    },
                    {
                        "x_data": "2066-01-01",
                        "y_data": 32
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Bar chart of sum count(*) from each rank, and rank X-axis in asc order please.",
            "How many faculty members do we have for each rank? Show bar chart, and could you show x axis from low to high order?",
            "Show the number of faculty for each rank in a bar chart, list bar in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, could you sort from high to low by the Y-axis?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the name , and group by attribute name, and could you display total number in desc order please?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of code , and group by attribute name, and could you show in descending by the y axis?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the name , and group by attribute name by a bar chart, and sort Y-axis from high to low order please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, display by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of assets and group by asset make in a bar chart, and list in asc by the Y.",
            "Draw a bar chart of asset make versus the number of asset make, I want to order y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GB",
                        "y_data": 1
                    },
                    {
                        "x_data": "IE",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "CN",
                        "y_data": 2
                    },
                    {
                        "x_data": "DE",
                        "y_data": 2
                    },
                    {
                        "x_data": "FR",
                        "y_data": 2
                    },
                    {
                        "x_data": "IN",
                        "y_data": 2
                    },
                    {
                        "x_data": "RU",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "asset_make",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(asset_make)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and salary , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the last_name by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of last_name and salary in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and salary ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grant",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart, and I want to order by the total number of department id from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, and I want to display by the total number of department id in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the hire_date bin hire_date by time, sort in descending by the y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, could you list by the total number in desc?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of department_id bin hire_date by time, and visualize them by a bar chart, and I want to order by the total number of department id from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 2480
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1470
                    },
                    {
                        "x_data": "July",
                        "y_data": 1430
                    },
                    {
                        "x_data": "June",
                        "y_data": 1170
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Return a bar chart about the distribution of Name and Weight , and list names from low to high order please.",
            "A bar chart shows the distribution of Name and Weight , and sort by the Name from low to high.",
            "Visualize a bar chart about the distribution of Name and Weight , rank from low to high by the x-axis.",
            "Show me about the distribution of Name and Weight in a bar chart, and list in ascending by the x axis.",
            "Draw a bar chart about the distribution of Name and Weight , rank by the X in asc.",
            "Show weight from each name, and display by the X-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dominique Daquin",
                        "y_data": 85
                    },
                    {
                        "x_data": "Frantz Granvorka",
                        "y_data": 90
                    },
                    {
                        "x_data": "Guillaume Samica",
                        "y_data": 82
                    },
                    {
                        "x_data": "Hubert Henno",
                        "y_data": 83
                    },
                    {
                        "x_data": "Laurent Capet",
                        "y_data": 92
                    },
                    {
                        "x_data": "Lo\u00efc De Kergret",
                        "y_data": 89
                    },
                    {
                        "x_data": "Philippe Bar\u00e7a-Cysique",
                        "y_data": 88
                    },
                    {
                        "x_data": "St\u00e9phane Antiga",
                        "y_data": 94
                    },
                    {
                        "x_data": "Vincent Montm\u00e9at",
                        "y_data": 88
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute name, and I want to rank from high to low by the Y.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name, and display by the y-axis in descending please.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart, and I want to rank from high to low by the Y.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute name in a bar chart, display by the y-axis in descending please.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart, I want to show in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each semester with a bar chart.",
            "How many courses are in the Psychology department for each semester? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fall",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spring",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "semester",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(semester)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "Plot the total number by grouped by industry as a bar graph, and sort in ascending by the Industry.",
            ", order by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 8
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 7
                    },
                    {
                        "x_data": "Retailing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Telecommunications",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Industry",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Create a bar chart showing the total number across party, and sort in desc by the y-axis.",
            "Show the party and the number of drivers in each party Plot them as bar chart, and I want to rank y-axis from high to low order please.",
            "Show the party and the number of drivers in each party with a bar chart, and I want to order in desc by the the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dem",
                        "y_data": 10
                    },
                    {
                        "x_data": "Rep",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show the of customer addresses and group by premises type and address type code in a stacked bar chart The x-axis is premises type, and I want to sort in descending by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Warehouse",
                        "y_data": 4,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Office",
                        "y_data": 3,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 1,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 3,
                        "classify": "Shipping"
                    },
                    {
                        "x_data": "Office",
                        "y_data": 2,
                        "classify": "Shipping"
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 2,
                        "classify": "Shipping"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Give me a scatter chart to show the least rating star of the movie and reviewer id, group the title."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 206,
                        "y_data": 3,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": 207,
                        "y_data": 5,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": 205,
                        "y_data": 2,
                        "classify": "E.T."
                    },
                    {
                        "x_data": 208,
                        "y_data": 3,
                        "classify": "E.T."
                    },
                    {
                        "x_data": 201,
                        "y_data": 2,
                        "classify": "Gone with the Wind"
                    },
                    {
                        "x_data": 204,
                        "y_data": 3,
                        "classify": "Gone with the Wind"
                    },
                    {
                        "x_data": 202,
                        "y_data": 4,
                        "classify": "Snow White"
                    },
                    {
                        "x_data": 203,
                        "y_data": 2,
                        "classify": "The Sound of Music"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "rID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Show the total number from each rank, and list the total number from high to low order.",
            "Count the number of captains that have each rank Visualize by bar chart, rank by the the total number in descending.",
            "A bar chart about how many captains are in each rank?, and rank in desc by the the total number please.",
            "Count the number of captains that have each rank by a bar chart, list the total number from high to low order.",
            "How many captains are in each rank, show in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Draw a bar chart for how many total credits are offered by each department?, order by the names from low to high.",
            "Find the total credits of courses provided by different department Plot them as bar chart, could you sort in ascending by the x-axis?",
            "How many total credits are offered by each department Show bar chart, and rank bars in asc order.",
            "Bar chart of total number of credits from each dept name, rank bars in asc order.",
            "Show me a bar chart for how many total credits are offered by each department?, and order by the names from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 40
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 37
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 30
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 23
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 34
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 37
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 67
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 28
                    },
                    {
                        "x_data": "English",
                        "y_data": 28
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 49
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 33
                    },
                    {
                        "x_data": "History",
                        "y_data": 29
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 37
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 20
                    },
                    {
                        "x_data": "Math",
                        "y_data": 34
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 40
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 38
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 23
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 44
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather",
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the id and local authority of the station whose maximum precipitation is higher than 50 Visualize by bar chart, I want to list local_authority from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Watford",
                        "y_data": 2
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 10
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 4
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, rank by the bar in ascending.",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, and show by the names in ascending please.",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, could you order bar from low to high order please?",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and sort x axis from low to high order.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and I want to order by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 146.93103448275863
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart, and rank Y-axis in descending order please.",
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course, sort Y in descending order.",
            "Find the number of the the date of enrollment of the \"Spanish\" course, could you list in descending by the y-axis please?",
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart, rank in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 0
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 0
                    },
                    {
                        "x_data": "Nov",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find Team_Name and Team_ID , and visualize them by a bar chart, list X-axis in descending order.",
            "Show me about the distribution of Team_Name and Team_ID in a bar chart, I want to list in descending by the bar please.",
            "Visualize a bar chart about the distribution of Team_Name and Team_ID , and list X-axis in descending order.",
            "Give me the comparison about Team_ID over the Team_Name by a bar chart, I want to rank by the X in desc.",
            "Show team_id from each team name, show by the x axis in desc.",
            "A bar chart shows the distribution of Team_Name and Team_ID , and sort in descending by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 4
                    },
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show me the average of capacity by openning year in a histogram, order by the y-axis in descending.",
            "A bar chart showing the average of capacity of cinemas open for each year, order by the y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010-01-01",
                        "y_data": 544.3333333333334
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 445.3333333333333
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 368
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 364
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 330
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 305
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and score of the movie with a bar chart, and rank in ascending by the Y-axis.",
            "Draw a bar chart to compare the stars of each movie by title, could you sort Y from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many injured players not suffering from injury of 'Knee problem' in each match? Show me a bar chart grouping by number of matches, and sort y-axis in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1",
                        "y_data": 3
                    },
                    {
                        "x_data": "4 (6)",
                        "y_data": 2
                    },
                    {
                        "x_data": "3",
                        "y_data": 2
                    },
                    {
                        "x_data": "2",
                        "y_data": 2
                    },
                    {
                        "x_data": "4",
                        "y_data": 1
                    },
                    {
                        "x_data": "12",
                        "y_data": 1
                    },
                    {
                        "x_data": "10",
                        "y_data": 1
                    },
                    {
                        "x_data": "1 (2)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Number_of_matches",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Number_of_matches)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Compute the number of each type of job ids for employees who make more than the highest-earning employee with title PU_MAN, with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 3
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show me how many long by long in a histogram, could you rank from low to high by the y axis?",
            "For each station, bin its longitude divided by zero as buckets, and count the frequency in each bucket, and I want to show by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": ">0",
                        "y_data": 0
                    },
                    {
                        "x_data": "<=0",
                        "y_data": 69
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "long",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(long)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, show Y in ascending order.",
            "A bar chart shows the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, and show y axis in ascending order please.",
            "Return a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, and sort in ascending by the y-axis please.",
            "Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and sort in ascending by the the average of employee id.",
            "Draw a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, and sort by the total number in asc please.",
            "Stacked bar chart of mean employee id for with each Is_full_time in each start from, and show y axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Provide the frequency of the last names of employees earning more than the employee with id 163 using a bar chart, list X in asc order please.",
            "For those employees who get more salary than the employee whose id is 163, show the frequency of their last name, rank x-axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bloom",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cambrault",
                        "y_data": 1
                    },
                    {
                        "x_data": "De Haan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Errazuriz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fox",
                        "y_data": 1
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 1
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 1
                    },
                    {
                        "x_data": "King",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kochhar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ozer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Partners",
                        "y_data": 1
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tucker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vishney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zlotkey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LAST_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the job_id , rank by the Y-axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and salary , and visualize them by a bar chart, and sort by the Y-axis in ascending please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and salary in a bar chart, and could you order Y-axis in ascending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and salary , display from low to high by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and salary , and could you order Y-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 7000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "projects",
            "assignedto"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Find the number of scientists involved for the projects that require more than 300 hours. Show bar chart.",
            "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?",
            "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?",
            "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A Silver-Cleaning Battery",
                        "y_data": 2
                    },
                    {
                        "x_data": "Aerodynamics and Ice Hockey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 3
                    },
                    {
                        "x_data": "Juicy: Extracting Apple Juice with Pectinase",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show different citizenship of singers and the number of singers of each citizenship in a bar chart, could you display by the Citizenship in desc please?",
            "For each citizenship, how many singers are from that country, and rank by the x axis in descending.",
            "Show different citizenship of singers and the number of singers of each citizenship Plot them as bar chart, and show by the bar in descending.",
            "Show me the total number by citizenship in a histogram, rank by the x axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 4
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute name by a bar chart, and sort from low to high by the bar please.",
            "For those records from the products and each product's manufacturer, find name and manufacturer , and group by attribute name, and visualize them by a bar chart, and rank names in ascending order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and manufacturer , and group by attribute name, rank by the bar from low to high please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute name, and rank by the x-axis in ascending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute name in a bar chart, sort from low to high by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products",
            "Products_in_Events"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Show the names of products and the number of events they are in by a bar chart.",
            "Show the names of products and the number of events they are in. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Conference Equipments",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 1
                    },
                    {
                        "x_data": "Men suits",
                        "y_data": 2
                    },
                    {
                        "x_data": "Special Dinning",
                        "y_data": 4
                    },
                    {
                        "x_data": "TV Equipments",
                        "y_data": 5
                    },
                    {
                        "x_data": "Trading Policy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trading Policy B",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, list Y-axis from high to low order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time, and sort in descending by the total number.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, and order by the total number in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of manager_id bin hire_date by time, and visualize them by a bar chart, order in descending by the y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, and list Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 4314
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3640
                    },
                    {
                        "x_data": "July",
                        "y_data": 3610
                    },
                    {
                        "x_data": "June",
                        "y_data": 1355
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price, order X from low to high order.",
            "For each bed type, find the average base price of different bed type Show bar chart, rank X in ascending order.",
            "what is the average base price of different bed type? List bed type and average base price, and rank in ascending by the X-axis.",
            "What is the average base price of rooms, for each bed type Plot them as bar chart, and display in asc by the bedType please.",
            "For each bed type, find the average room price Show bar chart, order X from low to high order.",
            "What is the average base price of different bed type? List bed type and average base price Plot them as bar chart, display in asc by the bedType please.",
            "Draw a bar chart for what is the average base price of rooms, for each bed type?, display x axis in asc order.",
            "Show me the average of baseprice by bedtype in a histogram, and could you sort in ascending by the bars?",
            "Return a bar chart on what is the average base price of rooms, for each bed type?, and rank X in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Double",
                        "y_data": 100
                    },
                    {
                        "x_data": "King",
                        "y_data": 181.25
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "Use a stacked bar chart to show how many films for each title and each type. The x-axis is title."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 1,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 0,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 2,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 3,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 1,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 0,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 1,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 1,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 0,
                        "classify": "Mass suicide murder"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Draw a bar chart for what are the different ship flags, and how many ships have each?",
            "Return a bar chart on what are the different ship flags, and how many ships have each?",
            "What are the different ship flags, and how many ships have each. Plot them as bar chart.",
            "Show the total number from each flag"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Panama",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show the capacity for each cinema in a bar chart, and rank by the names from low to high.",
            "Create a bar chart showing capacity across name, and I want to show x axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 368
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 1100
                    },
                    {
                        "x_data": "Dublin Array",
                        "y_data": 364
                    },
                    {
                        "x_data": "Glenmore",
                        "y_data": 305
                    },
                    {
                        "x_data": "Glenough",
                        "y_data": 325
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 208
                    },
                    {
                        "x_data": "Grouse Lodge",
                        "y_data": 203
                    },
                    {
                        "x_data": "Moneypoint",
                        "y_data": 225
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 908
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 330
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Games and ACC_Percent in a bar chart.",
            "Visualize a bar chart about the distribution of All_Games and ACC_Percent .",
            "Find All_Games and ACC_Percent , and visualize them by a bar chart.",
            "A bar chart shows the distribution of All_Games and ACC_Percent .",
            "Return a bar chart about the distribution of All_Games and ACC_Percent .",
            "Bar chart x axis all games y axis acc_percent"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, and visualize them by a bar chart.",
            "Draw a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday.",
            "Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday.",
            "Return a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday.",
            "Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart.",
            "Stacked bar chart of the number of start from for with each Is_full_time in each start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000.",
            "A pie chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000.",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist",
            "news_report"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Return me a bar chart to show the average experience working length of journalists working on different role type, I want to display by the bar in asc.",
            "Visualize the average experience working length of journalists working on different role type using a bar chart, list X from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Host",
                        "y_data": 16.5
                    },
                    {
                        "x_data": "Music",
                        "y_data": 14
                    },
                    {
                        "x_data": "Screening",
                        "y_data": 4.666666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Work_Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Years_working)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and commission_pct , display total number in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and commission_pct , and visualize them by a bar chart, display total number in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and commission_pct , show y-axis in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the email by a bar chart, display total number in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the email , order in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HBAER",
                        "y_data": 0
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 0
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 0
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 0
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 0
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 0
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 0.15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between employee_id and manager_id .",
            "For those employees who was hired before 2002-06-21, return a scatter chart about the correlation between employee_id and manager_id .",
            "For those employees who was hired before 2002-06-21, what is the relationship between employee_id and manager_id ?",
            "For those employees who was hired before 2002-06-21, show me about the correlation between employee_id and manager_id in a scatter chart.",
            "For those employees who was hired before 2002-06-21, visualize the relationship between employee_id and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 0
                    },
                    {
                        "x_data": 101,
                        "y_data": 100
                    },
                    {
                        "x_data": 102,
                        "y_data": 100
                    },
                    {
                        "x_data": 103,
                        "y_data": 102
                    },
                    {
                        "x_data": 104,
                        "y_data": 103
                    },
                    {
                        "x_data": 105,
                        "y_data": 103
                    },
                    {
                        "x_data": 106,
                        "y_data": 103
                    },
                    {
                        "x_data": 107,
                        "y_data": 103
                    },
                    {
                        "x_data": 108,
                        "y_data": 101
                    },
                    {
                        "x_data": 109,
                        "y_data": 108
                    },
                    {
                        "x_data": 110,
                        "y_data": 108
                    },
                    {
                        "x_data": 111,
                        "y_data": 108
                    },
                    {
                        "x_data": 112,
                        "y_data": 108
                    },
                    {
                        "x_data": 113,
                        "y_data": 108
                    },
                    {
                        "x_data": 114,
                        "y_data": 100
                    },
                    {
                        "x_data": 115,
                        "y_data": 114
                    },
                    {
                        "x_data": 116,
                        "y_data": 114
                    },
                    {
                        "x_data": 117,
                        "y_data": 114
                    },
                    {
                        "x_data": 118,
                        "y_data": 114
                    },
                    {
                        "x_data": 119,
                        "y_data": 114
                    },
                    {
                        "x_data": 120,
                        "y_data": 100
                    },
                    {
                        "x_data": 121,
                        "y_data": 100
                    },
                    {
                        "x_data": 122,
                        "y_data": 100
                    },
                    {
                        "x_data": 123,
                        "y_data": 100
                    },
                    {
                        "x_data": 124,
                        "y_data": 100
                    },
                    {
                        "x_data": 125,
                        "y_data": 120
                    },
                    {
                        "x_data": 126,
                        "y_data": 120
                    },
                    {
                        "x_data": 127,
                        "y_data": 120
                    },
                    {
                        "x_data": 128,
                        "y_data": 120
                    },
                    {
                        "x_data": 129,
                        "y_data": 121
                    },
                    {
                        "x_data": 130,
                        "y_data": 121
                    },
                    {
                        "x_data": 131,
                        "y_data": 121
                    },
                    {
                        "x_data": 132,
                        "y_data": 121
                    },
                    {
                        "x_data": 133,
                        "y_data": 122
                    },
                    {
                        "x_data": 134,
                        "y_data": 122
                    },
                    {
                        "x_data": 135,
                        "y_data": 122
                    },
                    {
                        "x_data": 136,
                        "y_data": 122
                    },
                    {
                        "x_data": 137,
                        "y_data": 123
                    },
                    {
                        "x_data": 138,
                        "y_data": 123
                    },
                    {
                        "x_data": 139,
                        "y_data": 123
                    },
                    {
                        "x_data": 140,
                        "y_data": 123
                    },
                    {
                        "x_data": 141,
                        "y_data": 124
                    },
                    {
                        "x_data": 142,
                        "y_data": 124
                    },
                    {
                        "x_data": 143,
                        "y_data": 124
                    },
                    {
                        "x_data": 144,
                        "y_data": 124
                    },
                    {
                        "x_data": 145,
                        "y_data": 100
                    },
                    {
                        "x_data": 146,
                        "y_data": 100
                    },
                    {
                        "x_data": 147,
                        "y_data": 100
                    },
                    {
                        "x_data": 148,
                        "y_data": 100
                    },
                    {
                        "x_data": 149,
                        "y_data": 100
                    },
                    {
                        "x_data": 150,
                        "y_data": 145
                    },
                    {
                        "x_data": 151,
                        "y_data": 145
                    },
                    {
                        "x_data": 152,
                        "y_data": 145
                    },
                    {
                        "x_data": 153,
                        "y_data": 145
                    },
                    {
                        "x_data": 154,
                        "y_data": 145
                    },
                    {
                        "x_data": 155,
                        "y_data": 145
                    },
                    {
                        "x_data": 156,
                        "y_data": 146
                    },
                    {
                        "x_data": 157,
                        "y_data": 146
                    },
                    {
                        "x_data": 158,
                        "y_data": 146
                    },
                    {
                        "x_data": 159,
                        "y_data": 146
                    },
                    {
                        "x_data": 160,
                        "y_data": 146
                    },
                    {
                        "x_data": 161,
                        "y_data": 146
                    },
                    {
                        "x_data": 162,
                        "y_data": 147
                    },
                    {
                        "x_data": 163,
                        "y_data": 147
                    },
                    {
                        "x_data": 164,
                        "y_data": 147
                    },
                    {
                        "x_data": 165,
                        "y_data": 147
                    },
                    {
                        "x_data": 166,
                        "y_data": 147
                    },
                    {
                        "x_data": 167,
                        "y_data": 147
                    },
                    {
                        "x_data": 168,
                        "y_data": 148
                    },
                    {
                        "x_data": 169,
                        "y_data": 148
                    },
                    {
                        "x_data": 170,
                        "y_data": 148
                    },
                    {
                        "x_data": 171,
                        "y_data": 148
                    },
                    {
                        "x_data": 172,
                        "y_data": 148
                    },
                    {
                        "x_data": 173,
                        "y_data": 148
                    },
                    {
                        "x_data": 174,
                        "y_data": 149
                    },
                    {
                        "x_data": 175,
                        "y_data": 149
                    },
                    {
                        "x_data": 176,
                        "y_data": 149
                    },
                    {
                        "x_data": 177,
                        "y_data": 149
                    },
                    {
                        "x_data": 178,
                        "y_data": 149
                    },
                    {
                        "x_data": 179,
                        "y_data": 149
                    },
                    {
                        "x_data": 180,
                        "y_data": 120
                    },
                    {
                        "x_data": 181,
                        "y_data": 120
                    },
                    {
                        "x_data": 182,
                        "y_data": 120
                    },
                    {
                        "x_data": 183,
                        "y_data": 120
                    },
                    {
                        "x_data": 184,
                        "y_data": 121
                    },
                    {
                        "x_data": 185,
                        "y_data": 121
                    },
                    {
                        "x_data": 186,
                        "y_data": 121
                    },
                    {
                        "x_data": 187,
                        "y_data": 121
                    },
                    {
                        "x_data": 188,
                        "y_data": 122
                    },
                    {
                        "x_data": 189,
                        "y_data": 122
                    },
                    {
                        "x_data": 190,
                        "y_data": 122
                    },
                    {
                        "x_data": 191,
                        "y_data": 122
                    },
                    {
                        "x_data": 192,
                        "y_data": 123
                    },
                    {
                        "x_data": 193,
                        "y_data": 123
                    },
                    {
                        "x_data": 194,
                        "y_data": 123
                    },
                    {
                        "x_data": 195,
                        "y_data": 123
                    },
                    {
                        "x_data": 196,
                        "y_data": 124
                    },
                    {
                        "x_data": 197,
                        "y_data": 124
                    },
                    {
                        "x_data": 198,
                        "y_data": 124
                    },
                    {
                        "x_data": 199,
                        "y_data": 124
                    },
                    {
                        "x_data": 200,
                        "y_data": 101
                    },
                    {
                        "x_data": 201,
                        "y_data": 100
                    },
                    {
                        "x_data": 202,
                        "y_data": 201
                    },
                    {
                        "x_data": 203,
                        "y_data": 101
                    },
                    {
                        "x_data": 204,
                        "y_data": 101
                    },
                    {
                        "x_data": 205,
                        "y_data": 101
                    },
                    {
                        "x_data": 206,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition",
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "how many exhibitions has each artist had?, I want to order by the bar in ascending.",
            "Show all artist names and the number of exhibitions for each artist Show bar chart, display by the bar from low to high.",
            "Show all artist names and the number of exhibitions for each artist in a bar chart, and show in asc by the bars.",
            "How many exhibitions has each artist had Plot them as bar chart, and I want to order by the bar in ascending.",
            "Return a histogram on how many exhibitions has each artist had?, and display by the bar from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customers_policies"
        ],
        "db_id": "insurance_fnol",
        "nl_queries": [
            "Retrieve the open dates of all the policies associated with the customer whose name contains \"Diana\", bin the open dates into the day of week interval and count them for a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Opened",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "channel"
        ],
        "db_id": "program_share",
        "nl_queries": [
            "Show me a bar chart for what is the total rating of channel for each channel owner?, sort in descending by the bars.",
            "What is the total rating of channel for each channel owner Plot them as bar chart, and sort bar from high to low order.",
            "Find the total rating ratio for each channel owner Visualize by bar chart, sort in descending by the bars.",
            "A bar chart about what is the total rating of channel for each channel owner?, and rank X from high to low order.",
            "Draw a bar chart of owner versus total number of rating in percent, rank X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Shandong Television",
                        "y_data": 0.19
                    },
                    {
                        "x_data": "HBS",
                        "y_data": 0.53
                    },
                    {
                        "x_data": "CCTV",
                        "y_data": 2.43
                    },
                    {
                        "x_data": "Anhui Television",
                        "y_data": 0.2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Owner",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Rating_in_percent)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Bar graph to show the total number from different address, and rank x axis from high to low order.",
            "Find the number of members living in each address Show bar chart, list in desc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Waterbury",
                        "y_data": 4
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cheshire",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bridgeport",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What is the highest price of product, grouped by product type? Show a bar chart.",
            "Give the maximum product price for each product type in a bar chart.",
            "Bar chart of maximal product price from each product type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 971.44
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the director and their lowest rating among all movies in a bar chart.",
            "Compare the lowest rating among all movies by each director using a bar chart.",
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Draw a bar chart for what are the different ship flags, and how many ships have each?, show names in ascending order please.",
            "Return a bar chart on what are the different ship flags, and how many ships have each?, order in asc by the bar.",
            "Show the total number from each flag, could you display bar from low to high order?",
            "What are the different ship flags, and how many ships have each Plot them as bar chart, and could you display bar from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Panama",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, group states and count them in a bar chart.",
            "Bar chart of the number of state from each state"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 1
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "NY",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "For each origin, how many flights came from there Show bar chart, I want to sort from low to high by the y axis.",
            "Show all origins and the number of flights from each origin by a bar chart, could you list in ascending by the Y?",
            "Show all origins and the number of flights from each origin Show bar chart, and display Y in asc order.",
            "Bar chart of the total number from each origin, I want to sort from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chicago",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return the apartment number and the number of rooms for each apartment by a bar chart.",
            "Return the apartment number and the number of rooms for each apartment.",
            "Return a bar chart on what are the apartment number and the room count of each apartment?",
            "Show me a bar chart for what are the apartment number and the room count of each apartment?",
            "What are the apartment number and the room count of each apartment. Visualize by bar chart.",
            "Give me a bar chart for room_count of each apt number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Suite 645",
                        "y_data": 7
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 5
                    },
                    {
                        "x_data": "Apt. 908",
                        "y_data": 7
                    },
                    {
                        "x_data": "Suite 749",
                        "y_data": 8
                    },
                    {
                        "x_data": "Suite 307",
                        "y_data": 9
                    },
                    {
                        "x_data": "Apt. 187",
                        "y_data": 9
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 6
                    },
                    {
                        "x_data": "Suite 693",
                        "y_data": 9
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 8
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 6
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 477",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 411",
                        "y_data": 9
                    },
                    {
                        "x_data": "Apt. 837",
                        "y_data": 8
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "room_count"
                }
            }
        }
    },
    {
        "tables_used": [
            "mailshot_customers"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show me the total number by outcome code in a histogram, sort by the X in ascending.",
            "Show the outcome code of mailshots along with the number of mailshots in each outcome code in a bar chart, could you show in asc by the X-axis?",
            "Show the outcome code of mailshots along with the number of mailshots in each outcome code Plot them as bar chart, display bar in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "No Response",
                        "y_data": 5
                    },
                    {
                        "x_data": "Order",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "outcome_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_category",
            "category"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "What are the names of the different categories, and how many films are in each? Show me the bar graph, and sort names from high to low order.",
            "How many films are there in each category? List the genre name and the count with a bar chart, and rank in descending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Travel",
                        "y_data": 57
                    },
                    {
                        "x_data": "Sports",
                        "y_data": 74
                    },
                    {
                        "x_data": "Sci-Fi",
                        "y_data": 61
                    },
                    {
                        "x_data": "New",
                        "y_data": 63
                    },
                    {
                        "x_data": "Music",
                        "y_data": 51
                    },
                    {
                        "x_data": "Horror",
                        "y_data": 56
                    },
                    {
                        "x_data": "Games",
                        "y_data": 61
                    },
                    {
                        "x_data": "Foreign",
                        "y_data": 73
                    },
                    {
                        "x_data": "Family",
                        "y_data": 69
                    },
                    {
                        "x_data": "Drama",
                        "y_data": 62
                    },
                    {
                        "x_data": "Documentary",
                        "y_data": 68
                    },
                    {
                        "x_data": "Comedy",
                        "y_data": 58
                    },
                    {
                        "x_data": "Classics",
                        "y_data": 57
                    },
                    {
                        "x_data": "Children",
                        "y_data": 60
                    },
                    {
                        "x_data": "Animation",
                        "y_data": 66
                    },
                    {
                        "x_data": "Action",
                        "y_data": 64
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many engineers does each staff contact? Show a bar chart, rank in ascending by the staff_name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Berneice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Christophe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cyrus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Edmond",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kadin",
                        "y_data": 4
                    },
                    {
                        "x_data": "Oren",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rodger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "staff_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(staff_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show maximal lat from each city, I want to show x-axis from high to low order.",
            "For each city, return the highest latitude among its stations Show bar chart, I want to sort city in desc order please.",
            "For each city, what is the highest latitude for its stations Visualize by bar chart, show in descending by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "San Jose",
                        "y_data": 37.352601
                    },
                    {
                        "x_data": "San Francisco",
                        "y_data": 37.80477
                    },
                    {
                        "x_data": "Redwood City",
                        "y_data": 37.491269
                    },
                    {
                        "x_data": "Palo Alto",
                        "y_data": 37.448598
                    },
                    {
                        "x_data": "Mountain View",
                        "y_data": 37.40694000000001
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(lat)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show the different nationalities and the number of journalists of each nationality in a bar chart, and could you display from high to low by the Y?",
            "Show the different nationalities and the number of journalists of each nationality Visualize by bar chart, order y axis in descending order.",
            "Plot the total number by grouped by nationality as a bar graph, and sort Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 9
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 1
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter in a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the headquarter , and group by attribute headquarter by a bar chart.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 6
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 12
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and department_id in a bar chart, and list X from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and department_id , I want to order bars from low to high order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and department_id , and I want to order X in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and department_id , and visualize them by a bar chart, list X from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and department_id , show by the FIRST_NAME from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 0
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "William",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Compare the lowest rating among all movies by each title using a histogram, list from low to high by the title.",
            "Show the title and the lowest rating among all movies in a bar chart, list in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by office name, and sort in asc by the y-axis.",
            "How many courses for each course description? Show me a stacked bar chart The x-axis is course description and group by office name, order from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "KLR 300"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many engineers does each staff contact? Show a bar chart, and could you show in desc by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kadin",
                        "y_data": 4
                    },
                    {
                        "x_data": "Edmond",
                        "y_data": 3
                    },
                    {
                        "x_data": "Bernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Berneice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rodger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oren",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cyrus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Christophe",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "staff_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(staff_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Visualize a bar chart for simply show the department of the employee and the corresponding salary, show y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Executive",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 10000
                    },
                    {
                        "x_data": "IT",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 4400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bar chart x axis first name y axis salary, and could you sort names from low to high order?",
            "You can return a bar chart with employees' first names and their salaries, and I want to order in asc by the X.",
            "Just show employees' salaries by their first name in a bar chart, and list from low to high by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Den",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 4400
                    },
                    {
                        "x_data": "John",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "For those wines with a price is bigger than 100, count then and group by year, order by year. Visualize the result with a bar chart.",
            "A bar chart showing the number of those wines with a price is bigger than 100 and order by year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2006",
                        "y_data": 6
                    },
                    {
                        "x_data": "2007",
                        "y_data": 13
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft",
            "MATCH"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "Please list the proportion number of each winning aircraft.",
            "Frequency of the aircrafts that has win an award, across by its name as a pie chart",
            "List the names of aircrafts and the number of times it won matches with a pie chart.",
            "Show the names of aircrafts and the number of times it won matches. Visualize by pie chart.",
            "For each aircraft that has won an award, what is its name and how many time has it won. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robinson R-22",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bell 206B3 JetRanger",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-47D Chinook",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mil Mi-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "CH-53E Super Stallion",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Aircraft"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's first name, sort by the the total number in ascending.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name, and sort by the y-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abbey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jensen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joesph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vesta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 4
                    },
                    {
                        "x_data": "Meaghan",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a scatter chart about the correlation between salary and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a scatter chart about the correlation between salary and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a scatter chart about the correlation between salary and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize the relationship between salary and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the correlation between salary and department_id in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 90
                    },
                    {
                        "x_data": 17000,
                        "y_data": 90
                    },
                    {
                        "x_data": 17000,
                        "y_data": 90
                    },
                    {
                        "x_data": 9000,
                        "y_data": 60
                    },
                    {
                        "x_data": 6000,
                        "y_data": 60
                    },
                    {
                        "x_data": 4800,
                        "y_data": 60
                    },
                    {
                        "x_data": 4800,
                        "y_data": 60
                    },
                    {
                        "x_data": 4200,
                        "y_data": 60
                    },
                    {
                        "x_data": 12000,
                        "y_data": 100
                    },
                    {
                        "x_data": 9000,
                        "y_data": 100
                    },
                    {
                        "x_data": 8200,
                        "y_data": 100
                    },
                    {
                        "x_data": 7700,
                        "y_data": 100
                    },
                    {
                        "x_data": 7800,
                        "y_data": 100
                    },
                    {
                        "x_data": 6900,
                        "y_data": 100
                    },
                    {
                        "x_data": 11000,
                        "y_data": 30
                    },
                    {
                        "x_data": 3100,
                        "y_data": 30
                    },
                    {
                        "x_data": 2900,
                        "y_data": 30
                    },
                    {
                        "x_data": 2800,
                        "y_data": 30
                    },
                    {
                        "x_data": 2600,
                        "y_data": 30
                    },
                    {
                        "x_data": 2500,
                        "y_data": 30
                    },
                    {
                        "x_data": 8000,
                        "y_data": 50
                    },
                    {
                        "x_data": 8200,
                        "y_data": 50
                    },
                    {
                        "x_data": 7900,
                        "y_data": 50
                    },
                    {
                        "x_data": 6500,
                        "y_data": 50
                    },
                    {
                        "x_data": 5800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2700,
                        "y_data": 50
                    },
                    {
                        "x_data": 2400,
                        "y_data": 50
                    },
                    {
                        "x_data": 2200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3300,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3300,
                        "y_data": 50
                    },
                    {
                        "x_data": 2900,
                        "y_data": 50
                    },
                    {
                        "x_data": 2400,
                        "y_data": 50
                    },
                    {
                        "x_data": 2200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3600,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2700,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 3500,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 14000,
                        "y_data": 80
                    },
                    {
                        "x_data": 13500,
                        "y_data": 80
                    },
                    {
                        "x_data": 12000,
                        "y_data": 80
                    },
                    {
                        "x_data": 11000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10500,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8000,
                        "y_data": 80
                    },
                    {
                        "x_data": 7500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8000,
                        "y_data": 80
                    },
                    {
                        "x_data": 7500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7200,
                        "y_data": 80
                    },
                    {
                        "x_data": 6800,
                        "y_data": 80
                    },
                    {
                        "x_data": 6400,
                        "y_data": 80
                    },
                    {
                        "x_data": 6200,
                        "y_data": 80
                    },
                    {
                        "x_data": 11500,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9600,
                        "y_data": 80
                    },
                    {
                        "x_data": 7400,
                        "y_data": 80
                    },
                    {
                        "x_data": 7300,
                        "y_data": 80
                    },
                    {
                        "x_data": 6100,
                        "y_data": 80
                    },
                    {
                        "x_data": 11000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8800,
                        "y_data": 80
                    },
                    {
                        "x_data": 8600,
                        "y_data": 80
                    },
                    {
                        "x_data": 8400,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 0
                    },
                    {
                        "x_data": 6200,
                        "y_data": 80
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 4200,
                        "y_data": 50
                    },
                    {
                        "x_data": 4100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3400,
                        "y_data": 50
                    },
                    {
                        "x_data": 3000,
                        "y_data": 50
                    },
                    {
                        "x_data": 3800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2900,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 4000,
                        "y_data": 50
                    },
                    {
                        "x_data": 3900,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3000,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 4400,
                        "y_data": 10
                    },
                    {
                        "x_data": 13000,
                        "y_data": 20
                    },
                    {
                        "x_data": 6000,
                        "y_data": 20
                    },
                    {
                        "x_data": 10000,
                        "y_data": 70
                    },
                    {
                        "x_data": 12000,
                        "y_data": 110
                    },
                    {
                        "x_data": 8300,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the last_name by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and department_id , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grant",
                        "y_data": 0
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 20
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "what is the average price for each type of product?",
            "What is the average price for each type of product. Visualize by bar chart.",
            "Return the average price for each product type by a bar chart.",
            "Return the average price for each product type. Visualize by bar chart.",
            "Bar graph to show mean product price from different product type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 715.5366666666665
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 796.0416666666665
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and revenue .",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and revenue .",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between code and revenue .",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and revenue .",
            "For those records from the products and each product's manufacturer, what is the relationship between code and revenue ?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 130
                    },
                    {
                        "x_data": 2,
                        "y_data": 30
                    },
                    {
                        "x_data": 3,
                        "y_data": 200
                    },
                    {
                        "x_data": 4,
                        "y_data": 30
                    },
                    {
                        "x_data": 5,
                        "y_data": 120
                    },
                    {
                        "x_data": 6,
                        "y_data": 100
                    },
                    {
                        "x_data": 7,
                        "y_data": 100
                    },
                    {
                        "x_data": 8,
                        "y_data": 50
                    },
                    {
                        "x_data": 9,
                        "y_data": 50
                    },
                    {
                        "x_data": 10,
                        "y_data": 100
                    },
                    {
                        "x_data": 11,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Allergy_Type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the last name of each student who is not allergic to any type of food? Count them with a bar chart, and could you rank from high to low by the total number please?",
            "List the last name of the students who do not have any food type allergy and count them in a bart chart, and sort by the the number of lname in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wilson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thornton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Goldman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Epp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Davis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brody",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andreo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many bookings for each apartment number? Plot a bar chart, I want to sort names in asc order.",
            "Return a bar chart about the number bookings for each apartment number, and could you sort from low to high by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apt. 187",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 477",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 693",
                        "y_data": 3
                    },
                    {
                        "x_data": "Suite 749",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What is the lowest price of product, grouped by product type? Show a pie chart.",
            "Give the minimum product price for each product type in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 408.82
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 612.46
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all investor details, and count them by a bar chart",
            "Plot the number of investor details by grouped by investor details as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    },
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "l",
                        "y_data": 2
                    },
                    {
                        "x_data": "o",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "w",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 2
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Bar graph to show how many location from different location, and list total number from low to high order.",
            "How many locations? Draw a bar chart, sort total number from low to high order.",
            "A bar chart shows how many locations, list Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 1
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 1
                    },
                    {
                        "x_data": "London",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a bar chart that groups by departed date.",
            "List the number of dogs departed in each day with a bar chart that groups by departed date.",
            "Show how many date departed from each date departed"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-24",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-25",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, show in ascending by the y-axis.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and I want to order y axis from low to high order.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, and I want to order y axis from low to high order.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, sort in ascending by the y axis please.",
            "For those employees who was hired before 2002-06-21, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, and display y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 101.5
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the average age for all female students and group them by last name with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apap",
                        "y_data": 18
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 21
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 21
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 19
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 16
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 20
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 18
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 26
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give the maximum product price for each product type in a bar chart, and sort bar in descending order.",
            "What is the highest price of product, grouped by product type? Show a bar chart, and could you list by the x axis in descending?",
            "Bar chart of maximal product price from each product type code, and display in descending by the product_type_code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 971.44
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 939.57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "List the number of games in each season with a line chart.",
            "I want to see trend of the number of season by season"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For all the claims whose claimed amount is larger than the average, bin the settlement date into the day of week interval and count them for visualizing a bar chart, display y-axis in descending order.",
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin the date it was settled into weekday interval and count them to show a bar chart, and display by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Settled",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Settled)"
                }
            }
        }
    },
    {
        "tables_used": [
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show each premise type and the number of premises in that type with a pie chart.",
            "Show each premise type and the number of premises in that type. Show a pie chart.",
            "Give me a pie to show the total number from different premises type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Office",
                        "y_data": 7
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 4
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Visualize a bar chart for the number of trains for each station by the station network name, rank in asc by the X.",
            "Find the number of trains for each station, as well as the station network name Show the result with a bar graph, order in ascending by the network_name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Amersham",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 2
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bushey",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carpenders Park",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chafford Hundred",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chalfont & Latimer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chesham",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cheshunt",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "network_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Bar graph to show how many installation date from different installation date, and rank total number in asc order please.",
            "Bin the installation date into Year interval, and then you can draw a bar chart to tell me how many stations each year, order in ascending by the the number of installation date.",
            "Please give me a bar chart that bins the installation date of stations into Year interval as the X-axis, and count for showing how many stations are installed each year, and sort y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 163
                    },
                    {
                        "x_data": "2013",
                        "y_data": 9796
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "installation_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(installation_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "I want to see trend of the number of date in locaton to by date in locaton to, sort by the x axis in desc.",
            "How many documents in different ending date? Return a line chart binning ending date by year interval, I want to rank X in descending order.",
            "Show the number of documents in different ending date and bin ending date by year interval with a line chart, and I want to display X from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016~2017",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012~2015",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 5
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 4
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0
                    },
                    {
                        "x_data": "1976~1979",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sportsinfo",
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "What are the last names for all scholarship students, and count them by a bar chart, and rank by the y axis from low to high please.",
            "A bar chart for what are the number of the last names for all scholarship students?, rank y-axis in asc order please.",
            "Show last names for all student who are on scholarship, and count them by a bar chart, I want to sort total number in ascending order.",
            "What are the number of the last names for all scholarship students?, list by the how many lname in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shieber",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer",
            "record",
            "event",
            "stadium"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, could you display total number in ascending order?",
            "Find the number of the names of stadiums that some Australian swimmers have been to, and show in ascending by the the number of name.",
            "A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, and could you display Y in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baku Olympic Stadium",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gazprom Arena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Yubileyniy Stadium",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nou Mestalla",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Tell me the distribution of the number of trains at each arrival time with a bar chart, could you display in descending by the x axis?",
            "Create a bar chart showing how many arrival across arrival, I want to display by the names from high to low.",
            "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, and order names in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "23:44",
                        "y_data": 1
                    },
                    {
                        "x_data": "23:39",
                        "y_data": 1
                    },
                    {
                        "x_data": "13:28",
                        "y_data": 1
                    },
                    {
                        "x_data": "13:04",
                        "y_data": 2
                    },
                    {
                        "x_data": "09:48",
                        "y_data": 1
                    },
                    {
                        "x_data": "09:08",
                        "y_data": 1
                    },
                    {
                        "x_data": "08:54",
                        "y_data": 1
                    },
                    {
                        "x_data": "05:09",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Arrival",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Arrival)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, show the price and group them by cinema name in a stacked bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 9,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 9,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 12,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 15,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 12,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 12,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 8,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "How many templates with version number later than 5 for each template type code? Show me a bar chart.",
            "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 2
                    },
                    {
                        "x_data": "CV",
                        "y_data": 1
                    },
                    {
                        "x_data": "PP",
                        "y_data": 2
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Template_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artwork"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            ", I want to list by the bars from low to high please.",
            "Show the total number from each type, and order names in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Presenter Music/Variety Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Presenter Talent Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Program Music/Variety Show",
                        "y_data": 3
                    },
                    {
                        "x_data": "Program Talent Show",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Stacked bar chart of the total number for with each Sex in each rank, I want to show in desc by the the total number .",
            "Show all the ranks and the number of male and female faculty for each rank in a bar chart, I want to show in desc by the the total number .",
            "How many faculty members do we have for each rank and gender? Plot them as bar chart, rank by the y-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Professor",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27,
                        "classify": "M"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 12,
                        "classify": "M"
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 7,
                        "classify": "M"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 5,
                        "classify": "M"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and order in descending by the Date_in_Location_From please.",
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and could you rank from high to low by the X?",
            "Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, and order in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 6,
                        "classify": "b"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 3,
                        "classify": "b"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "b"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 3,
                        "classify": "b"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 7,
                        "classify": "c"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 3,
                        "classify": "c"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "c"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 4,
                        "classify": "c"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 8,
                        "classify": "e"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 9,
                        "classify": "n"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 10,
                        "classify": "x"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 6,
                        "classify": "x"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 6,
                        "classify": "x"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 6,
                        "classify": "x"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "what is the number of players who have points less than 30 for each position?",
            "Show me the proportion on what is the number of players who have points less than 30 for each position?",
            "What is the number of players who have points less than 30 for each position."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 3
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "what are the different template type codes, and how many documents use each type?, and I want to list by the Y-axis in desc.",
            "Show all template type codes and the number of documents using each type with a bar chart, rank by the the total number in desc.",
            "A bar chart about what are the different template type codes, and how many documents use each type?, I want to list by the Y-axis in desc.",
            "What are the different template type codes, and how many documents use each type Plot them as bar chart, I want to list by the Y-axis in desc.",
            "Show all template type codes and the number of documents using each type Visualize by bar chart, display total number in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PP",
                        "y_data": 4
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    },
                    {
                        "x_data": "AD",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, compare the number of deaths by name, rank by the X-axis in ascending.",
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, and order by the x-axis from low to high please.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, rank by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9 cyclones",
                        "y_data": 71
                    },
                    {
                        "x_data": "Five",
                        "y_data": 3
                    },
                    {
                        "x_data": "Four",
                        "y_data": 7
                    },
                    {
                        "x_data": "Six",
                        "y_data": 2
                    },
                    {
                        "x_data": "Three",
                        "y_data": 52
                    },
                    {
                        "x_data": "Two",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "List all customer status codes and the number of customers having each status code in a bar chart.",
            "List all customer status codes and the number of customers having each status code.",
            "For each customer status code, how many customers are classified that way. Visualize by bar chart.",
            "Bar chart x axis customer status code y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bad Customer",
                        "y_data": 9
                    },
                    {
                        "x_data": "Good Customer",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_status_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute name in a bar chart, and I want to rank y axis in asc order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and manufacturer , and group by attribute name, and I want to list y axis from low to high order please.",
            "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute name by a bar chart, and I want to list y axis from low to high order please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute name, and list by the y axis from low to high.",
            "For those records from the products and each product's manufacturer, find name and manufacturer , and group by attribute name, and visualize them by a bar chart, and display y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart, and order Y-axis in asc order.",
            "Give me the comparison about ACC_Percent over the ACC_Regular_Season , sort by the ACC_Percent in ascending.",
            "Bar chart x axis acc regular season y axis acc_percent, display ACC_Percent in ascending order.",
            "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , show by the y-axis from low to high.",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , and display ACC_Percent in ascending order.",
            "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart, and order from low to high by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.563
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Find the total revenue of companies of each founder Visualize by bar chart, and show x axis in desc order.",
            "Draw a bar chart of founder versus sum revenue, and display X in desc order.",
            "What is the total revenue of companies started by founder Plot them as bar chart, order by the X-axis in desc.",
            "Display a bar chart for what is the total revenue of companies started by founder?, and display X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval with a line chart, and rank in desc by the X-axis.",
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval with a line chart, display X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010~2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 0
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 1
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SALES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Find the data about the sale details and dates of transactions with amount smaller than 3000? Bin the date of the transaction into a weekday interval and compute the total number of each day with a bar chart, and sort y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, and list by the Date_in_Locaton_To in ascending.",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code, and sort by the Date_in_Locaton_To in asc.",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code, and sort X in ascending order.",
            "Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, rank by the x axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "x"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "files",
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, and rank bars from high to low order please.",
            "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, and order X-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:23",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:34",
                        "y_data": 8
                    },
                    {
                        "x_data": "4:30",
                        "y_data": 10
                    },
                    {
                        "x_data": "4:12",
                        "y_data": 7
                    },
                    {
                        "x_data": "3:45",
                        "y_data": 8
                    },
                    {
                        "x_data": "2:56",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "min(T1.duration)",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T2.rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me a bar chart, that simply displays the last name of the employee and the corresponding department's location id, and display by the x axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whalen",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 2500
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 2400
                    },
                    {
                        "x_data": "King",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 1400
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 1800
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 1500
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 2700
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "LOCATION_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter, display y axis in asc order please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter, and I want to show by the Y-axis in asc please.",
            "For those records from the products and each product's manufacturer, find headquarter and the amount of headquarter , and group by attribute headquarter, and visualize them by a bar chart, display y axis in asc order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter by a bar chart, and order by the how many headquarter from low to high please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter in a bar chart, order by the how many headquarter from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Beijing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 3
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarter)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a bar chart, and order in asc by the how many emp fname please.",
            "How many courses each teacher taught? Show me a bar chart grouping by instructor's first name, display in asc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs for each size code? Return a bar chart, I want to display by the Y from low to high.",
            "List the number of dogs for each size code in a bar chart, and display Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SML",
                        "y_data": 2
                    },
                    {
                        "x_data": "LGE",
                        "y_data": 4
                    },
                    {
                        "x_data": "MED",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "size_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(size_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "How many competitions are held in each city? Draw a bar chart.",
            "Show the number of competitions held in each city with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aroostook",
                        "y_data": 2
                    },
                    {
                        "x_data": "Drummond",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grand Falls/Grand-Sault",
                        "y_data": 1
                    },
                    {
                        "x_data": "Perth-Andover",
                        "y_data": 1
                    },
                    {
                        "x_data": "Plaster Rock",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Official_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Official_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "For each year, bin the year into day of the week interval, and return the average of the number of times the team Boston Red Stockings won in the postseasons using a line chart, order X in desc order please.",
            "For each year, bin the year into day of the week interval, and return the average of the number of times the team Boston Red Stockings won in the postseasons using a line chart, list by the year in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 15
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 10
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 5
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 5
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 5
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 5
                    },
                    {
                        "x_data": "1903~1913",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart, display total number from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, display total number from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, and display by the Y-axis in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time, and display total number from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and sort in desc by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 1193
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each weekday using a bar chart, I want to rank Y-axis in asc order.",
            "Count those dates for each day of the week and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, I want to sort by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Count those days and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, could you order X in desc order?",
            "For days had a minimum dew point smaller than any day in zip code 94107, show the total number of such days using a bar chart, and I want to sort X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014-12-31",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-12-20",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, return the name and the average rating of reviews given by them Plot them as bar chart, and could you show by the y axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Helen",
                        "y_data": 7.333333333333332
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Orders",
            "ORDER_ITEMS",
            "Products"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Find the order dates of the orders with price above 1000, and count them by a line chart",
            "What are the order dates of orders with price higher than 1000, and count them by a line chart",
            "A line chart for finding the number of the order dates of the orders with price above 1000.",
            "What are the number of the order dates of orders with price higher than 1000?",
            "A line chart for what are the number of the order dates of orders with price higher than 1000?",
            "Find the number of the order dates of the orders with price above 1000."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1981~1984",
                        "y_data": 2
                    },
                    {
                        "x_data": "1985~1988",
                        "y_data": 2
                    },
                    {
                        "x_data": "1989~1992",
                        "y_data": 0
                    },
                    {
                        "x_data": "1993~1996",
                        "y_data": 1
                    },
                    {
                        "x_data": "1997~2000",
                        "y_data": 4
                    },
                    {
                        "x_data": "2001~2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005~2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009~2012",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013~2014",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Order_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Order_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "A bar chart shows the distribution of dept_name and the average of salary , and group by attribute dept_name.",
            "Draw a bar chart about the distribution of dept_name and the average of salary , and group by attribute dept_name.",
            "Return a bar chart about the distribution of dept_name and the average of salary , and group by attribute dept_name.",
            "Visualize a bar chart about the distribution of dept_name and the average of salary , and group by attribute dept_name.",
            "Show me about the distribution of dept_name and the average of salary , and group by attribute dept_name in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 48716.25
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 79070
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 77097.6
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 61287
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 98133
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 96345.75
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 74162.25
                    },
                    {
                        "x_data": "English",
                        "y_data": 72088.5
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 105311
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 99382
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 57421.333333333336
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 84097
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 79812.5
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 114576
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 100052.66666666667
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 61142.5
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 67795
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of assets and group by asset make in a bar chart.",
            "Draw a bar chart of asset make versus the number of asset make"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CN",
                        "y_data": 2
                    },
                    {
                        "x_data": "DE",
                        "y_data": 2
                    },
                    {
                        "x_data": "FR",
                        "y_data": 2
                    },
                    {
                        "x_data": "GB",
                        "y_data": 1
                    },
                    {
                        "x_data": "IE",
                        "y_data": 1
                    },
                    {
                        "x_data": "IN",
                        "y_data": 2
                    },
                    {
                        "x_data": "IT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "RU",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "asset_make",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(asset_make)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about revenue over the name , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and revenue , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "pilot"
        ],
        "db_id": "pilot_record",
        "nl_queries": [
            "Bar graph to show the total number from different nationality, and show in desc by the X.",
            "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality Show bar chart, display by the names in desc.",
            "Draw a bar chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality, and display by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 3
                    },
                    {
                        "x_data": "United Kindom",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nigeria",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of assets and group by asset make in a bar chart, and sort asset_make in desc order.",
            "Draw a bar chart of asset make versus the number of asset make, display by the x axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "RU",
                        "y_data": 3
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT",
                        "y_data": 1
                    },
                    {
                        "x_data": "IN",
                        "y_data": 2
                    },
                    {
                        "x_data": "IE",
                        "y_data": 1
                    },
                    {
                        "x_data": "GB",
                        "y_data": 1
                    },
                    {
                        "x_data": "FR",
                        "y_data": 2
                    },
                    {
                        "x_data": "DE",
                        "y_data": 2
                    },
                    {
                        "x_data": "CN",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "asset_make",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(asset_make)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, and show by the names from low to high.",
            "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, and list by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alice",
                        "y_data": 35
                    },
                    {
                        "x_data": "Bob",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4759
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 488
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each record in schedule, show average of the price for each day in a bar chart, and show in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "21 May",
                        "y_data": 12
                    },
                    {
                        "x_data": "21 Jun",
                        "y_data": 8
                    },
                    {
                        "x_data": "20 May",
                        "y_data": 9
                    },
                    {
                        "x_data": "2 Aug",
                        "y_data": 12
                    },
                    {
                        "x_data": "19 May",
                        "y_data": 15
                    },
                    {
                        "x_data": "11 July",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Show the name of each editor and the number of journal committees they are on using a bar chart, and order by the X-axis in descending.",
            "Just compare the number of journal committees of each editor using a histogram, and list in desc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What are the names of the cheapest products in each category along with the cheapest price in a bar chart?, and rank in descending by the Y please.",
            "Show the name of the product that is cheapest in each product category with their minimum price with a bar graph, and rank in descending by the Y please.",
            "Bar chart of minimal price from each name, and order by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many staffs have contacted with each engineer? Give me a bar chart grouping by each engineer's first name, and could you list in asc by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 6
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Etha",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 2
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "poker_player",
        "nl_queries": [
            "what are different nationalities of people and the corresponding number of people from each nation?",
            "Give the proportion of what are different nationalities of people and the corresponding number of people from each nation?",
            "What are different nationalities of people and the corresponding number of people from each nation.",
            "Give the proportion of how many people are there of each nationality?",
            "Return a pie on how many people are there of each nationality?",
            "How many people are there of each nationality. Visualize by pie chart.",
            "Give me a pie to show the total number from different nationality."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bulgaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart of is full time versus sum employee id, and could you list by the total number in asc?",
            "Return a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and display by the total number of employee id in asc.",
            "Visualize a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, could you list by the total number in asc?",
            "Find Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, and I want to display total number in asc order please.",
            "Draw a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, rank Y in ascending order please.",
            "A bar chart shows the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, order Y in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 9
                    },
                    {
                        "x_data": "T",
                        "y_data": 19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the correlation between School_ID and ACC_Percent , and group by attribute ACC_Home in a scatter chart.",
            "Visualize a scatter chart about the correlation between School_ID and ACC_Percent , and group by attribute ACC_Home.",
            "A scatter chart shows the correlation between School_ID and ACC_Percent , and group by attribute ACC_Home.",
            "Return a scatter chart about the correlation between School_ID and ACC_Percent , and group by attribute ACC_Home.",
            "Draw a scatter chart about the correlation between School_ID and ACC_Percent , and group by attribute ACC_Home.",
            "Show school id vs acc_percent as scatter plot use a different color for each ACC_Home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.563,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.625,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Return a line chart about the change of the amount of Start_from over Start_from bin start_from by time.",
            "A line chart shows the trend of the amount of Start_from over Start_from bin start_from by time.",
            "Draw a line chart about the change of the amount of Start_from over Start_from bin start_from by time.",
            "Visualize a line chart about the change of the amount of Start_from over Start_from bin start_from by time.",
            "Show me about the change of the amount of Start_from over Start_from bin start_from by time in a line chart.",
            "Show me the trend about the amount of Start_from over Start_from bin start_from by time with a line chart.",
            "Can you draw the trend of the number of start from over the start from?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 1
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and could you list bar in descending order?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, could you list bar in descending order?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name by a bar chart, and display from high to low by the names.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, sort X in descending order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, I want to list from high to low by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 5
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 3
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 7.666666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COUNTRIES",
            "CAR_MAKERS"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Visualize a bar chart for what are the countries having at least one car maker? List name and id.",
            "what are the countries having at least one car maker? List name and id.",
            "What are the countries having at least one car maker? List name and id. Visualize by bar chart.",
            "Give me a histogram for what are the names and ids of all countries with at least one car maker?",
            "Return a bar chart on what are the names and ids of all countries with at least one car maker?",
            "What are the names and ids of all countries with at least one car maker. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "usa",
                        "y_data": 1
                    },
                    {
                        "x_data": "germany",
                        "y_data": 2
                    },
                    {
                        "x_data": "france",
                        "y_data": 3
                    },
                    {
                        "x_data": "japan",
                        "y_data": 4
                    },
                    {
                        "x_data": "italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "sweden",
                        "y_data": 6
                    },
                    {
                        "x_data": "uk",
                        "y_data": 7
                    },
                    {
                        "x_data": "korea",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CountryName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "CountryId"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 1193
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products",
            "Products_in_Events"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Show the names of products and the number of events they are in, sorted by the number of events in descending order by a bar chart.",
            "Show the names of products and the number of events they are in, sorted by the number of events in descending order. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV Equipments",
                        "y_data": 5
                    },
                    {
                        "x_data": "Special Dinning",
                        "y_data": 4
                    },
                    {
                        "x_data": "Men suits",
                        "y_data": 2
                    },
                    {
                        "x_data": "Conference Equipments",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trading Policy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trading Policy B",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "For each location, give me a scatter chart showing the relationships between the number of total_passengers and the number of platforms.",
            "Draw a scatterplot of sum(number of platforms) vs total number of total passengers where sum(number of platforms) is on the x-axis and points are colored by Location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 13,
                        "y_data": 36.330999999999996,
                        "classify": "Birmingham"
                    },
                    {
                        "x_data": 17,
                        "y_data": 29.658,
                        "classify": "Glasgow"
                    },
                    {
                        "x_data": 140,
                        "y_data": 498.50700000000006,
                        "classify": "London"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "sum(number_of_platforms)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(total_passengers)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Movie",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, show X-axis in descending order.",
            "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, display by the x-axis from high to low please.",
            "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, and display by the x-axis from high to low please.",
            "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, sort year from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2008~2009",
                        "y_data": 2,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 1,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1990~1992",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1987~1989",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1984~1986",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1981~1983",
                        "y_data": 2,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "2008~2009",
                        "y_data": 2,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 1,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1990~1992",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1987~1989",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1984~1986",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1981~1983",
                        "y_data": 3,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "2008~2009",
                        "y_data": 2,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 1,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1990~1992",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1987~1989",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1984~1986",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1981~1983",
                        "y_data": 4,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "2008~2009",
                        "y_data": 2,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 2,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1990~1992",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1987~1989",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1984~1986",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1981~1983",
                        "y_data": 4,
                        "classify": "Titanic"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Professionals",
            "Professionals",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart, and I want to rank in descending by the total number.",
            "How many professionals did not operate any treatment on dogs for each role? Draw a bar chart, I want to order y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Employee",
                        "y_data": 5
                    },
                    {
                        "x_data": "Veterenarian",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(role_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Can you draw a bar chart to show the number of items in each customer details category?, and show in ascending by the x-axis.",
            "Please compare the frequency of the customer details using a bar chart, and could you list from low to high by the customer_details?",
            "Bar graph to show the number of customer details from different customer details, and rank names in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Esteban Senger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mackenzie Hettinger V",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monty Sauer III",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mr. Raul Prosacco",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oma Smith",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sabryna Moore PhD",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tyrique Durgan II",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vincenza Price",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart, sort by the y-axis in ascending.",
            "For those employees who did not have any job in the past, give me the comparison about the average of salary over the hire_date bin hire_date by weekday by a bar chart, show in asc by the y-axis.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and list by the y-axis in asc please.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday, and rank by the total number in ascending.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, show in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 5646.153846153846
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5740
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5746.666666666667
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 5950
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6028.571428571428
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6121.428571428572
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 7560
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "How many performances of each location? Show me the proportion using a pie chart.",
            "Compute the total the number of location across location as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell Centre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Verizon Center",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "List the number of completion students in each day and bin date of completion by weekday with a bar chart.",
            "How many completion students in each day? Return a bar chart binning date of completion by weekday.",
            "Bar chart of how many date of completion from each date of completion"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 4
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show each location and the number of cinemas there by a bar chart.",
            "Show each location and the number of cinemas there. Show bar chart.",
            "Create a bar chart showing the total number across location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "County Clare",
                        "y_data": 3
                    },
                    {
                        "x_data": "County Cork",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Dublin",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Laois",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Louth",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Tipperary",
                        "y_data": 2
                    },
                    {
                        "x_data": "County Wicklow",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students whose gpa is lower than the average gpa of all students for different first name in a bar chart, and rank STU_FNAME in asc order please.",
            "How many students that has a GPA lower than average? Show me a bar chart grouping by student's first name, sort bars in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John",
                        "y_data": 2
                    },
                    {
                        "x_data": "Juliette",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart, and could you list X in asc order?",
            "A bar chart shows the distribution of All_Neutral and ACC_Percent , and rank by the x-axis from low to high please.",
            "Bar chart of acc_percent from each all neutral, and could you show from low to high by the X please?",
            "Return a bar chart about the distribution of All_Neutral and ACC_Percent , could you list X in asc order?",
            "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent , and sort by the x-axis in asc.",
            "Give me the comparison about ACC_Percent over the All_Neutral , and could you rank All_Neutral in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.563
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Draw a bar chart for what is the average account balance of customers with credit score below 50 for the different account types?, display by the bars in desc please.",
            "What is the average account balance of customers with credit score below 50 for the different account types Visualize by bar chart, display acc_type from high to low order.",
            "For each account type, find the average account balance of customers with credit score lower than 50 Show bar chart, and display by the bars in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "saving",
                        "y_data": 2000
                    },
                    {
                        "x_data": "checking",
                        "y_data": 1000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "acc_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(acc_bal)"
                }
            }
        }
    },
    {
        "tables_used": [
            "representative"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "Plot how many party by grouped by party as a bar graph, list bar in asc order.",
            "A bar chart showing how many representatives in each party, order X in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle",
            "ship",
            "death"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "What are the ids and names of the battles that led to more than 10 people killed in total, and could you order from high to low by the x axis?",
            "Draw a bar chart for what are the ids and names of the battles that led to more than 10 people killed in total, order by the name in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Siege of Constantinople",
                        "y_data": 8
                    },
                    {
                        "x_data": "Battle of Messinopolis",
                        "y_data": 5
                    },
                    {
                        "x_data": "Battle of Boruy",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "company",
            "station_company)"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "How many companies without a gas station in each main industry? Draw a bar chart, and I want to order in desc by the x-axis.",
            "Show the number of companies without a gas station in each main industry with a bar chart, sort in desc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Main_Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Please give me a pie chart showing institution types, along with the total enrollment for each type.",
            "Please tell me the proportion of total enrollment for each type using a pie chart.",
            "Give me a pie to show sum enrollment from different type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private",
                        "y_data": 7868
                    },
                    {
                        "x_data": "Public",
                        "y_data": 5267
                    },
                    {
                        "x_data": "Tribal",
                        "y_data": 1000
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names of high school students and their corresponding number of friends with a bar chart, order by the Y in descending.",
            "A bar chart about what are the names of the high schoolers and how many friends does each have?, and display total number in descending order.",
            "Show the names of high school students and their corresponding number of friends, and could you show by the total number in desc please?",
            "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?, and rank from high to low by the y axis.",
            "What are the names of the high schoolers and how many friends does each have Visualize by bar chart, and order by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jordan",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 3
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "countrylanguage"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart, and order by the total number from high to low.",
            "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, and rank by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dutch",
                        "y_data": 3
                    },
                    {
                        "x_data": "Papiamento",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Language",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Language)"
                }
            }
        }
    },
    {
        "tables_used": [
            "membership_register_branch",
            "branch"
        ],
        "db_id": "shop_membership",
        "nl_queries": [
            "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, could you order the total number in asc order?",
            "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, and could you order the total number in asc order?",
            "Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, rank by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brooke Greville",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Popert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taverner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zytogorski",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexandre",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Draw a bar chart for how many captains with younger than 50 are in each rank?, sort by the X from low to high.",
            "Count the number of captains younger than 50 of each rank, and rank in ascending by the Rank.",
            "How many captains with younger than 50 are in each rank, list by the bars from low to high.",
            "Count the number of captains younger than 50 of each rank by a bar chart, rank in ascending by the Rank.",
            "Show me a bar chart for how many captains with younger than 50 are in each rank?, display in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar about the number of faults for different fault description and fault status of all the faults recoreded in the logs, and I want to show bar in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fixed",
                        "y_data": 0,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 3,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Return",
                        "y_data": 0,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Waiting",
                        "y_data": 3,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Fixed",
                        "y_data": 5,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 2,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Return",
                        "y_data": 2,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Waiting",
                        "y_data": 0,
                        "classify": "system error"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_status",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_status)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show how many date departed from each date departed, and rank in desc by the x axis please.",
            "How many dogs departed in each day? Visualize with a bar chart that groups by departed date, sort x axis in desc order.",
            "List the number of dogs departed in each day with a bar chart that groups by departed date, and sort x axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-25",
                        "y_data": 12
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Visualize a bar chart to show how many players in each occupation, order X in desc order.",
            "Compare the number of players of different occupations using a bar chart, order by the Occupation in descending.",
            "Bar chart x axis occupation y axis how many occupation, display in descending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Student",
                        "y_data": 2
                    },
                    {
                        "x_data": "Small Businessman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Self Employed / Consultant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retired",
                        "y_data": 2
                    },
                    {
                        "x_data": "Researcher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Product Consultant - MLCC",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parliamentarian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ministerial Assistant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Locomotive Engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Distribution Centre Associate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Design Coordinator",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Occupation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Occupation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Visualize a bar chart to show the dates that have the top 3 days with the largest max gust speeds in the month level.",
            "For the days with the 3 largest maximum gust speeds, show me the frequency of their corresponding date in the month level using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 0
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the job_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and commission_pct , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and commission_pct .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and commission_pct in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and commission_pct ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Stacked bar chart of how many away team for with each Home_team in each away team, and sort from low to high by the bars.",
            "List the number of games for each away team and group by home team in a stacked bar chart The x-axis is away team, and I want to order by the X in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 9,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, rank by the x-axis in asc.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list from low to high by the names.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list names in asc order.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart, and display by the X-axis in ascending.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list from low to high by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, compare the number of deaths by name, and I want to order by the names from high to low.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, and order by the bar in descending.",
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, order by the bar in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Two",
                        "y_data": 7
                    },
                    {
                        "x_data": "Three",
                        "y_data": 52
                    },
                    {
                        "x_data": "Six",
                        "y_data": 2
                    },
                    {
                        "x_data": "Four",
                        "y_data": 7
                    },
                    {
                        "x_data": "Five",
                        "y_data": 3
                    },
                    {
                        "x_data": "9 cyclones",
                        "y_data": 71
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "What is average age of male for different job title Visualize by bar chart, rank from low to high by the x-axis.",
            "what is the average age for a male in each job?, and sort X-axis from low to high order.",
            "Return a histogram on what is average age of male for different job title?, sort bar in asc order.",
            "What is the average age for a male in each job Visualize by bar chart, and sort X-axis from low to high order.",
            "Return a bar chart on what is the average age for a male in each job?, rank from low to high by the x-axis.",
            "Draw a bar chart for what is average age of male for different job title?, order by the job in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Employees"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show all role codes and the number of employees in each role with a pie chart.",
            "Show all role codes and the number of employees in each role. Show a pie chart.",
            "A pie chart about what is the code of each role and the number of employees in each role?",
            "What is the code of each role and the number of employees in each role. Plot them as pie chart.",
            "I want to know the proportion of employees for each role code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ED",
                        "y_data": 7
                    },
                    {
                        "x_data": "HR",
                        "y_data": 1
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR",
                        "y_data": 5
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Role_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "A bar chart showing the number of members in each country, I want to display y-axis in asc order.",
            "Plot how many country by grouped by country as a bar graph, and show from low to high by the the number of country."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and salary , and sort by the x-axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and salary in a bar chart, rank by the X-axis from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and salary , and visualize them by a bar chart, rank by the X-axis in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and salary , rank by the X-axis in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the job_id , and rank by the X-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 7000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber",
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Show the names of climbers and the heights of mountains they climb by a bar chart, rank x axis in desc order.",
            "Display a bar chart for what are the names of climbers and the corresponding heights of the mountains that they climb?, rank x axis in desc order.",
            "What are the names of climbers and the corresponding heights of the mountains that they climb Show bar chart, and I want to show X-axis from high to low order.",
            "A bar chart about what are the names of climbers and the corresponding heights of the mountains that they climb?, display in desc by the bars please.",
            "Show the names of climbers and the heights of mountains they climb Show bar chart, and display in desc by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Siegfried Schauz",
                        "y_data": 5895
                    },
                    {
                        "x_data": "Mick Horsepole",
                        "y_data": 4890
                    },
                    {
                        "x_data": "L Currie",
                        "y_data": 4890
                    },
                    {
                        "x_data": "Klaus Enders",
                        "y_data": 5895
                    },
                    {
                        "x_data": "Jean Claude Castella",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Horst Owesle",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Hans Luthringhauser",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Georg Auerbacher",
                        "y_data": 5148
                    },
                    {
                        "x_data": "Charlie Freedman",
                        "y_data": 4985
                    },
                    {
                        "x_data": "Arseneus Butscher",
                        "y_data": 4985
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Show the position of players and the corresponding number of players with a bar chart.",
            "Show the position of players and the corresponding number of players. Visualize by bar chart.",
            "Return a bar chart on how many players played each position?",
            "Draw a bar chart for how many players played each position?",
            "How many players played each position. Plot them as bar chart.",
            "Give me a bar chart for the total number of each position"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Defender",
                        "y_data": 7
                    },
                    {
                        "x_data": "Forward",
                        "y_data": 3
                    },
                    {
                        "x_data": "Midfielder",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of code , and group by attribute name, list by the total number in descending.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, I want to list from high to low by the total number.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, could you list by the Y in descending?",
            "For those records from the products and each product's manufacturer, find name and the average of code , and group by attribute name, and visualize them by a bar chart, and list by the total number in descending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and could you list by the Y in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show how many delegates in each county with a bar chart, and order in desc by the County_name.",
            "Use a bar chart to show the number of delegates in each county, I want to list in descending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    },
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, could you rank x-axis in ascending order?",
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by year interval in a bar chart, and could you rank x-axis in ascending order?",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, order in asc by the X-axis.",
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by year interval in a bar chart, and display in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0
                    },
                    {
                        "x_data": "2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 1
                    },
                    {
                        "x_data": "2016",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "For those female students with age is older than 18 who are not majoring in 600, visualize the proportion of students' first names with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname"
                }
            }
        }
    },
    {
        "tables_used": [
            "constructors",
            "constructorstandings"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart",
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honda",
                        "y_data": 45
                    },
                    {
                        "x_data": "Toyota",
                        "y_data": 95
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the proportion of the sum of Team_ID and the sum of Team_ID in a pie chart.",
            "Visualize a pie chart about the proportion of All_Home and the sum of Team_ID.",
            "Give me a pie chart to reflect the proportion of All_Home and the sum of Team_ID.",
            "Return a pie chart about the proportion of All_Home and the sum of Team_ID.",
            "A pie chart shows the proportion of All_Home and the sum of Team_ID.",
            "Compute the total sum team id across all home as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 4
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, I want to show by the x-axis from high to low.",
            "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, and could you list in descending by the names?",
            "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, display bar in descending order.",
            "Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, order by the X from high to low.",
            "Show total number of id from each nationality, sort Nationality in desc order.",
            "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, sort by the bars in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 7
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "France",
                        "y_data": 8
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 6
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Bar chart of mean stu gpa from each dept code, I want to rank by the X-axis in asc please.",
            "Find the average gpa of all students in each department with a bar chart, list by the X-axis in ascending.",
            "What is the average student GPA for every department? Return a bar chart, I want to display by the X-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 2.776666666666667
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.18
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show first name and id for all customers with at least 2 accounts in a bar chart, and show in asc by the total number.",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?, could you rank in ascending by the customer_id?",
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?, could you rank in ascending by the customer_id?",
            "What are the first names and ids for customers who have two or more accounts, and show by the y axis in asc please.",
            "Show first name and id for all customers with at least 2 accounts Show bar chart, order Y from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Meaghan",
                        "y_data": 8
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 13
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Bar graph to show the total number from different party, and I want to display Party from low to high order.",
            "Show different parties of people along with the number of people in each party with a bar chart, and I want to order by the X in ascending please.",
            "Show different parties of people along with the number of people in each party Plot them as bar chart, and I want to list by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anti-Lecompton Democrat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Independent Democrat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "Show different publishers together with the number of publications they have in a bar chart, I want to display names in descending order.",
            "Show different publishers together with the number of publications they have Plot them as bar chart, and list from high to low by the x axis.",
            "Draw a bar chart of publisher versus the total number, I want to order by the X in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wiley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thomson Reuters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Springer Nature",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pearson",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bertelsmann",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publisher",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Bar chart, X is bed type and the Y-axis is their appearance frequency, list in desc by the x axis.",
            "Compare the frequency of each type of bed by a bar chart, and list bedType from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Queen",
                        "y_data": 1
                    },
                    {
                        "x_data": "King",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(bedType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart about the number of last name for all female students whose sex is F, and rank in asc by the y-axis.",
            "A bar chart showing the number of last name for all female students Their sex is F, and sort in asc by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Bar chart of sum shop id from each is full time, and list in desc by the total number of shop id.",
            "Draw a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, list in desc by the total number of shop id.",
            "Visualize a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, and rank total number from high to low order please.",
            "Show me about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time in a bar chart, rank y-axis in desc order.",
            "A bar chart shows the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, rank y-axis in desc order.",
            "Return a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, and I want to order by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 17
                    },
                    {
                        "x_data": "F",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Give me a pie chart that group and count names of technicians with series of machines they are assigned to repair.",
            "What are the names of technicians with the machine series that they repair? Show me how many machines for each technician's name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Create a bar chart showing all_games_percent across all neutral, I want to show bar in asc order.",
            "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart, and list by the bars in asc.",
            "Give me the comparison about All_Games_Percent over the All_Neutral , and sort by the x-axis in asc.",
            "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, and order by the x axis in asc please.",
            "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , rank by the X in ascending.",
            "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart, and I want to rank by the names from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.6
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.946
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the average transaction amount for different transaction types with a bar chart.",
            "Show the average transaction amount for different transaction types.",
            "Create a bar chart showing mean amount of transaction across transaction type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PUR",
                        "y_data": 25945880.3716125
                    },
                    {
                        "x_data": "SALE",
                        "y_data": 11198167.237771427
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(amount_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute headquarter by a bar chart, I want to order by the X-axis in asc please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute headquarter, show bar from low to high order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, list by the x-axis in ascending please.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, I want to display by the names in ascending.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute headquarter, show bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show different citizenship of singers and the number of singers of each citizenship in a pie chart.",
            "Show different citizenship of singers and the number of singers of each citizenship. Show a pie chart.",
            "For each citizenship, how many singers are from that country. Show the proportion.",
            "Create a pie chart showing the total number across citizenship."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship"
                }
            }
        }
    },
    {
        "tables_used": [
            "Residents"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Bar chart x axis other details y axis resident_id, list in desc by the names.",
            "Just list the resident id and details in a bar chart, rank in descending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tiffany Jaskolski",
                        "y_data": 47
                    },
                    {
                        "x_data": "Terrill Bernhard",
                        "y_data": 67
                    },
                    {
                        "x_data": "Prof. Nasir Hoppe",
                        "y_data": 45
                    },
                    {
                        "x_data": "Mrs. Raphaelle Fisher",
                        "y_data": 87
                    },
                    {
                        "x_data": "Miss Alanis Lockman",
                        "y_data": 28
                    },
                    {
                        "x_data": "Loy Walter",
                        "y_data": 83
                    },
                    {
                        "x_data": "Jess Wyman",
                        "y_data": 23
                    },
                    {
                        "x_data": "Jacques Glover II",
                        "y_data": 88
                    },
                    {
                        "x_data": "Elroy Schuster",
                        "y_data": 43
                    },
                    {
                        "x_data": "Cassie Johnson",
                        "y_data": 90
                    },
                    {
                        "x_data": "Anderson Batz",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "resident_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the sum of credits of courses that have more than one prerequisites for each department with a bar chart.",
            "What is the sum of credit value of courses with more than one prerequisite for each department? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Athletics",
                        "y_data": 7
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 7
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 8
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 7
                    },
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 4
                    },
                    {
                        "x_data": "History",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 6
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 6
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "List the number of the order dates of all the bookings.",
            "A line chart for listing the number of the order dates of all the bookings.",
            "What is the order date of each booking, and count them by a line chart",
            "List the order dates of all the bookings, and count them by a line chart",
            "Plot the number of order date over order date in a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1971~1975",
                        "y_data": 3
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 2
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 2
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 5
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2016",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Order_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Order_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about ID over the meter_700 by a bar chart, and could you display x axis from high to low order?",
            "Return a bar chart about the distribution of meter_700 and ID , and could you display x axis from high to low order?",
            "Draw a bar chart about the distribution of meter_700 and ID , and rank meter_700 in desc order.",
            "Give me the comparison about ID over the meter_700 , and rank x axis from high to low order.",
            "Bar chart x axis meter 700 y axis id, could you list by the bar in desc?",
            "A bar chart shows the distribution of meter_700 and ID , rank meter_700 in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6:57.69",
                        "y_data": 6
                    },
                    {
                        "x_data": "6:57.44",
                        "y_data": 2
                    },
                    {
                        "x_data": "6:55.07",
                        "y_data": 1
                    },
                    {
                        "x_data": "6:53.34",
                        "y_data": 8
                    },
                    {
                        "x_data": "6:52.69",
                        "y_data": 4
                    },
                    {
                        "x_data": "6:52.58",
                        "y_data": 5
                    },
                    {
                        "x_data": "6:50.91",
                        "y_data": 7
                    },
                    {
                        "x_data": "6:50.80",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_700",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, rank by the names in descending.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, and show by the names in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rolando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachelle",
                        "y_data": 3
                    },
                    {
                        "x_data": "Orlando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nora",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorenz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Johann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Emelie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cindy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Return a histogram on what are the age and hometown of teachers?",
            "Display a bar chart for what are the age and hometown of teachers?",
            "What are the age and hometown of teachers. Visualize by bar chart.",
            "A bar chart about what is the age and hometown of every teacher?",
            "Visualize a bar chart for what is the age and hometown of every teacher?",
            "What is the age and hometown of every teacher. Visualize by bar chart.",
            "Create a bar chart showing age across hometown"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Blackrod Urban District",
                        "y_data": 32
                    },
                    {
                        "x_data": "Bolton County Borough",
                        "y_data": 29
                    },
                    {
                        "x_data": "Farnworth Municipal Borough",
                        "y_data": 26
                    },
                    {
                        "x_data": "Horwich Urban District",
                        "y_data": 33
                    },
                    {
                        "x_data": "Kearsley Urban District",
                        "y_data": 45
                    },
                    {
                        "x_data": "Little Lever Urban District",
                        "y_data": 41
                    },
                    {
                        "x_data": "Turton Urban District",
                        "y_data": 39
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of code , and group by attribute founder in a bar chart, and display the average of code in asc order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of code , and group by attribute founder, could you rank total number in asc order?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder, and show by the y-axis from low to high.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of code , and group by attribute founder, display y-axis in ascending order please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder by a bar chart, sort Y-axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 3
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "James",
                        "y_data": 9.333333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings for each weekday and bin booking start date by weekday interval in a bar chart, and sort y axis in desc order.",
            "How many apartment bookings for each weekday? Draw a bar chart binning booking start date by weekday interval, and rank by the y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and rank by the total number in ascending.",
            "For those employees who did not have any job in the past, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and I want to order by the Y in ascending.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and rank by the total number in ascending.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and show y-axis in asc order.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of salary , and group by attribute job_id, sort by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2780
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2785
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3215
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5760
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7125
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7920
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8341.379310344828
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 12200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names of high school students and their corresponding number of friends with a bar chart, display by the y axis from low to high.",
            "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?, rank in ascending by the Y.",
            "Show the names of high school students and their corresponding number of friends, and order by the total number in asc.",
            "What are the names of the high schoolers and how many friends does each have Visualize by bar chart, I want to order Y-axis in ascending order.",
            "A bar chart about what are the names of the high schoolers and how many friends does each have?, and rank in asc by the sum count(*)."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 3
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find personal_name and author_tutor_ATB , and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of personal_name and author_tutor_ATB .",
            "Give me the comparison about author_tutor_ATB over the personal_name by a bar chart.",
            "Show me about the distribution of personal_name and author_tutor_ATB in a bar chart.",
            "Give me the comparison about author_tutor_ATB over the personal_name ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adolf",
                        "y_data": 817
                    },
                    {
                        "x_data": "Cathrine",
                        "y_data": 331
                    },
                    {
                        "x_data": "Ciara",
                        "y_data": 229
                    },
                    {
                        "x_data": "Darius",
                        "y_data": 349
                    },
                    {
                        "x_data": "Deja",
                        "y_data": 159
                    },
                    {
                        "x_data": "Dusty",
                        "y_data": 833
                    },
                    {
                        "x_data": "Georgiana",
                        "y_data": 505
                    },
                    {
                        "x_data": "Julio",
                        "y_data": 782
                    },
                    {
                        "x_data": "Kelsie",
                        "y_data": 557
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 869
                    },
                    {
                        "x_data": "Madonna",
                        "y_data": 613
                    },
                    {
                        "x_data": "Retha",
                        "y_data": 975
                    },
                    {
                        "x_data": "Shakira",
                        "y_data": 974
                    },
                    {
                        "x_data": "Sheldon",
                        "y_data": 847
                    },
                    {
                        "x_data": "Yessenia",
                        "y_data": 388
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "personal_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_tutor_ATB"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist",
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "What countries are the female artists who sung in the language Bangla from, and count them by a bar chart, could you sort bars from low to high order?",
            "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart, I want to display by the bars in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bangladesh",
                        "y_data": 2
                    },
                    {
                        "x_data": "India",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by weekday and group by document name with a stacked bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Winona Book"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A scatter chart shows the correlation between Team_ID and All_Games_Percent , and group by attribute All_Neutral.",
            "Show me about the correlation between Team_ID and All_Games_Percent , and group by attribute All_Neutral in a scatter chart.",
            "Draw a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute All_Neutral.",
            "Visualize the relationship between Team_ID and All_Games_Percent , and group by attribute All_Neutral.",
            "What is the relationship between Team_ID and All_Games_Percent , and group by attribute All_Neutral?",
            "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by All_Neutral"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.6,
                        "classify": "3\u20133"
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.706,
                        "classify": "4\u20133"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "5\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "9\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show weight from each name, and rank by the y-axis in asc.",
            "Return a bar chart about the distribution of Name and Weight , sort y axis in ascending order.",
            "Draw a bar chart about the distribution of Name and Weight , display Y in ascending order.",
            "Visualize a bar chart about the distribution of Name and Weight , and rank by the y axis from low to high.",
            "Show me about the distribution of Name and Weight in a bar chart, rank by the y axis from low to high.",
            "A bar chart shows the distribution of Name and Weight , rank by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Guillaume Samica",
                        "y_data": 82
                    },
                    {
                        "x_data": "Hubert Henno",
                        "y_data": 83
                    },
                    {
                        "x_data": "Dominique Daquin",
                        "y_data": 85
                    },
                    {
                        "x_data": "Philippe Bar\u00e7a-Cysique",
                        "y_data": 88
                    },
                    {
                        "x_data": "Vincent Montm\u00e9at",
                        "y_data": 88
                    },
                    {
                        "x_data": "Lo\u00efc De Kergret",
                        "y_data": 89
                    },
                    {
                        "x_data": "Frantz Granvorka",
                        "y_data": 90
                    },
                    {
                        "x_data": "Laurent Capet",
                        "y_data": 92
                    },
                    {
                        "x_data": "St\u00e9phane Antiga",
                        "y_data": 94
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "catalogs",
            "catalog_structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level number greater than 5 Bin publication dates into Year interval, and count catalog and group by catalog name, order the number of date of publication from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2011",
                        "y_data": 1,
                        "classify": "Coffee Bean"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "Coffee Bean"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2,
                        "classify": "Jam"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "Jam"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_publication",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_publication)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, and rank JOB_ID in desc order.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, rank JOB_ID in desc order.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and I want to sort from high to low by the x-axis please.",
            "For all employees who have the letters D or S in their first name, find job_id and the average of manager_id , and group by attribute job_id, and visualize them by a bar chart, could you order by the bar in desc please?",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, and could you rank X-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122.22222222222223
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.66666666666667
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart.",
            "A stacked bar graph shows the total number of captains categorize by ranks of different classes.",
            "Stacked bar of class and the number of class colored by Rank"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Armed schooner",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 1,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 1,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 1,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 1,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 1,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 2,
                        "classify": "Midshipman"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "List the name and the number of enrolled student for each course in a bar chart, show by the X from low to high.",
            "What is the name of each course and the corresponding number of student enrollment Show bar chart, could you show by the bar in asc?",
            "List the name and the number of enrolled student for each course Show bar chart, display x-axis from low to high order.",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?, and sort X-axis in ascending order.",
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, and could you display in asc by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AI",
                        "y_data": 2
                    },
                    {
                        "x_data": "Art history",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chinese Painting",
                        "y_data": 1
                    },
                    {
                        "x_data": "French",
                        "y_data": 3
                    },
                    {
                        "x_data": "Japanese",
                        "y_data": 2
                    },
                    {
                        "x_data": "Spanish",
                        "y_data": 2
                    },
                    {
                        "x_data": "Writing in French",
                        "y_data": 2
                    },
                    {
                        "x_data": "advanced database",
                        "y_data": 2
                    },
                    {
                        "x_data": "database",
                        "y_data": 2
                    },
                    {
                        "x_data": "modern Arts",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Return a bar chart showing how many shops in each location.",
            "Create a bar chart showing how many location across location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Blaenllecha",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cymmer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinas",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gelli",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maerdy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pentre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Penygraig",
                        "y_data": 2
                    },
                    {
                        "x_data": "Porth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wattstown",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie type? Return a bar chart, and could you order by the x-axis from low to high?",
            "Create a bar chart showing how many allergytype across allergytype, and display from low to high by the bars.",
            "Show the number of each allergie type in a bar chart, could you order by the x-axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "food",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins departed date by weekday, list in desc by the y axis.",
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins departed date by weekday, show in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?",
            "What is the name of each course and the corresponding number of student enrollment. Show bar chart.",
            "List the name and the number of enrolled student for each course in a bar chart.",
            "List the name and the number of enrolled student for each course. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AI",
                        "y_data": 2
                    },
                    {
                        "x_data": "Art history",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chinese Painting",
                        "y_data": 1
                    },
                    {
                        "x_data": "French",
                        "y_data": 3
                    },
                    {
                        "x_data": "Japanese",
                        "y_data": 2
                    },
                    {
                        "x_data": "Spanish",
                        "y_data": 2
                    },
                    {
                        "x_data": "Writing in French",
                        "y_data": 2
                    },
                    {
                        "x_data": "advanced database",
                        "y_data": 2
                    },
                    {
                        "x_data": "database",
                        "y_data": 2
                    },
                    {
                        "x_data": "modern Arts",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Show the total number of the last year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the last year into weekday interval, and count the first year, and rank y-axis from high to low order.",
            "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Bin the last year into weekday interval and count them, and could you display y-axis in descending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Last_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Last_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of departments in each school. Plot them as bar chart.",
            "A bar chart about how many departments are in each school?",
            "Return a bar chart on how many departments are in each school?",
            "How many departments are in each school. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A&SCI",
                        "y_data": 7
                    },
                    {
                        "x_data": "BUS",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SCHOOL_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT dept_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the first name and the manager id with a bar chart, and order in ascending by the total number.",
            "You can use a bar chart to show the employees' first name and their manager id as Y, could you display in ascending by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Steven",
                        "y_data": 100
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 103
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 108
                    },
                    {
                        "x_data": "Den",
                        "y_data": 114
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 121
                    },
                    {
                        "x_data": "John",
                        "y_data": 145
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 200
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 201
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 203
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 204
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "what is the average rating of songs for each language?",
            "What is the average rating of songs for each language. Plot them as pie chart.",
            "Return a pie chart on what is the average song rating for each language?",
            "Display a pie chart for what is the average song rating for each language?",
            "What is the average song rating for each language.",
            "Give me a pie to show mean rating from different languages."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "bangla",
                        "y_data": 7.5
                    },
                    {
                        "x_data": "english",
                        "y_data": 7
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(rating)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "languages"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute headquarter in a bar chart, I want to show from low to high by the Price.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute headquarter, order Y from low to high order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute headquarter, and rank y-axis from low to high order please.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute headquarter by a bar chart, and I want to order Y in ascending order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute headquarter, and rank y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners and group by first name in a bar chart, and rank by the how many first name from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Naomi",
                        "y_data": 3
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 2
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 2
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the average age of male students (with sex M) from each city.",
            "What is the average age of male students in each city? Draw a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 19
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19.33333333333333
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 18
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a bar chart.",
            "How many courses each teacher taught? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of manufacturer , and group by attribute founder, order in desc by the total number of manufacturer.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the founder , and group by attribute founder, and I want to sort in descending by the y axis please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, and display by the y-axis from high to low.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of manufacturer , and group by attribute founder in a bar chart, and could you display from high to low by the y-axis?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, and sort by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 12
                    },
                    {
                        "x_data": "James",
                        "y_data": 9
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 6
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "A bar chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, and could you sort how many name from low to high order?",
            "What are the names of the technicians that are assigned to repair machines with more point values than 70, and count them by a bar chart, order Y-axis in ascending order.",
            "Show names of technicians who are assigned to repair machines with value point more than 70, and count them by a bar chart, could you sort by the y axis in ascending?",
            "What are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, order Y in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give the minimum product price for each product type in a bar chart, and list minimal product price from high to low order.",
            "What is the lowest price of product, grouped by product type? Show a bar chart, sort Y-axis from high to low order.",
            "Draw a bar chart of product type code versus minimal product price, sort Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 612.46
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 408.82
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' Visualize by bar chart, could you rank by the total number in asc?",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' by a bar chart, order by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Treasury",
                        "y_data": 115897
                    },
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Num_Employees)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Stacked bar chart of how many away team for with each Home_team in each away team, rank from low to high by the y-axis.",
            "List the number of games for each away team and group by home team in a stacked bar chart The x-axis is away team, could you display from low to high by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 9,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart, and show by the y axis in desc please.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time, and I want to sort the number of hire date in desc order.",
            "For those employees who did not have any job in the past, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart, show by the y axis in desc please.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, and sort by the y axis in descending.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, and display total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 31
                    },
                    {
                        "x_data": "July",
                        "y_data": 29
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 27
                    },
                    {
                        "x_data": "June",
                        "y_data": 12
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the total amount payment as the Y-axis, could you rank by the Y in ascending please?",
            "Sum the amount for all the payments processed with Visa by each year using a bar chart, and rank by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 7343
                    },
                    {
                        "x_data": "2017",
                        "y_data": 787370
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Show different occupations along with the number of players in each occupation with a bar chart.",
            "Show different occupations along with the number of players in each occupation. Show bar chart.",
            "Bar chart x axis occupation y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Design Coordinator",
                        "y_data": 1
                    },
                    {
                        "x_data": "Distribution Centre Associate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Locomotive Engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ministerial Assistant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parliamentarian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Product Consultant - MLCC",
                        "y_data": 1
                    },
                    {
                        "x_data": "Researcher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retired",
                        "y_data": 2
                    },
                    {
                        "x_data": "Self Employed / Consultant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Small Businessman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Student",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Occupation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Projects",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Return the ids and details corresponding to projects for which there are more than two documents in a bar chart, show from high to low by the total number.",
            "Return the ids and details corresponding to projects for which there are more than two documents Show bar chart, and show from high to low by the total number.",
            "What is the project id and detail for the project with at least two documents Plot them as bar chart, and order by the y axis from high to low.",
            "Show me a bar chart for what is the project id and detail for the project with at least two documents?, and order by the y axis from high to low.",
            "A bar chart about what is the project id and detail for the project with at least two documents?, and list y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Human Resource project",
                        "y_data": 134
                    },
                    {
                        "x_data": "Graph Database project",
                        "y_data": 105
                    },
                    {
                        "x_data": "Internet of Things project",
                        "y_data": 35
                    },
                    {
                        "x_data": "Society Research project",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Project_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Project_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, display by the X in asc.",
            "Please show the trend about the number of days with max temperature reaches 80 change over dates, display x axis from low to high order.",
            "For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, and order X-axis from low to high order.",
            "Please show the trend about the number of days with max temperature reaches 80 change over dates, I want to display x-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-08-29",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-08-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-08-31",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-03",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-05",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-09-07",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-09-08",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-09-09",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-10",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-16",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-18",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-19",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-09-23",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-28",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-10-04",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-10-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-10-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-10-07",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-10-15",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-10-16",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-10-17",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-03-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-03-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-04-07",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-04-08",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-04-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-04-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-04-29",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-04-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-05-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-05-25",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-26",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-29",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-08",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-09",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-17",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-18",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-20",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-29",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-07-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-05",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-07-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-07",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-07-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-14",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-07-15",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-07-16",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-07-24",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-07-25",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-07-26",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-07-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-07-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-29",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-07-30",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-07-31",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-06",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-08-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-17",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-22",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-08-27",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-08-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-08-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-08-31",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-09-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-09-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-09-10",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-09-11",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-09-12",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-09-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-09-16",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-09-17",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-09-18",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-09-24",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-10-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-02",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-03",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-08",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-10-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-01-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-02-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-03-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-03-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-03-26",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-04-16",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-04-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-04-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-04-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-05-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-05-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-08",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-06-09",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-11",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-12",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-06-13",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-06-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-25",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-06-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-07-03",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-07-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-15",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-07-16",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-07-17",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-19",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-20",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-07-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-28",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-29",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-07-30",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-08-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-08-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-12",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-08-13",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-08-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-16",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-17",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-26",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-08-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-28",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-08-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-31",
                        "y_data": 4
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Draw a bar chart for how many players played each position?, order names in desc order.",
            "Show the position of players and the corresponding number of players with a bar chart, and order names in desc order.",
            "Show the position of players and the corresponding number of players Visualize by bar chart, could you order in descending by the names please?",
            "Return a bar chart on how many players played each position?, rank Position from high to low order please.",
            "How many players played each position Plot them as bar chart, and order names in desc order.",
            "Give me a bar chart for the total number of each position, and could you order by the x-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Midfielder",
                        "y_data": 6
                    },
                    {
                        "x_data": "Forward",
                        "y_data": 3
                    },
                    {
                        "x_data": "Defender",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "A bar chart about what are the total number of credits offered by each department?, and I want to display bar from low to high order.",
            "Find the total credits of all classes offered by each department Visualize by bar chart, and I want to display in ascending by the names.",
            "What are the total number of credits offered by each department Show bar chart, could you show in ascending by the bar?",
            "Give me a histogram for what are the total number of credits offered by each department?, could you rank by the names from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 15
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.crs_credit)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the average of code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of code , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of code , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 3
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, list x axis in descending order.",
            "Find the names and average salaries of all departments whose average salary is greater than 42000, show by the x axis from high to low.",
            "What are the names and average salaries for departments with average salary higher than 42000 Plot them as bar chart, and display from high to low by the X.",
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and could you order by the X-axis from high to low?",
            "Bar chart of mean salary from each dept name, and rank by the X-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 67795.44166666668
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 61143.05
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 100053.07333333332
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 114576.9
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 79813.02
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 84097.4375
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 57421.85666666668
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 99382.59
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 105311.38
                    },
                    {
                        "x_data": "English",
                        "y_data": 72089.04999999999
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 74162.73999999999
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 96346.5675
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 98133.47
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 61287.25
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 77098.198
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 79070.08
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 48716.5925
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "results",
            "races",
            "drivers"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007-01-01",
                        "y_data": 17
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 18
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 17
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 20
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2014-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 21
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, and I want to list by the y axis from high to low.",
            "Stacked bar chart of the average of shop id for with each Is_full_time in each start from, sort by the y axis in desc.",
            "Find Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, and visualize them by a bar chart, could you sort in desc by the the average of shop id?",
            "Return a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, sort by the y axis in desc.",
            "Give me the comparison about the average of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, show in desc by the total number.",
            "Visualize a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, rank Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 8,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday, and sort Y-axis in desc order please.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, and sort in desc by the y-axis please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart, order in desc by the total number.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, list by the total number in descending.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, display y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 2456
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2440
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2325
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2310
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2295
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2280
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2265
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customer_complaints",
        "nl_queries": [
            "Show me a bar chart for what is the average price of the products for each category?, order by the Y from low to high.",
            "Bar graph to show the average of product price from different product category code, and I want to display by the Y-axis in ascending.",
            "Return the average price of products that have each category code in a bar chart, and list y axis from low to high order.",
            "A bar chart about what is the average price of the products for each category?, and rank from low to high by the y axis.",
            "Return the average price of products that have each category code, and order by the mean product price in asc.",
            "What is the average price of the products for each category, list y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Food",
                        "y_data": 2.88
                    },
                    {
                        "x_data": "Book",
                        "y_data": 35
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 66.67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "Give me a histogram for what is the number of players who have points less than 30 for each position?",
            "what is the number of players who have points less than 30 for each position?",
            "What is the number of players who have points less than 30 for each position. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 3
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of male students (with sex M) from each city in a bar chart, rank Y in asc order.",
            "How many male students are there in each city? Show a bar chart, sort by the Y in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 1
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 2
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of price , and group by attribute name in a bar chart, and sort by the X-axis in descending.",
            "For those records from the products and each product's manufacturer, find name and the sum of price , and group by attribute name, and visualize them by a bar chart, and rank in desc by the bars.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name by a bar chart, sort X-axis from high to low order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of price , and group by attribute name, sort in desc by the x-axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, sort in desc by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 125
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 486
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 450
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Show each county along with the number of schools with a pie chart.",
            "What is the proportion of the number of schools in different counties?",
            "Create a pie chart showing the total number across county."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 1
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 1
                    },
                    {
                        "x_data": "50 Marshall",
                        "y_data": 3
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 2
                    },
                    {
                        "x_data": "75 Starke",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many rooms in each building have a capacity of over 50 Visualize by bar chart, list by the X in ascending.",
            "Display a bar chart for how many rooms in each building have a capacity of over 50?, could you list from low to high by the X?",
            "Find the number of rooms with more than 50 capacity for each building Show bar chart, and could you display by the names from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Garfield",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 2
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the number of areas of all appellations in the bar chart.",
            "Return a bar chart for what is the number of areas for all appellations?",
            "Show me a bar chart about the number of areas for all appellations.",
            "Give me a bar chart for the number of area of each area"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "California",
                        "y_data": 1
                    },
                    {
                        "x_data": "Central Coast",
                        "y_data": 14
                    },
                    {
                        "x_data": "Central Valley",
                        "y_data": 2
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 1
                    },
                    {
                        "x_data": "North Coast",
                        "y_data": 31
                    },
                    {
                        "x_data": "Santa Cruz Mountains",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sierra Foothills",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Area",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Area)"
                }
            }
        }
    },
    {
        "tables_used": [
            "payment",
            "payment",
            "staff"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart",
            "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?",
            "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?",
            "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 16
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 19
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 12
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 16
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy",
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart about how many students are affected by each allergy type?, show by the y axis in asc.",
            "Draw a bar chart for how many students are affected by each allergy type?, and could you list by the y-axis in ascending?",
            "How many students are affected by each allergy type Visualize by bar chart, and I want to order from low to high by the Y.",
            "Show all allergy type with number of students affected with a bar chart, and I want to display in ascending by the total number.",
            "Show all allergy type with number of students affected Visualize by bar chart, rank in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 8
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 23
                    },
                    {
                        "x_data": "food",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, order JOB_ID in descending order.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, show by the X in descending please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, I want to show in descending by the bars.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, and show X-axis from high to low order please.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, and rank X in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a line chart about the change of the amount of Start_from over Start_from bin start_from by time, and display in asc by the X.",
            "Draw a line chart about the change of the amount of Start_from over Start_from bin start_from by time, could you show by the X-axis in ascending?",
            "A line chart shows the trend of the amount of Start_from over Start_from bin start_from by time, and display by the x axis in ascending.",
            "Can you draw the trend of the number of start from over the start from?, show by the X from low to high.",
            "Show me the trend about the amount of Start_from over Start_from bin start_from by time with a line chart, sort from low to high by the x-axis.",
            "Return a line chart about the change of the amount of Start_from over Start_from bin start_from by time, and sort from low to high by the x-axis.",
            "Show me about the change of the amount of Start_from over Start_from bin start_from by time in a line chart, and could you show by the X-axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 1
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart, display y axis in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, show by the the average of manager id from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart, and show by the the average of manager id from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart, rank the average of manager id in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, list from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 130.625
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 129.46666666666667
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 124.66666666666667
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 124.57142857142857
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 122.2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 121.2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 114.1875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Compute the number of each type of job ids for employees who make more than the highest-earning employee with title PU_MAN, with a bar chart, and rank by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 3
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station_company",
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, and order bars in descending order.",
            "Show the company name with the number of gas station by a bar chart, and could you sort in descending by the X?",
            "Show the company name with the number of gas station Show bar chart, and order by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Petrobras",
                        "y_data": 1
                    },
                    {
                        "x_data": "PetroChina",
                        "y_data": 1
                    },
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 2
                    },
                    {
                        "x_data": "BP",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "payment",
            "payment",
            "staff"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a line chart, rank from high to low by the payment_date please.",
            "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and could you display by the X from high to low?",
            "A line chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and show by the payment_date in descending.",
            "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a line chart, rank from high to low by the payment_date please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2005-08-23",
                        "y_data": 5
                    },
                    {
                        "x_data": "2005-08-22",
                        "y_data": 6
                    },
                    {
                        "x_data": "2005-08-21",
                        "y_data": 6
                    },
                    {
                        "x_data": "2005-08-20",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005-08-19",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005-08-18",
                        "y_data": 5
                    },
                    {
                        "x_data": "2005-08-17",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-08-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-08-02",
                        "y_data": 8
                    },
                    {
                        "x_data": "2005-08-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "2005-07-31",
                        "y_data": 8
                    },
                    {
                        "x_data": "2005-07-30",
                        "y_data": 7
                    },
                    {
                        "x_data": "2005-07-29",
                        "y_data": 6
                    },
                    {
                        "x_data": "2005-07-28",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-07-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005-07-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-07-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-07-10",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005-07-09",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-07-08",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-07-07",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-07-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2005-06-21",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-06-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-06-19",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-06-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-06-17",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-06-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-06-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-05-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-05-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-05-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-05-25",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Give me a bar chart to show the name and age for all drivers, list by the Y in ascending.",
            "Bar graph to show age from different name, and display from low to high by the y-axis please.",
            "Show the name and age for all drivers with a bar chart, and display by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dan Carter",
                        "y_data": 30
                    },
                    {
                        "x_data": "Timothy Ackert",
                        "y_data": 35
                    },
                    {
                        "x_data": "Douglas McCrory",
                        "y_data": 36
                    },
                    {
                        "x_data": "Tim Larson",
                        "y_data": 36
                    },
                    {
                        "x_data": "Henry Genga",
                        "y_data": 37
                    },
                    {
                        "x_data": "Jason Rojas",
                        "y_data": 38
                    },
                    {
                        "x_data": "Matthew Ritter",
                        "y_data": 40
                    },
                    {
                        "x_data": "Angel Acre",
                        "y_data": 42
                    },
                    {
                        "x_data": "Brandon McGee",
                        "y_data": 45
                    },
                    {
                        "x_data": "Minnie Gonzalez",
                        "y_data": 46
                    },
                    {
                        "x_data": "Edwin Vargas",
                        "y_data": 52
                    },
                    {
                        "x_data": "Geoff Luxenberg",
                        "y_data": 52
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of professors with a PhD degree in each department Show bar chart, and I want to sort x-axis in desc order.",
            "How many professors have a PhD in each department Show bar chart, display from high to low by the X.",
            "Return a histogram on how many professors have a PhD in each department?, and list in descending by the bar please.",
            "A bar chart about how many professors have a PhD in each department?, display from high to low by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SOC",
                        "y_data": 1
                    },
                    {
                        "x_data": "PSYCH",
                        "y_data": 1
                    },
                    {
                        "x_data": "MKT/MGT",
                        "y_data": 1
                    },
                    {
                        "x_data": "MATH",
                        "y_data": 2
                    },
                    {
                        "x_data": "HIST",
                        "y_data": 1
                    },
                    {
                        "x_data": "ENG",
                        "y_data": 2
                    },
                    {
                        "x_data": "ECON/FIN",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2
                    },
                    {
                        "x_data": "ART",
                        "y_data": 1
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Bar chart of the total number from each year, and I want to order by the bar in ascending.",
            "Return a histogram on how many matches were played in each year?, order in asc by the names please.",
            "How many matches were played in each year, display bar in ascending order.",
            "Show me a bar chart for how many matches were played in each year?, and display x-axis in asc order.",
            "Find the number of matches happened in each year Plot them as bar chart, and show names in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-01-01",
                        "y_data": 12
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 158
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 108
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "List the number of departments for each building with a bar chart.",
            "How many departments for each building? Draw a bar chart.",
            "Bar chart of how many building from each building"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brodhead",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Candlestick",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linderman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Main",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Palmer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rauch",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thompson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wrigley",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of meter_700 and meter_100 in a bar chart, could you sort by the meter_700 in asc?",
            "Find meter_700 and meter_100 , and visualize them by a bar chart, order by the x axis from low to high.",
            "Bar graph to show meter_100 from different meter 700, I want to rank bar from low to high order.",
            "Visualize a bar chart about the distribution of meter_700 and meter_100 , and list from low to high by the x-axis.",
            "A bar chart shows the distribution of meter_700 and meter_100 , list from low to high by the x-axis.",
            "Give me the comparison about meter_100 over the meter_700 , and sort by the X-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6:50.80",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "6:50.91",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "6:52.58",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "6:52.69",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "6:53.34",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "6:55.07",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "6:57.44",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "6:57.69",
                        "y_data": 57.84
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_700",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Draw a bar chart for what is the average account balance of customers with credit score below 50 for the different account types?, and display Y in descending order.",
            "What is the average account balance of customers with credit score below 50 for the different account types Visualize by bar chart, display the average of acc bal from high to low order.",
            "For each account type, find the average account balance of customers with credit score lower than 50 Show bar chart, sort in descending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "saving",
                        "y_data": 2000
                    },
                    {
                        "x_data": "checking",
                        "y_data": 1000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "acc_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(acc_bal)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, sort in descending by the X.",
            "Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and sort in descending by the X.",
            "Give me a bar chart for total number of team id of each acc road, and sort in descending by the X.",
            "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, sort in descending by the X.",
            "Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road, show names in desc order.",
            "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart, show names in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the average of capacity of cinemas open for each year, and order in ascending by the the average of capacity.",
            "Show me the average of capacity by openning year in a histogram, and order in ascending by the the average of capacity."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 305
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 330
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 364
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 368
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 445.3333333333333
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 544.3333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Plot total number of avg(weight) by grouped by year as a bar graph, and order in desc by the y-axis.",
            "Sum the average weight and bin year into weekday interval for a bar chart, sort in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 9051
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 6474
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6234
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5413
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5313
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3176
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2861
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Weight))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "what are the different budget type codes, and how many documents are there for each?, display by the x axis in ascending.",
            "Show me a bar chart for what are the different budget type codes, and how many documents are there for each?, display by the x axis in ascending.",
            "Give me a bar chart for the total number of each budget type code, I want to sort x axis in asc order.",
            "Show budget type codes and the number of documents in each budget type Show bar chart, and sort from low to high by the X.",
            "Show budget type codes and the number of documents in each budget type with a bar chart, list by the x axis in asc please.",
            "What are the different budget type codes, and how many documents are there for each Plot them as bar chart, and display bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GV",
                        "y_data": 6
                    },
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    },
                    {
                        "x_data": "SF",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "movie"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Show all director names who have a movie in the year 1999 or 2000, and count them by a bar chart",
            "Which directors had a movie in either 1999 or 2000, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anthony Hickox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Christian Duguay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Damian Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Swanbeck",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jonathan Lynn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Roger Christian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stephen Kay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Troy Duffy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Director",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Director)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened, display by the total number in descending please.",
            "Show the number of accounts opened in each day Bin the account open day by weekday and group by other account details in a stacked bar chart, I want to show the number of date account opened in descending order.",
            "How many accounts are opened in each day? Bin the account open day by weekday and group by other account details in a stacked bar chart, and could you sort by the Y-axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "VIP"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name does not contain the letter M, display their average salary by binning the hire date into the day of week interval for visualizing a bar chart, and could you list the average of salary in asc order?",
            "Bin the hire date into the day of week interval, and then calculate the average salary of employees in each day for a bar chart, note that just select those employees without the letter M in their first name, and could you list Y in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 5561.538461538462
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5830.7692307692305
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 6400
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6558.333333333333
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6571.428571428572
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6810
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 7746.666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find total capacity of dorms for each gender in a bar chart.",
            "What is the total capacity of dorms for each gender? Give me a bar chart.",
            "Create a bar chart showing sum student capacity across gender"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 128
                    },
                    {
                        "x_data": "M",
                        "y_data": 116
                    },
                    {
                        "x_data": "X",
                        "y_data": 1136
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(student_capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings in each year and bin booking start date by year with a bar chart, could you sort from low to high by the y axis?",
            "How many apartment bookings in each year? Show me a bar chart binning booking start date by year, rank in ascending by the how many booking start date.",
            "Show me the number of booking start date by booking start date in a histogram, and order by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 6
                    },
                    {
                        "x_data": "2016",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the amount of name , and group by attribute name, order from low to high by the y-axis.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, rank in ascending by the Y-axis.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the amount of name , and group by attribute name, and show total number in asc order please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, and rank in ascending by the Y-axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the amount of name , and group by attribute name, and rank in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Bar chart x axis nationality y axis mean meter 100, rank from low to high by the bars.",
            "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and display in asc by the Nationality.",
            "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, and rank from low to high by the bars.",
            "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, display in asc by the x-axis.",
            "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, display in asc by the Nationality.",
            "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, could you show in asc by the bars?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 57
                    },
                    {
                        "x_data": "France",
                        "y_data": 55
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 57
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Group and count the years played to draw a bar chart.",
            "Please give me a bar chart to show the number of players in each years played.",
            "Bar chart of the number of years played from each years played"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "2 (1988, 1990)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2009\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 (2003\u20132004, 2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins arrived date by weekday, and I want to order by the how many date arrived in descending.",
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins arrived date by weekday, and order y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATnT",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apple",
                        "y_data": 1
                    },
                    {
                        "x_data": "Best Buy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinas Device",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ferndale",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gelli repair",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Shop_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Shop_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart, order by the the number of date to in asc.",
            "Plot how many date to by grouped by date to as a bar graph, and list Y from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_to",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show different teams of technicians and the number of technicians in each team in a pie chart.",
            "Show different teams of technicians and the number of technicians in each team. Show a pie chart.",
            "For each team, how many technicians are there. Visualize by pie chart.",
            "I want to know the proportion of the total number for each team."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CHC",
                        "y_data": 1
                    },
                    {
                        "x_data": "CLE",
                        "y_data": 4
                    },
                    {
                        "x_data": "CWS",
                        "y_data": 2
                    },
                    {
                        "x_data": "NYY",
                        "y_data": 2
                    },
                    {
                        "x_data": "PHA",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Bar chart x axis acc road y axis how many acc road, and sort Y in asc order.",
            "Show me about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart, and order Y-axis from low to high order.",
            "Give me the comparison about the amount of ACC_Road over the ACC_Road , and group by attribute ACC_Road, display y-axis in ascending order.",
            "Draw a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and could you order how many acc road in ascending order?",
            "Visualize a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and sort in asc by the how many acc road.",
            "Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, sort Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(ACC_Road)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the trend about Shop_ID over Start_from , order by the Start_from in descending.",
            "A line chart shows the trend of Shop_ID over Start_from , list by the x axis from high to low.",
            "Show me about the change of Shop_ID over Start_from in a line chart, list by the X-axis in descending.",
            "A line chart shows the change of Shop_ID over Start_from, show by the x axis in desc.",
            "Visualize a line chart about the change of Shop_ID over Start_from , and order by the X-axis from high to low.",
            "Can you draw the trend of shop_id over the start from?, and I want to list from high to low by the X-axis please.",
            "Return a line chart about the change of Shop_ID over Start_from , and order by the Start_from in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 8
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Shop_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "store",
            "store_district",
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "How many stores are headquarted in each city Plot them as bar chart, and show in descending by the y axis please.",
            "Return a bar chart on how many stores are headquarted in each city?, display in desc by the the total number .",
            "Find the number of stores in each city Plot them as bar chart, and show in descending by the y axis please.",
            "Draw a bar chart for how many stores are headquarted in each city?, and I want to rank by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Khanewal City",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hafizabad City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bhakkar City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bahawalpur City",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquartered_City",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "how many entrepreneurs correspond to each investor?, and rank Y-axis from high to low order.",
            "Display a bar chart for what are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?, and show in desc by the total number please.",
            "How many entrepreneurs correspond to each investor, I want to order in descending by the Y-axis.",
            "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor, and I want to rank Y from high to low order.",
            "Draw a bar chart of investor versus the total number, I want to rank Y from high to low order.",
            "Return a histogram on how many entrepreneurs correspond to each investor?, show in desc by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duncan Bannatyne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Simon Woodroffe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachel Elnaugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doug Richard",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sections"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Count the section_description, and group by section_description with a bar chart, and rank by the x-axis in ascending.",
            "Show how many section description from each section description, and sort from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ad",
                        "y_data": 1
                    },
                    {
                        "x_data": "doloremque",
                        "y_data": 1
                    },
                    {
                        "x_data": "et",
                        "y_data": 2
                    },
                    {
                        "x_data": "ex",
                        "y_data": 1
                    },
                    {
                        "x_data": "facilis",
                        "y_data": 1
                    },
                    {
                        "x_data": "nesciunt",
                        "y_data": 1
                    },
                    {
                        "x_data": "non",
                        "y_data": 1
                    },
                    {
                        "x_data": "provident",
                        "y_data": 1
                    },
                    {
                        "x_data": "qui",
                        "y_data": 2
                    },
                    {
                        "x_data": "quis",
                        "y_data": 1
                    },
                    {
                        "x_data": "reprehenderit",
                        "y_data": 1
                    },
                    {
                        "x_data": "voluptas",
                        "y_data": 1
                    },
                    {
                        "x_data": "voluptatem",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "section_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(section_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Draw a bar chart about the distribution of other_details and the sum of monthly_rental , and group by attribute other_details.",
            "Find other_details and the sum of monthly_rental , and group by attribute other_details, and visualize them by a bar chart.",
            "Give me the comparison about the sum of monthly_rental over the other_details , and group by attribute other_details.",
            "Return a bar chart about the distribution of other_details and the sum of monthly_rental , and group by attribute other_details.",
            "Visualize a bar chart about the distribution of other_details and the sum of monthly_rental , and group by attribute other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "apartment",
                        "y_data": 7345
                    },
                    {
                        "x_data": "house",
                        "y_data": 11469
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(monthly_rental)"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "How many players played each position Plot them as bar chart, and could you display y axis from high to low order?",
            "Give me a bar chart for the total number of each position, rank from high to low by the Y-axis.",
            "Draw a bar chart for how many players played each position?, rank from high to low by the total number.",
            "Return a bar chart on how many players played each position?, and list y-axis from high to low order please.",
            "Show the position of players and the corresponding number of players with a bar chart, and order by the the total number in desc.",
            "Show the position of players and the corresponding number of players Visualize by bar chart, rank from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Defender",
                        "y_data": 7
                    },
                    {
                        "x_data": "Midfielder",
                        "y_data": 6
                    },
                    {
                        "x_data": "Forward",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the number of rooms with king bed for each decor type. Plot them as pie chart.",
            "Show me the proportion on how many rooms have king beds? Report the number for each decor type.",
            "Draw a pie chart for how many rooms have king beds? Report the number for each decor type.",
            "How many rooms have king beds? Report the number for each decor type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 1
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday.",
            "For those employees who did not have any job in the past, find hire_date and the average of department_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 62
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 64.28571428571429
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 67.33333333333333
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 61.42857142857143
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 63.84615384615385
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 63.57142857142857
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 60.666666666666664
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show each premise type and the number of premises in that type Visualize by bar chart, and I want to rank X-axis from high to low order.",
            "Show each premise type and the number of premises in that type with a bar chart, could you show by the names in descending?",
            "Create a bar chart showing the total number across premises type, could you rank X-axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Warehouse",
                        "y_data": 4
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 4
                    },
                    {
                        "x_data": "Office",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Transcript_Contents",
            "Transcripts"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "A bar chart about what is the date and id of the transcript with at least 2 courses listed?, show by the transcript_date in asc.",
            "Show the date and id of the transcript with at least 2 course results Visualize by bar chart, and order by the bars from low to high.",
            "Show the date and id of the transcript with at least 2 course results in a bar chart, list in asc by the X-axis.",
            "Return a histogram on what is the date and id of the transcript with at least 2 courses listed?, and show by the transcript_date in asc.",
            "What is the date and id of the transcript with at least 2 courses listed Visualize by bar chart, list in asc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1975-05-06",
                        "y_data": 8
                    },
                    {
                        "x_data": "1998-11-22",
                        "y_data": 15
                    },
                    {
                        "x_data": "2010-12-13",
                        "y_data": 6
                    },
                    {
                        "x_data": "2013-06-30",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transcript_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "transcript_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show me a bar chart for how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, I want to order total number in desc order.",
            "Show the booking status code and the corresponding number of bookings Show bar chart, and could you order by the total number in descending?",
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings with a bar chart, and show by the the total number in desc please.",
            "Plot the total number by grouped by booking status code as a bar graph, show total number in descending order.",
            "Return a bar chart on how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, show total number in descending order.",
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings, and order from high to low by the total number please.",
            "Show the booking status code and the corresponding number of bookings in a bar chart, list by the Y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Provisional",
                        "y_data": 8
                    },
                    {
                        "x_data": "Confirmed",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_status_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Transaction_Types",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, order by the x axis in ascending.",
            "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, sort date_of_transaction from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 2,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "2001~2002",
                        "y_data": 1,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1977~1979",
                        "y_data": 2,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "2001~2002",
                        "y_data": 2,
                        "classify": "Sale"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "College"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Show me about the distribution of cName and enr in a bar chart.",
            "Give me the comparison about enr over the cName .",
            "Visualize a bar chart about the distribution of cName and enr .",
            "Return a bar chart about the distribution of cName and enr .",
            "Find cName and enr , and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ASU",
                        "y_data": 12000
                    },
                    {
                        "x_data": "LSU",
                        "y_data": 18000
                    },
                    {
                        "x_data": "FSU",
                        "y_data": 19000
                    },
                    {
                        "x_data": "OU",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "enr"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Show different carriers of phones together with the number of phones with each carrier by a bar chart.",
            "Show different carriers of phones together with the number of phones with each carrier. Plot them as bar chart.",
            "Plot the total number by grouped by carrier as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 2
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a line chart, and show by the X in descending.",
            "A line chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, could you order x axis from high to low order please?",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, and could you order x axis from high to low order please?",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and rank by the X-axis in desc.",
            "A line chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, and could you order x axis from high to low order please?",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a line chart, I want to show by the x axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-11-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-23",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-21",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-09-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-08-02",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order in descending by the total number please.",
            "Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, rank by the total number in descending.",
            "Create a bar chart showing the number of meter 200 across meter 200, and I want to show Y-axis in descending order.",
            "Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and I want to rank from high to low by the the number of meter 200.",
            "Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, I want to show Y-axis in descending order.",
            "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, rank in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:57.26",
                        "y_data": 2
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:54.40",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(meter_200)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show how many delegates in each party with a bar chart, and sort in ascending by the Y-axis.",
            "For each party, use a bar chart to show the number of its delegates, list Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, sort in ascending by the x axis.",
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, rank from low to high by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Black",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sweet",
                        "y_data": 3
                    },
                    {
                        "x_data": "Yellow",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "attribute_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(attribute_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the county name and population of all counties with a pie chart.",
            "Show the county name and population of all counties. Show the proportion.",
            "Return a pie on what are the name and population of each county?",
            "Give the proportion of what are the name and population of each county?",
            "What are the name and population of each county. Visualize by pie chart.",
            "Compute the total population across county name as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Howard",
                        "y_data": 21000
                    },
                    {
                        "x_data": "Baltimore County",
                        "y_data": 90000
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 79000
                    },
                    {
                        "x_data": "Mansfield",
                        "y_data": 87200
                    },
                    {
                        "x_data": "Manning",
                        "y_data": 13300
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Population"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Visualize a line chart that bins the open date into the Year interval and counts them, and could you sort X-axis in descending order?",
            "Please show the trend of the number of the church by open date (bin into the year) using a line chart, and display by the x-axis in descending please.",
            "I want to see trend of the number of open date by open date, display by the Open_Date from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1844",
                        "y_data": 1
                    },
                    {
                        "x_data": "1843",
                        "y_data": 0
                    },
                    {
                        "x_data": "1842",
                        "y_data": 1
                    },
                    {
                        "x_data": "1841",
                        "y_data": 0
                    },
                    {
                        "x_data": "1840",
                        "y_data": 1
                    },
                    {
                        "x_data": "1839",
                        "y_data": 1
                    },
                    {
                        "x_data": "1838",
                        "y_data": 0
                    },
                    {
                        "x_data": "1837",
                        "y_data": 1
                    },
                    {
                        "x_data": "1836",
                        "y_data": 1
                    },
                    {
                        "x_data": "1835",
                        "y_data": 0
                    },
                    {
                        "x_data": "1834",
                        "y_data": 0
                    },
                    {
                        "x_data": "1833",
                        "y_data": 0
                    },
                    {
                        "x_data": "1832",
                        "y_data": 1
                    },
                    {
                        "x_data": "1831",
                        "y_data": 1
                    },
                    {
                        "x_data": "1830",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "how many students are in each department?, and display X from high to low order.",
            "Find the number of students for each department Plot them as bar chart, and display in desc by the names.",
            "Return a histogram on how many students are in each department?, and I want to order by the names from high to low.",
            "How many students are in each department Visualize by bar chart, and display X from high to low order.",
            "Draw a bar chart of dept code versus the total number, rank by the bar in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ENGL",
                        "y_data": 1
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 2
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 1
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "List the types of competition and the number of competitions of each type by a pie chart.",
            "List the types of competition and the number of competitions of each type. Plot them as pie chart.",
            "Return a pie chart on what are the types of competition and number of competitions for that type?",
            "Show me a pie chart for what are the types of competition and number of competitions for that type?",
            "What are the types of competition and number of competitions for that type. Show the proportion.",
            "I want to know the proportion of the total number for each competition type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Friendly",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tournament",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition_type"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "A bar chart showing the number of flights with price higher than 300 for each destination city.",
            "How many flights with price higher than 300 for each destination city? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(destination)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Bin the Year into weekday interval, then group and count by Year.",
            "Give a bar chart that bins year into weekday interval, group by year and count them.",
            "Show me how many year by year in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, I want to show from high to low by the X.",
            "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, list from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Yellow",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sweet",
                        "y_data": 3
                    },
                    {
                        "x_data": "Black",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "attribute_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(attribute_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and could you show in desc by the x axis?",
            "Show all template type codes and number of templates for each Visualize by bar chart, order X-axis in descending order.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?, and list by the Template_Type_Code in descending.",
            "Show me the total number by template type code in a histogram, and list by the Template_Type_Code in descending.",
            "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, and order from high to low by the x-axis please.",
            "Show all template type codes and number of templates for each with a bar chart, order from high to low by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    },
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "AD",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and display in desc by the X please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, display in desc by the X please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, sort bar in descending order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name by a bar chart, I want to show by the X-axis in descending.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, display in desc by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart, rank Y-axis in asc order.",
            "Plot the number of payment method code by grouped by payment method code as a bar graph, show by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 3
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 4
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Payment_Method_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all dates of transactions whose type code is \"SALE\", and count them by a bar chart, I want to order by the Y-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "workshop"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Draw a bar chart that counts the number of venues of each workshop, and rank by the Y-axis in descending.",
            "A bar chart shows the venue for each workshop, sort how many venue in desc order.",
            "Show the number of venue from each venue, sort how many venue in desc order.",
            "Return the number of venues of each workshop in a bar chart, and could you rank y-axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "New York USA",
                        "y_data": 2
                    },
                    {
                        "x_data": "London UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "New Jersey USA",
                        "y_data": 1
                    },
                    {
                        "x_data": "Istanbul Turkey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Movie",
            "Rating"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show me a bar chart for how many movie reviews does each director get?, show in desc by the bar.",
            "For each director, how many reviews have they received Visualize by bar chart, order bar in desc order.",
            "How many movie reviews does each director get Show bar chart, and could you sort in desc by the X-axis?",
            "Return a bar chart on how many movie reviews does each director get?, sort director in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 3
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 5
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 2
                    },
                    {
                        "x_data": "",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "A bar chart for what are the number of the descriptions for the aircrafts?, rank by the Y-axis in desc please.",
            "What are the number of the descriptions for the aircrafts?, and rank by the Y-axis in desc please.",
            "A bar chart for listing the number of the description of all aircrafts, list y-axis in descending order.",
            "List the number of the description of all aircrafts, and rank by the Y-axis in desc please.",
            "What are the descriptions for the aircrafts, and count them by a bar chart, and order by the total number in descending please.",
            "List the description of all aircrafts, and count them by a bar chart, list y-axis in descending order.",
            "Draw a bar chart of description versus the number of description, rank by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Heavy-lift helicopter",
                        "y_data": 2
                    },
                    {
                        "x_data": "Turboshaft utility helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tandem rotor helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Light utility helicopter",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart.",
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200.",
            "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart.",
            "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart.",
            "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200.",
            "Create a bar chart showing total number of meter 100 across meter 200"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 55
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 114
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games in each season and group by home team in a group line chart The x-axis is season, show Season in asc order.",
            "Show the number of games in each season and group by home team in a group line chart The x-axis is season, I want to show in ascending by the x-axis.",
            "The trend about the the number of season of different Home_team over the season, and I want to show in ascending by the x-axis.",
            "The trend about the the number of season of different Home_team over the season, display by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 5,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 4,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 8,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 5,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 10,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 10,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A bar chart shows the distribution of Start_from and the average of Shop_ID bin start_from by weekday, and I want to order by the total number in descending.",
            "Draw a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, and could you display in desc by the Y?",
            "Give me the comparison about the average of Shop_ID over the Start_from bin start_from by weekday by a bar chart, and I want to sort y-axis in descending order.",
            "Bar chart x axis start from y axis the average of shop id, and could you display in desc by the Y?",
            "Visualize a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, and rank by the Y-axis in descending please.",
            "Return a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, could you display in desc by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5.5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Return a histogram on what are the different names and credit scores of customers who have taken a loan?, and display in descending by the bars.",
            "Give me a histogram for what are the different names and credit scores of customers who have taken a loan?, and sort in descending by the cust_name.",
            "Please compare the credit score of the customers who have some loans by a bar chart, and could you sort x axis in descending order please?",
            "Find the name and credit score of the customers who have some loans, sort in descending by the cust_name.",
            "Show a bar chart to show different names and credit scores of customers who have taken a loan, and I want to display cust_name in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Owen",
                        "y_data": 210
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cust_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "credit_score"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the average age of male students (with sex M) from each city, and rank Y from low to high order.",
            "What is the average age of male students in each city? Draw a bar chart, and sort from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 18
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 19
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19.33333333333333
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, display from low to high by the y axis please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, order by the total number from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday, rank in asc by the total number please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart, display by the y axis from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart, and could you rank in asc by the total number?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 890
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 910
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 910
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 930
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 980
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1040
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Bar graph to show the number of name from different name, display in descending by the y axis.",
            "Can you show me a bar chart to answer how many people with different names for each high schooler?, and I want to rank how many name from high to low order please.",
            "Count the names of each high schooler using a bar chart, order in desc by the how many name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jordan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 1
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the relationship between average and maximum capacity among rooms in each building with a scatter chart.",
            "What is the relationship between average and greatest capacity for rooms in each building? Show me a scatter chart.",
            "Plot a scatter chart, max(capacity) by mean capacity."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 47,
                        "y_data": 36.5
                    },
                    {
                        "x_data": 12,
                        "y_data": 12
                    },
                    {
                        "x_data": 11,
                        "y_data": 10.5
                    },
                    {
                        "x_data": 18,
                        "y_data": 18
                    },
                    {
                        "x_data": 27,
                        "y_data": 27
                    },
                    {
                        "x_data": 59,
                        "y_data": 59
                    },
                    {
                        "x_data": 65,
                        "y_data": 37.5
                    },
                    {
                        "x_data": 34,
                        "y_data": 34
                    },
                    {
                        "x_data": 51,
                        "y_data": 51
                    },
                    {
                        "x_data": 10,
                        "y_data": 10
                    },
                    {
                        "x_data": 30,
                        "y_data": 26
                    },
                    {
                        "x_data": 92,
                        "y_data": 92
                    },
                    {
                        "x_data": 97,
                        "y_data": 97
                    },
                    {
                        "x_data": 28,
                        "y_data": 28
                    },
                    {
                        "x_data": 12,
                        "y_data": 11
                    },
                    {
                        "x_data": 60,
                        "y_data": 60
                    },
                    {
                        "x_data": 109,
                        "y_data": 49.33333333333334
                    },
                    {
                        "x_data": 113,
                        "y_data": 113
                    },
                    {
                        "x_data": 115,
                        "y_data": 93
                    },
                    {
                        "x_data": 120,
                        "y_data": 76
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(capacity)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "Return a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "What is the relationship between Team_ID and All_Games_Percent , and group by attribute ACC_Regular_Season?",
            "A scatter chart shows the correlation between Team_ID and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "Visualize a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by ACC_Regular_Season"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 0.706,
                        "classify": "10\u20136"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "13\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.6,
                        "classify": "9\u20137"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "For each bed type, find the average room price Show bar chart, and show in desc by the total number.",
            "Return a bar chart on what is the average base price of rooms, for each bed type?, and sort from high to low by the mean baseprice.",
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price, I want to display in desc by the Y-axis please.",
            "For each bed type, find the average base price of different bed type Show bar chart, and show by the Y from high to low.",
            "What is the average base price of different bed type? List bed type and average base price Plot them as bar chart, and show in desc by the total number.",
            "what is the average base price of different bed type? List bed type and average base price, and I want to display in desc by the Y-axis please.",
            "Show me the average of baseprice by bedtype in a histogram, show y axis in descending order.",
            "Draw a bar chart for what is the average base price of rooms, for each bed type?, and list mean baseprice in descending order.",
            "What is the average base price of rooms, for each bed type Plot them as bar chart, sort by the total number in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 181.25
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 150
                    },
                    {
                        "x_data": "Double",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the sum of price supplied by supplier id 3 for different product type code in a bar chart, sort in asc by the total number of product price."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 1634
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me about the correlation between People_ID and Weight in a scatter chart.",
            "Visualize a scatter chart about the correlation between People_ID and Weight .",
            "Return a scatter chart about the correlation between People_ID and Weight .",
            "What is the relationship between People_ID and Weight ?",
            "Visualize the relationship between People_ID and Weight .",
            "Show me a scatter plot of people id and weight for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 83
                    },
                    {
                        "x_data": 2,
                        "y_data": 85
                    },
                    {
                        "x_data": 3,
                        "y_data": 94
                    },
                    {
                        "x_data": 4,
                        "y_data": 92
                    },
                    {
                        "x_data": 5,
                        "y_data": 90
                    },
                    {
                        "x_data": 6,
                        "y_data": 88
                    },
                    {
                        "x_data": 7,
                        "y_data": 89
                    },
                    {
                        "x_data": 8,
                        "y_data": 88
                    },
                    {
                        "x_data": 9,
                        "y_data": 82
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "People_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, visualize a bar chart to show each employee's salary by the last name, and display from low to high by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fripp",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Kaufling",
                        "y_data": 7900
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 7400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the first name and the manager id with a bar chart, and list by the bar in asc please.",
            "You can use a bar chart to show the employees' first name and their manager id as Y, and I want to list by the X-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 121
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 103
                    },
                    {
                        "x_data": "Den",
                        "y_data": 114
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 204
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 200
                    },
                    {
                        "x_data": "John",
                        "y_data": 145
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 201
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 108
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 205
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 100
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 203
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games in each season and group by home team in a group line chart The x-axis is season, list by the Season from high to low.",
            "The trend about the the number of season of different Home_team over the season, order from high to low by the x-axis please.",
            "Show the number of games in each season and group by home team in a group line chart The x-axis is season, and display in desc by the X.",
            "The trend about the the number of season of different Home_team over the season, and rank from high to low by the Season."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 8,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 4,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 5,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 10,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 5,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 10,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Find the total revenue of companies of each founder. Visualize by bar chart.",
            "Display a bar chart for what is the total revenue of companies started by founder?",
            "What is the total revenue of companies started by founder. Plot them as bar chart.",
            "Draw a bar chart of founder versus sum revenue"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners in a stacked bar chart. The x-axis is first name and group by skill description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 2,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 0,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of price , and group by attribute name, and rank by the X from high to low.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of price , and group by attribute name, show by the x axis in descending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, show by the Name in desc.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of price , and group by attribute name in a bar chart, and could you display from high to low by the Name?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the name , and group by attribute name by a bar chart, and could you show by the X-axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 165
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, show from low to high by the X.",
            "Draw a bar chart of gender versus the number of gender, I want to list X from low to high order.",
            "Compare the distribution of the players' gender using a bar chart, and could you display in ascending by the x axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 5
                    },
                    {
                        "x_data": "M",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Gender",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Gender)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Show how many shops in each carrier with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell Mobility",
                        "y_data": 3
                    },
                    {
                        "x_data": "Vodafone AU",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Carrier)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a pie chart about the proportion of Is_full_time and the sum of Shop_ID.",
            "A pie chart shows the proportion of Is_full_time and the sum of Shop_ID.",
            "Return a pie chart about the proportion of Is_full_time and the sum of Shop_ID.",
            "Give me a pie chart to reflect the proportion of Is_full_time and the sum of Shop_ID.",
            "For the attribute Is_full_time and the sum of Shop_ID, show their proportion by a pie chart.",
            "Compute the total total number of shop id across is full time as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 10
                    },
                    {
                        "x_data": "T",
                        "y_data": 17
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time"
                }
            }
        }
    },
    {
        "tables_used": [
            "catalogs",
            "catalog_structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level number greater than 5 Bin publication dates into Year interval, and count catalog and group by catalog name, and display Y in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "Coffee Bean"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1,
                        "classify": "Coffee Bean"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "Jam"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2,
                        "classify": "Jam"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_publication",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_publication)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts opened in each day Bin the account open day by weekday in a bar chart, and could you display Y-axis in descending order?",
            "How many accounts are opened in each day? Bin the account open day by weekday in a bar chart, I want to rank by the y axis in desc.",
            "Show the number of date account opened from each date account opened, and I want to rank by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "elimination"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "Show different teams in eliminations and the number of eliminations from each team by a bar chart, order by the total number from low to high.",
            "How many eliminations did each team have Visualize by bar chart, and rank by the y-axis in ascending.",
            "Bar graph to show the total number from different team, and could you show in ascending by the y-axis please?",
            "A bar chart about how many eliminations did each team have?, and could you show in ascending by the y-axis please?",
            "Return a bar chart on how many eliminations did each team have?, and rank by the y-axis in ascending.",
            "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and rank from low to high by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Team Orton",
                        "y_data": 2
                    },
                    {
                        "x_data": "Team Batista",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "Show the number of different competition types with a bar graph.",
            "What is the number of types of competition?",
            "A bar chart showing the number of different competition types.",
            "Give me a bar chart for how many competition type of each competition type"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Friendly",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tournament",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Competition_type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "List all directors along with the number of films directed by each director in a bar chart, and rank Y-axis from low to high order.",
            "List all directors along with the number of films directed by each director Plot them as bar chart, I want to show total number in ascending order.",
            "Plot the total number by grouped by directed by as a bar graph, I want to show total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jesus Salvador Trevi\u00f1o",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bill Schreiner",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Directed_by",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder, display by the bar in ascending.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder by a bar chart, show names in ascending order please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, rank by the bars in asc.",
            "For those records from the products and each product's manufacturer, find founder and the average of manufacturer , and group by attribute founder, and visualize them by a bar chart, and order by the X-axis from low to high.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, and I want to rank X-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 3
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Compare the lowest rating among all movies by each director using a bar chart, list by the director from low to high.",
            "Show the director and their lowest rating among all movies in a bar chart, list by the director from low to high.",
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, sort in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Return a bar chart showing the number of documents for each document type description, I want to display x axis in desc order.",
            "How many documents for each document type description? Visualize by a bar chart, and rank by the Document_Type_Description from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "good",
                        "y_data": 5
                    },
                    {
                        "x_data": "fun",
                        "y_data": 1
                    },
                    {
                        "x_data": "excellent",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Return the number of music festivals of each category in a bar chart, and sort X in ascending order.",
            "Return the number of music festivals of each category, I want to rank by the x-axis in asc.",
            "Show me the total number by category in a histogram, and order in asc by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Best Lyrics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Best Song",
                        "y_data": 5
                    },
                    {
                        "x_data": "Best Sound Song",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "accelerator_compatible_browser",
            "browser",
            "web_client_accelerator"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "A bar chart showing the number of accelerators for each browser in the descending order of compatible year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Firefox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Internet Explorer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Opera",
                        "y_data": 2
                    },
                    {
                        "x_data": "Safari",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "news_report",
            "event",
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show the names of journalists and the number of events they reported in a bar chart, and I want to sort y-axis from high to low order.",
            "Show the names of journalists and the number of events they reported Visualize by bar chart, could you show by the Y in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jackie Waring",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tony Waddington",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Briggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ray Ferris",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Meaney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Herbert Swindells",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "race"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Show the race class and number of races in each class in a pie chart.",
            "Show the race class and number of races in each class.",
            "Display a pie chart for what are the different classes of races, and how many races correspond to each?",
            "Visualize a pie chart with what are the different classes of races, and how many races correspond to each?",
            "What are the different classes of races, and how many races correspond to each. Show the proportion.",
            "Compute the total the total number across class as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DP/GT",
                        "y_data": 5
                    },
                    {
                        "x_data": "GT",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class"
                }
            }
        }
    },
    {
        "tables_used": [
            "nomination",
            "artwork",
            "festival_detail"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            "Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, rank in descending by the y axis.",
            "Show the ids and names of festivals that have at least two nominations for artworks Plot them as bar chart, and show in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "LA Awards",
                        "y_data": 5
                    },
                    {
                        "x_data": "Flower Awards",
                        "y_data": 2
                    },
                    {
                        "x_data": "Panasonic Awards",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Festival_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Festival_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, and rank by the names from low to high.",
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, show X-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Main_Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Stack bar chart of the number of headquarters vs Industry based on headquarters, display Y-axis in desc order please.",
            "How many companies are there in each headquarters? Return a stacked bar chart to group by industry and headquearters, and count by headquarters, and could you show in desc by the how many headquarters?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "China",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "France",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "USA",
                        "y_data": 3,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "China",
                        "y_data": 3,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 1,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "France",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "USA",
                        "y_data": 2,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "China",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "France",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "USA",
                        "y_data": 2,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "China",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "France",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "USA",
                        "y_data": 1,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "China",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "France",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Retailing"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Compare the number of items in each color scheme using a bar chart.",
            "Please draw a bar chart to show the total number of different color.",
            "Bar chart x axis color y axis the number of color"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Black/White",
                        "y_data": 2
                    },
                    {
                        "x_data": "RBG",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "color",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(color)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the average of price , and group by attribute founder, display by the X-axis from low to high please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the founder , and group by attribute founder by a bar chart, order X-axis in ascending order.",
            "For those records from the products and each product's manufacturer, find founder and the average of price , and group by attribute founder, and visualize them by a bar chart, and could you rank by the Founder in asc?",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of price , and group by attribute founder in a bar chart, display by the X-axis from low to high please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of price , and group by attribute founder, order by the x axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 240
                    },
                    {
                        "x_data": "James",
                        "y_data": 162
                    },
                    {
                        "x_data": "John",
                        "y_data": 240
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 150
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 150
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 62.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "broadcast"
        ],
        "db_id": "program_share",
        "nl_queries": [
            "Plot the total number by grouped by time of day as a bar graph, rank in ascending by the total number.",
            "Count the number of programs broadcast for each time section of a day Show bar chart, order Y-axis in ascending order.",
            "Count the number of programs broadcast for each time section of a day in a bar chart, order y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Noon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Morning",
                        "y_data": 4
                    },
                    {
                        "x_data": "Night",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time_of_day",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "affiliated_with",
            "department"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "What are the name and primarily affiliated department name of each physician?, and I want to display in ascending by the x-axis please.",
            "Give me a bar chart showing how many physicians for each department name they primarily affiliated in, and list by the Name in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "General Medicine",
                        "y_data": 5
                    },
                    {
                        "x_data": "Psychiatry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Surgery",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For those employees who did not have any job in the past, find hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 123
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 120.28571428571429
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 115.13333333333334
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 135
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 128.3846153846154
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 122.71428571428571
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 129.46666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show average of budget in different year and group by department creation time with a line chart, and order by the X-axis in descending.",
            "Show average of budget in different year and group by department creation time with a line chart, and I want to sort in desc by the Creation.",
            "Plot the average of budget in billions over creation in a line chart, and order by the Creation in descending.",
            "Plot the average of budget in billions over creation in a line chart, I want to sort in desc by the Creation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2002-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 73
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 62
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 21
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 58
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 46
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 543
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 439
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 59
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 77
                    },
                    {
                        "x_data": "1870-01-01",
                        "y_data": 23
                    },
                    {
                        "x_data": "1849-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "1789-01-01",
                        "y_data": 10
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, order by the bars from high to low please.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, list in descending by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rolando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachelle",
                        "y_data": 3
                    },
                    {
                        "x_data": "Orlando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nora",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorenz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Johann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Emelie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cindy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "screen_mode",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, list by the Company_name in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show the names and total passengers for all train stations not in London Visualize by bar chart, and show by the X-axis from high to low.",
            "Show the names and total passengers for all train stations not in London with a bar chart, rank in descending by the Name please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Glasgow Central",
                        "y_data": 29.658
                    },
                    {
                        "x_data": "Birmingham New Street",
                        "y_data": 36.330999999999996
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Total_Passengers"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of faults for different fault short name and skills required to fix them. The x-axis is falut short name and group by skill description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MW",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 3,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 2,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 2,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 4,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 2,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 1,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_short_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_short_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road.",
            "Find ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart.",
            "A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road.",
            "Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart.",
            "Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart.",
            "Bar chart x axis acc road y axis the average of school id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses provided in each year with a group line chart that groups by semester, list year in asc order.",
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester, display in ascending by the X-axis.",
            "I want to see trend sum count(*) over year by semester, list from low to high by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 9,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 3,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 4,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 8,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 7,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 5,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2001",
                        "y_data": 3,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 5,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 9,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6,
                        "classify": "Spring"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer",
            "record"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find the names of swimmers who has a result of \"win\", and count them by a bar chart, could you list by the total number in ascending?",
            "A bar chart for finding the number of the names of swimmers who has a result of \"win\", and rank by the Y-axis in ascending.",
            "Find the number of the names of swimmers who has a result of \"win\", rank by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 2
                    },
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For those dates that have the 5 highest cloud cover rates, please bin the date into day of the week interval and compute their average cloud cover, and display y-axis in ascending order.",
            "Show the average of cloud cover from each date, and I want to rank by the y-axis in asc.",
            "I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day, list Y-axis in ascending order please.",
            "What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, rank by the mean cloud cover in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 8
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 8
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins arrived date by weekday.",
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins arrived date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "List document type codes and the number of documents in each code with a bar chart.",
            "List document type codes and the number of documents in each code. Visualize by bar chart.",
            "Give me a histogram for how many documents are there of each type?",
            "Return a bar chart on how many documents are there of each type?",
            "How many documents are there of each type. Show bar chart.",
            "Show the total number from each document type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 3
                    },
                    {
                        "x_data": "FM",
                        "y_data": 1
                    },
                    {
                        "x_data": "PP",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of All_Games and ACC_Percent , and rank by the Y in descending.",
            "Show me about the distribution of All_Games and ACC_Percent in a bar chart, and could you show by the total number from high to low?",
            "Return a bar chart about the distribution of All_Games and ACC_Percent , and list Y-axis from high to low order please.",
            "Bar chart x axis all games y axis acc_percent, I want to order from high to low by the Y-axis.",
            "A bar chart shows the distribution of All_Games and ACC_Percent , rank by the total number in descending.",
            "Find All_Games and ACC_Percent , and visualize them by a bar chart, and display Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, rank by the id in asc.",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, could you display Y-axis in ascending order?",
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?, sort total number in ascending order please.",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes, and list in asc by the Y-axis.",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes, list y-axis in asc order.",
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?, and could you order in ascending by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abilify",
                        "y_data": 2
                    },
                    {
                        "x_data": "Saphris",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Trade_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the average share count of transactions for different investors with a scatter chart.",
            "Show the average share count of transactions for different investors. Plot them as scatter chart.",
            "Show me a scatter plot of investor id and mean share count for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 831668
                    },
                    {
                        "x_data": 3,
                        "y_data": 225053304.3333333
                    },
                    {
                        "x_data": 6,
                        "y_data": 8718572
                    },
                    {
                        "x_data": 7,
                        "y_data": 1522
                    },
                    {
                        "x_data": 8,
                        "y_data": 930
                    },
                    {
                        "x_data": 14,
                        "y_data": 8040
                    },
                    {
                        "x_data": 17,
                        "y_data": 96178
                    },
                    {
                        "x_data": 18,
                        "y_data": 298
                    },
                    {
                        "x_data": 19,
                        "y_data": 47971
                    },
                    {
                        "x_data": 20,
                        "y_data": 0
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "investor_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Games and All_Games_Percent , list in asc by the All_Games_Percent.",
            "Plot all_games_percent by grouped by all games as a bar graph, and rank by the total number in asc.",
            "Visualize a bar chart about the distribution of All_Games and All_Games_Percent , display Y-axis in ascending order.",
            "Give me the comparison about All_Games_Percent over the All_Games by a bar chart, and display Y-axis in ascending order.",
            "Give me the comparison about All_Games_Percent over the All_Games , and show in asc by the Y-axis.",
            "Return a bar chart about the distribution of All_Games and All_Games_Percent , display Y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "21\u201314",
                        "y_data": 0.6
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "35\u20132",
                        "y_data": 0.946
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?, and list from low to high by the y axis please.",
            "What are the draft pick numbers and draft classes for players who play the Defender position Show bar chart, and could you order by the Y-axis in ascending?",
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, could you order by the Y-axis in ascending?",
            "what are the draft pick numbers and draft classes for players who play the Defender position?, could you sort by the y-axis in asc?",
            "Show the draft pick numbers and draft classes of players whose positions are defenders Show bar chart, list from low to high by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009 MLS SuperDraft",
                        "y_data": 3
                    },
                    {
                        "x_data": "2000 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "2008 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "1999 MLS College Draft",
                        "y_data": 5
                    },
                    {
                        "x_data": "2005 MLS SuperDraft",
                        "y_data": 9
                    },
                    {
                        "x_data": "2006 MLS SuperDraft",
                        "y_data": 37
                    },
                    {
                        "x_data": "1996 MLS Inaugural Player Draft",
                        "y_data": 87
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Draft_Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Draft_Pick_Number"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Show all ministers who do not belong to Progress Party, and count them by a bar chart, and order in asc by the Y.",
            "Which ministers are not a part of the Progress Party, and count them by a bar chart, order in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_contact_channels"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by weekday in a stacked bar chart, sort in descending by the y-axis please.",
            "How many customers using email as the contact channel? Group by customer name and bin active date by weekday in a stacked bar chart, show from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "active_from_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(active_from_date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show all statement id and the number of accounts for each statement in a scatter chart",
            "Show all statement id and the number of accounts for each statement. Show scatter chart.",
            "what are the different statement ids on accounts, and the number of accounts for each?",
            "Scatter. what are the different statement ids on accounts, and the number of accounts for each?",
            "What are the different statement ids on accounts, and the number of accounts for each. Visualize by scatter chart.",
            "Scatter plot to show statement id on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 57,
                        "y_data": 9
                    },
                    {
                        "x_data": 192,
                        "y_data": 6
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Statement_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "How many competitions for each country?, and list by the total number in asc.",
            "Compare the total number of competitions for each country, and sort by the Y in asc.",
            "Show me the number of country by country in a histogram, and rank by the y axis in ascending.",
            "A bar chart for how many competitions for each country, and I want to list y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 2
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, order total number in ascending order.",
            "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, and order total number in ascending order.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, rank in asc by the y axis.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home, rank in asc by the y axis.",
            "Stack bar chart of team_id vs ACC_Home based on all home, and could you display Y in asc order please?",
            "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, order total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 4,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 3,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the number of each allergie type in a bar chart, list in descending by the how many allergytype.",
            "Create a bar chart showing how many allergytype across allergytype, and list in descending by the how many allergytype.",
            "What is the number of each allergie type? Return a bar chart, and list in descending by the how many allergytype."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "food",
                        "y_data": 7
                    },
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "poker_player",
        "nl_queries": [
            "what are different nationalities of people and the corresponding number of people from each nation?",
            "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?",
            "What are different nationalities of people and the corresponding number of people from each nation. Visualize by bar chart.",
            "Draw a bar chart for how many people are there of each nationality?",
            "Visualize a bar chart for how many people are there of each nationality?",
            "How many people are there of each nationality. Visualize by bar chart.",
            "Draw a bar chart of nationality versus the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bulgaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, visualize the relationship between price and manufacturer .",
            "For those products with a price between 60 and 120, return a scatter chart about the correlation between price and manufacturer .",
            "For those products with a price between 60 and 120, what is the relationship between price and manufacturer ?",
            "For those products with a price between 60 and 120, draw a scatter chart about the correlation between price and manufacturer .",
            "For those products with a price between 60 and 120, show me about the correlation between price and manufacturer in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 120,
                        "y_data": 6
                    },
                    {
                        "x_data": 90,
                        "y_data": 2
                    },
                    {
                        "x_data": 66,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_player",
        "nl_queries": [
            "Create a bar chart showing the total number across denomination, and rank by the Denomination in asc.",
            "For each denomination, return the denomination and the count of schools with that denomination Visualize by bar chart, and could you list Denomination in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anglican",
                        "y_data": 3
                    },
                    {
                        "x_data": "Catholic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Uniting Church",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Denomination",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Plot the total number by grouped by how to get there as a bar graph, and show from low to high by the total number.",
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way in a bar chart, and could you order y axis from low to high order?",
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way Plot them as bar chart, and could you list the total number in asc order?",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods Visualize by bar chart, and could you order y axis from low to high order?",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods in a bar chart, could you order y axis from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "shuttle",
                        "y_data": 4
                    },
                    {
                        "x_data": "walk",
                        "y_data": 5
                    },
                    {
                        "x_data": "bus",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "How_to_Get_There",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different ending date and group by ending date with a line chart.",
            "How many documents in different ending date? Return a line chart grouping by ending date.",
            "Can you draw the trend of how many date in locaton to over the date in locaton to?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1976-06-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 2
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 2
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the average age for all female students and group them by last name with a bar chart, and could you order the average of age in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Schmidt",
                        "y_data": 26
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 21
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 21
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 20
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 19
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 19
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 18
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 18
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer",
            "record",
            "event",
            "stadium"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find the number of the names of stadiums that some Australian swimmers have been to.",
            "Find the names of stadiums that some Australian swimmers have been to, and count them by a pie chart",
            "A pie chart for finding the number of the names of stadiums that some Australian swimmers have been to."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baku Olympic Stadium",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gazprom Arena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nou Mestalla",
                        "y_data": 2
                    },
                    {
                        "x_data": "Yubileyniy Stadium",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the hire_date bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 9175
                    },
                    {
                        "x_data": "July",
                        "y_data": 3993.3333333333335
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 8469.23076923077
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 4491.666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart, display by the y-axis in descending.",
            "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and list the number of nominee in desc order.",
            "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart, and could you list from high to low by the total number?",
            "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and I want to show from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nominee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the relationship between maximum and average gpa of all students in each department with a scatter chart.",
            "What is the relationship between highest and average student GPA for every department? Give me a scatter chart.",
            "Scatter plot to show max(stu gpa) on x axis and mean stu gpa on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3.15,
                        "y_data": 2.776666666666667
                    },
                    {
                        "x_data": 2.84,
                        "y_data": 2.84
                    },
                    {
                        "x_data": 3.27,
                        "y_data": 3.18
                    },
                    {
                        "x_data": 3.87,
                        "y_data": 3.87
                    },
                    {
                        "x_data": 2.11,
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A bar chart about the number of end dates for incidents with incident type code \"NOISE\" and bin by month, could you sort by the y-axis from low to high please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_end",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_end)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, I want to show the average of code in descending order.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart, and list in desc by the Y.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter by a bar chart, and show by the Y-axis in desc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and order Y in descending order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, list in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different ending date and group by ending date with a line chart, and display in desc by the X.",
            "Can you draw the trend of how many date in locaton to over the date in locaton to?, and I want to sort x-axis in descending order please.",
            "How many documents in different ending date? Return a line chart grouping by ending date, and display in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-01-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 3
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 2
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 2
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Give me a histogram for what are the names of the singers and number of concerts for each person?, and list by the Name in descending please.",
            "A bar chart about what are the names of the singers and number of concerts for each person?, and show names in desc order.",
            "What are the names of the singers and number of concerts for each person Show bar chart, and I want to show bar in desc order.",
            "List singer names and number of concerts for each singer with a bar chart, and I want to sort by the Name in desc.",
            "List singer names and number of concerts for each singer, and could you sort in descending by the X-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tribal King",
                        "y_data": 2
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    },
                    {
                        "x_data": "Justin Brown",
                        "y_data": 3
                    },
                    {
                        "x_data": "John Nizinik",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses with more than one prerequisite for each title? Return a bar chart, sort Y-axis from high to low order.",
            "Find the number of courses that have more than one prerequisites for each title with a bar chart, could you display Y-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "International Practicum",
                        "y_data": 2
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 2
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 1
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 1
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 1
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "teaches",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "List the number of courses in year 2008 for each instructor in a bar chart, display y axis in ascending order.",
            "Show how many courses in 2008 for every instructor with a bar chart, show Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bietzk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaekel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mahmoud",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ullman ",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAgostino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dale",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mingoz",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and department_id , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and department_id in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 20
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 20
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 40
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 70
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 110
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "What is the number of platforms for each location? Show the comparison with a bar chart.",
            "Give me a bar chart about the number of platforms in different locations",
            "Create a bar chart showing total number of number of platforms across location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "London",
                        "y_data": 140
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Number_of_Platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "medication",
            "prescribes"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Find the number of medications prescribed for each brand Plot them as bar chart, order from low to high by the X-axis please.",
            "How many medications are prescribed for each brand Visualize by bar chart, list from low to high by the bars.",
            "Draw a bar chart for how many medications are prescribed for each brand?, order from low to high by the X-axis please.",
            "Display a bar chart for how many medications are prescribed for each brand?, display from low to high by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Procrastin-X",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thesisin",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and show by the total number in asc.",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart, and I want to display in asc by the Y.",
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, and could you sort by the the number of date of enrolment in ascending?",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart, and rank y-axis in asc order.",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, could you sort Y-axis in asc order?",
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, could you sort by the the number of date of enrolment in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Bar chart x axis industry y axis the number of industry, order by the Industry from high to low.",
            "Return a bar chart about the number of companies for each industry, list from high to low by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Retailing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 8
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 7
                    },
                    {
                        "x_data": "Automotive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Industry",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Draw a bar chart for what is the average base price of rooms, for each bed type?, sort by the total number in ascending.",
            "For each bed type, find the average base price of different bed type Show bar chart, display in asc by the y axis.",
            "What is the average base price of different bed type? List bed type and average base price Plot them as bar chart, display Y from low to high order.",
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price, and show in asc by the Y-axis.",
            "Return a bar chart on what is the average base price of rooms, for each bed type?, and display Y from low to high order.",
            "what is the average base price of different bed type? List bed type and average base price, could you list in asc by the Y?",
            "Show me the average of baseprice by bedtype in a histogram, and order in asc by the Y-axis.",
            "For each bed type, find the average room price Show bar chart, could you list by the Y-axis from low to high?",
            "What is the average base price of rooms, for each bed type Plot them as bar chart, and display total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Double",
                        "y_data": 100
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 150
                    },
                    {
                        "x_data": "King",
                        "y_data": 181.25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Create a bar chart showing how many location across location, and I want to display X from high to low order.",
            "Return a bar chart showing how many shops in each location, I want to display X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wattstown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Porth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Penygraig",
                        "y_data": 2
                    },
                    {
                        "x_data": "Pentre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maerdy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gelli",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinas",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cymmer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Blaenllecha",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Draw a bar chart for how many sections does each course have?, show in asc by the y axis.",
            "how many sections does each course has?, list by the the total number from low to high.",
            "Give me a histogram for how many sections does each course have?, list in asc by the the total number .",
            "How many sections does each course have Visualize by bar chart, and list by the the total number from low to high.",
            "Bar chart x axis crs code y axis the total number, order in ascending by the the total number .",
            "Visualize a bar chart for how many sections does each course has?, and order in ascending by the the total number .",
            "How many sections does each course has Visualize by bar chart, and I want to order by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    },
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    },
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners and group by last name in a bar chart, and order bar in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Streich",
                        "y_data": 2
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Price",
                        "y_data": 3
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 1
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 2
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show the number of faculty for each rank in a bar chart.",
            "How many faculty members do we have for each rank? Show bar chart.",
            "Bar chart of sum count(*) from each rank"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "How many templates with version number later than 5 for each template type code? Give me a pie chart.",
            "Return a pie chart showing the number of templates with a version number greater than 5 for each template type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 2
                    },
                    {
                        "x_data": "CV",
                        "y_data": 1
                    },
                    {
                        "x_data": "PP",
                        "y_data": 2
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Template_Type_Code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Compare the number of items in the type of each thing using a bar chart, and sort by the names in descending.",
            "Show the number of type of thing code from each type of thing code, I want to rank in desc by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Furniture",
                        "y_data": 2
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 5
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses that have two prerequisites for each title in a bar chart, and rank y-axis in asc order.",
            "How many courses have two prerequisites? Show me a bar chart grouping by title, and sort from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 1
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 1
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 2
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between Team_ID and ACC_Percent .",
            "Return a scatter chart about the correlation between Team_ID and ACC_Percent .",
            "What is the relationship between Team_ID and ACC_Percent ?",
            "Draw a scatter chart about the correlation between Team_ID and ACC_Percent .",
            "A scatter chart shows the correlation between Team_ID and ACC_Percent .",
            "Show me a scatter plot of team id and acc_percent for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.875
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.625
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval and group by document name with a group line chart, I want to list in descending by the x-axis.",
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval and group by document name with a group line chart, display from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010~2012",
                        "y_data": 1,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 1,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 3,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "2010~2012",
                        "y_data": 1,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 1,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 3,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "2010~2012",
                        "y_data": 2,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 1,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 3,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "2010~2012",
                        "y_data": 2,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 2,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 3,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "2010~2012",
                        "y_data": 2,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 2,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 4,
                        "classify": "Winona Book"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie type that the student with first name Lisa has? Return a pie chart.",
            "What is the number of each allergie type the girl named Lisa has? Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 2
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 4
                    },
                    {
                        "x_data": "food",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, sum their salary for visualizing a bar chart, and could you order in descending by the total number?",
            "For employees with first names that end with the letter m, give me a bar chart to show their total salary, and could you show from high to low by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 15700
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 7900
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bin the hire date into Month interval, and then compute the average salary of employees in each month for a bar chart, note that just select those employees without the letter M in their first name, and sort the average of salary in asc order please.",
            "For those employees whose first name does not containing the letter M, display their average salary by binning the hire date into Month interval for visualizing a bar chart, and order in asc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 3429.1666666666665
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 4491.666666666667
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 9303.57142857143
                    },
                    {
                        "x_data": "June",
                        "y_data": 10241.666666666666
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "files",
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, could you list in asc by the total number?",
            "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, I want to show by the Y in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:56",
                        "y_data": 5
                    },
                    {
                        "x_data": "5:23",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:12",
                        "y_data": 7
                    },
                    {
                        "x_data": "3:45",
                        "y_data": 8
                    },
                    {
                        "x_data": "4:34",
                        "y_data": 8
                    },
                    {
                        "x_data": "4:30",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "min(T1.duration)",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T2.rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Return a bar chart on what is the total revenue of each manufacturer?, rank by the Name in asc.",
            "What is the total revenue of each manufacturer, sort in ascending by the names.",
            "Find the total revenue for each manufacturer Plot them as bar chart, and display from low to high by the names please.",
            "Bar graph to show sum revenue from different name, and rank bars in asc order.",
            "A bar chart about what is the total revenue of each manufacturer?, display by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Ignore movies whose director is NULL. For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 5
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 3
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday, list y axis in descending order.",
            "Bar chart x axis start from y axis the average of employee id, I want to rank from high to low by the total number.",
            "Draw a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday, and rank from high to low by the Y-axis.",
            "Return a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday, and list total number in desc order.",
            "Give me the comparison about the average of Employee_ID over the Start_from bin start_from by weekday, sort y axis in descending order.",
            "Show me about the distribution of Start_from and the average of Employee_ID bin start_from by weekday in a bar chart, and sort from high to low by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 6
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Visualize the general trend of maximal price over the year, I want to sort X-axis in asc order.",
            "Given a line chart about the maximum price of wines for each year, display Year from low to high order.",
            "Show me the trend about the maximum price of wines for each year, order by the x-axis in ascending.",
            "What is the maximum price of wines in each year?, sort by the X-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2004-01-01",
                        "y_data": 75
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 200
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 225
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 130
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 78
                    },
                    {
                        "x_data": "2066-01-01",
                        "y_data": 32
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Bar chart x axis location y axis how many location, order Y-axis in descending order.",
            "Compare the total number of locations in each location using a bar graph, rank from high to low by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Verizon Center",
                        "y_data": 2
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bell Centre",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games for each away team in a bar chart.",
            "Bar chart x axis away team y axis the number of away team"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "A bar chart about what are the total number of credits offered by each department?, list in desc by the x-axis.",
            "Find the total credits of all classes offered by each department Visualize by bar chart, and could you order in desc by the DEPT_CODE?",
            "Give me a histogram for what are the total number of credits offered by each department?, and display DEPT_CODE in descending order.",
            "What are the total number of credits offered by each department Show bar chart, display X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CIS",
                        "y_data": 27
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.crs_credit)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Master_Index",
            "CMI_Cross_References"
        ],
        "db_id": "local_govt_mdm",
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart, and display from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Reynolds-McClure",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt, Kertzmann and Lubowitz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmitt-Lang",
                        "y_data": 1
                    },
                    {
                        "x_data": "Volkman, Mills and Ferry",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cmi_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(cmi_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions",
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "what are the different card types, and how many transactions have been made with each?, and I want to order in desc by the Y-axis.",
            "Show the card type codes and the number of transactions Visualize by bar chart, display by the y axis in desc.",
            "Show the card type codes and the number of transactions with a bar chart, and show in descending by the total number please.",
            "What are the different card types, and how many transactions have been made with each Visualize by bar chart, I want to order in desc by the Y-axis.",
            "Return a bar chart on what are the different card types, and how many transactions have been made with each?, and I want to display Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    },
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "what are the main indstries and total market value for each industry?, and could you display bars in asc order?",
            "A bar chart about what are the main indstries and total market value for each industry?, rank in ascending by the names please.",
            "Draw a bar chart of main industry versus total number of market value, I want to show by the X-axis from low to high.",
            "Show all main industry and total market value in each industry, show in asc by the x-axis.",
            "What are the main indstries and total market value for each industry Visualize by bar chart, rank in ascending by the X-axis.",
            "Show all main industry and total market value in each industry by a bar chart, show in asc by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 580.4000000000002
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 415.9
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 1257.1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(market_value)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "For each classroom with at least 2 classes, how many classes are offered, list from high to low by the y axis please.",
            "Bar chart of the total number from each class room, sort in descending by the the total number .",
            "Find the number of classes offered for all class rooms that held at least 2 classes Show bar chart, rank from high to low by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KLR200",
                        "y_data": 4
                    },
                    {
                        "x_data": "KLR209",
                        "y_data": 3
                    },
                    {
                        "x_data": "BUS311",
                        "y_data": 2
                    },
                    {
                        "x_data": "BUS252",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CLASS_ROOM",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Visualize a pie chart with what are the ids and details of events that have more than one participants?",
            "Show me a pie chart for what are the ids and details of events that have more than one participants?",
            "What are the ids and details of events that have more than one participants. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 70
                    },
                    {
                        "x_data": "Success",
                        "y_data": 83
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Event_ID)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "List the studios of each film and the number of films produced by that studio by a bar chart.",
            "List the studios of each film and the number of films produced by that studio. Show bar chart.",
            "Visualize a bar chart for how films are produced by each studio?",
            "A bar chart about how films are produced by each studio?",
            "How films are produced by each studio. Show bar chart.",
            "Show me the total number by studio in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "20th Century Fox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Columbia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Columbia / Rastar",
                        "y_data": 1
                    },
                    {
                        "x_data": "MGM",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orion / Carolco",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paramount",
                        "y_data": 2
                    },
                    {
                        "x_data": "Paramount / Lorimar",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Artists",
                        "y_data": 1
                    },
                    {
                        "x_data": "Universal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Universal / RKO",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Studio",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 17000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7920
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5760
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2780
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 12200
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8350
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3215
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2785
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7280
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs of the rarest breed in each treatment day with a bar chart that groups by date of treatment.",
            "How many dogs of the rarest breed in each treatment day? Draw a bar chart that groups by date of treatment."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart",
            "On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 90
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 79
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 81
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 82
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 87
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 82
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 86
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition_record",
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and rank in ascending by the X-axis.",
            "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, I want to sort by the names in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "December 2",
                        "y_data": 965
                    },
                    {
                        "x_data": "December 5",
                        "y_data": 1098
                    },
                    {
                        "x_data": "December 7",
                        "y_data": 2983
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Attendance"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of treatments in each month with a bar chart.",
            "How many treatments in each month? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 101.5
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ref_product_categories",
            "products"
        ],
        "db_id": "products_gen_characteristics",
        "nl_queries": [
            "Find the number of the category descriptions of the products whose descriptions include letter 't'.",
            "A pie chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a pie chart",
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a pie chart",
            "A pie chart for finding the number of the category descriptions of the products whose descriptions include letter 't'."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Herbs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Seeds",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spices",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_category_description)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_description"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? Show their average number by each participant type code using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Organizer",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Participant",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assessment_Notes"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "What are the dates of the assessment notes, and count them by a bar chart",
            "A bar chart for what are the number of the dates of the assessment notes?",
            "What are the number of the dates of the assessment notes?",
            "Show the number of date of notes from each date of notes"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 6
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_notes",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_notes)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Return a bar chart on what are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
            "Draw a bar chart for what are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
            "What are the names and average prices of products for manufacturers whose products cost on average 150 or more. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Bar chart of the total number from each origin, I want to rank bars in asc order please.",
            "For each origin, how many flights came from there Show bar chart, and sort bar from low to high order please.",
            "Show all origins and the number of flights from each origin by a bar chart, show by the x axis from low to high.",
            "Show all origins and the number of flights from each origin Show bar chart, and list X-axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chicago",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart, and display in descending by the Y-axis please.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and could you list y axis from high to low order?",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of salary bin hire_date by weekday, and visualize them by a bar chart, display in descending by the Y-axis please.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, list by the y-axis in desc.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of salary over the hire_date bin hire_date by weekday, display in descending by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 7775
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 6762.5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6493.333333333333
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6320
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6286.666666666667
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5746.666666666667
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5740
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Bin the settlement date for each settlement case into the day of week interval and count them for visualizing a bar chart.",
            "Bar chart x axis date claim settled y axis the number of date claim settled"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Settled",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Settled)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, and display X-axis in asc order.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id, I want to show in ascending by the JOB_ID.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, rank names in ascending order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and I want to show in ascending by the JOB_ID.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and list from low to high by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Show me about the correlation between address_id and monthly_rental , and group by attribute other_details in a scatter chart.",
            "Visualize a scatter chart about the correlation between address_id and monthly_rental , and group by attribute other_details.",
            "Visualize the relationship between address_id and monthly_rental , and group by attribute other_details.",
            "A scatter chart shows the correlation between address_id and monthly_rental , and group by attribute other_details.",
            "Return a scatter chart about the correlation between address_id and monthly_rental , and group by attribute other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 16,
                        "y_data": 1297.807,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1297.3186,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 13,
                        "y_data": 1036.8462,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 10,
                        "y_data": 1032.9782,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1032.8717,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 5,
                        "y_data": 1007.2597,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 19,
                        "y_data": 644.9306,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 8,
                        "y_data": 1287.5604,
                        "classify": "house"
                    },
                    {
                        "x_data": 2,
                        "y_data": 1132.742,
                        "classify": "house"
                    },
                    {
                        "x_data": 18,
                        "y_data": 1113.0996,
                        "classify": "house"
                    },
                    {
                        "x_data": 13,
                        "y_data": 1067.8383,
                        "classify": "house"
                    },
                    {
                        "x_data": 3,
                        "y_data": 894.0958,
                        "classify": "house"
                    },
                    {
                        "x_data": 8,
                        "y_data": 865.2615,
                        "classify": "house"
                    },
                    {
                        "x_data": 12,
                        "y_data": 826.4319,
                        "classify": "house"
                    },
                    {
                        "x_data": 3,
                        "y_data": 800.1214,
                        "classify": "house"
                    },
                    {
                        "x_data": 1,
                        "y_data": 756.6745,
                        "classify": "house"
                    },
                    {
                        "x_data": 12,
                        "y_data": 747.5312,
                        "classify": "house"
                    },
                    {
                        "x_data": 16,
                        "y_data": 683.0735,
                        "classify": "house"
                    },
                    {
                        "x_data": 9,
                        "y_data": 679.2988,
                        "classify": "house"
                    },
                    {
                        "x_data": 18,
                        "y_data": 620.2801,
                        "classify": "house"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "address_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "monthly_rental",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the sum of credits of courses that have more than one prerequisites for each department with a bar chart, and rank from high to low by the bar.",
            "What is the sum of credit value of courses with more than one prerequisite for each department? Return a bar chart, and show in descending by the dept_name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 6
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 3
                    },
                    {
                        "x_data": "History",
                        "y_data": 3
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 4
                    },
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 7
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 8
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 7
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Bar chart x axis building y axis the average of capacity, and show by the total number in descending please.",
            "Find the average capacity among rooms in each building with a bar chart, and display by the y axis from high to low.",
            "What is the average capacity for rooms in each building? Draw a bar chart, display by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Stabler",
                        "y_data": 113
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 97
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 93
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 92
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 76
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 60
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 59
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 51
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 49.33333333333334
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 37.5
                    },
                    {
                        "x_data": "Alumni",
                        "y_data": 36.5
                    },
                    {
                        "x_data": "Grace",
                        "y_data": 34
                    },
                    {
                        "x_data": "Polya",
                        "y_data": 28
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 27
                    },
                    {
                        "x_data": "Main",
                        "y_data": 26
                    },
                    {
                        "x_data": "Drown",
                        "y_data": 18
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 12
                    },
                    {
                        "x_data": "Power",
                        "y_data": 11
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Group by distinct states and them count them in a bar chart.",
            "What is the number of distinct states? Show me a bar chart.",
            "Bar chart x axis state y axis the number of state"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 1
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "NY",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_category",
            "category"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "List the genre name and genre id using a bar chart, list by the category_id in desc.",
            "What are the names and ids of the different categories? Show me the bar chart, list by the category_id in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Travel",
                        "y_data": 16
                    },
                    {
                        "x_data": "Sports",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sci-Fi",
                        "y_data": 14
                    },
                    {
                        "x_data": "New",
                        "y_data": 13
                    },
                    {
                        "x_data": "Music",
                        "y_data": 12
                    },
                    {
                        "x_data": "Horror",
                        "y_data": 11
                    },
                    {
                        "x_data": "Games",
                        "y_data": 10
                    },
                    {
                        "x_data": "Foreign",
                        "y_data": 9
                    },
                    {
                        "x_data": "Family",
                        "y_data": 8
                    },
                    {
                        "x_data": "Drama",
                        "y_data": 7
                    },
                    {
                        "x_data": "Documentary",
                        "y_data": 6
                    },
                    {
                        "x_data": "Comedy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Classics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Children",
                        "y_data": 3
                    },
                    {
                        "x_data": "Animation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Action",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "category_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Show me a bar chart for how many matches were played in each year?, rank by the x-axis in desc.",
            "How many matches were played in each year, and rank by the x-axis in desc.",
            "Find the number of matches happened in each year Plot them as bar chart, show in desc by the X.",
            "Return a histogram on how many matches were played in each year?, and rank x axis from high to low order.",
            "Bar chart of the total number from each year, and display names from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-01-01",
                        "y_data": 108
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 158
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, a scatter chart shows the correlation between employee_id and commission_pct .",
            "For all employees who have the letters D or S in their first name, what is the relationship between employee_id and commission_pct ?",
            "For all employees who have the letters D or S in their first name, draw a scatter chart about the correlation between employee_id and commission_pct .",
            "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between employee_id and commission_pct .",
            "For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between employee_id and commission_pct ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 0
                    },
                    {
                        "x_data": 205,
                        "y_data": 0
                    },
                    {
                        "x_data": 168,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 114,
                        "y_data": 0
                    },
                    {
                        "x_data": 148,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 169,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 151,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 163,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 103,
                        "y_data": 0
                    },
                    {
                        "x_data": 109,
                        "y_data": 0
                    },
                    {
                        "x_data": 175,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 121,
                        "y_data": 0
                    },
                    {
                        "x_data": 153,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 159,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 112,
                        "y_data": 0
                    },
                    {
                        "x_data": 111,
                        "y_data": 0
                    },
                    {
                        "x_data": 160,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 161,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 113,
                        "y_data": 0
                    },
                    {
                        "x_data": 165,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 123,
                        "y_data": 0
                    },
                    {
                        "x_data": 203,
                        "y_data": 0
                    },
                    {
                        "x_data": 166,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 179,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 173,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 105,
                        "y_data": 0
                    },
                    {
                        "x_data": 107,
                        "y_data": 0
                    },
                    {
                        "x_data": 184,
                        "y_data": 0
                    },
                    {
                        "x_data": 185,
                        "y_data": 0
                    },
                    {
                        "x_data": 192,
                        "y_data": 0
                    },
                    {
                        "x_data": 137,
                        "y_data": 0
                    },
                    {
                        "x_data": 133,
                        "y_data": 0
                    },
                    {
                        "x_data": 138,
                        "y_data": 0
                    },
                    {
                        "x_data": 180,
                        "y_data": 0
                    },
                    {
                        "x_data": 194,
                        "y_data": 0
                    },
                    {
                        "x_data": 115,
                        "y_data": 0
                    },
                    {
                        "x_data": 142,
                        "y_data": 0
                    },
                    {
                        "x_data": 116,
                        "y_data": 0
                    },
                    {
                        "x_data": 117,
                        "y_data": 0
                    },
                    {
                        "x_data": 183,
                        "y_data": 0
                    },
                    {
                        "x_data": 143,
                        "y_data": 0
                    },
                    {
                        "x_data": 198,
                        "y_data": 0
                    },
                    {
                        "x_data": 199,
                        "y_data": 0
                    },
                    {
                        "x_data": 131,
                        "y_data": 0
                    },
                    {
                        "x_data": 140,
                        "y_data": 0
                    },
                    {
                        "x_data": 191,
                        "y_data": 0
                    },
                    {
                        "x_data": 127,
                        "y_data": 0
                    },
                    {
                        "x_data": 128,
                        "y_data": 0
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, I want to show in desc by the y axis.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and show y axis in descending order.",
            "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, and I want to show in desc by the y axis.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, I want to list in descending by the y-axis.",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, and show by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Diet Pepsi",
                        "y_data": 9
                    },
                    {
                        "x_data": "Sprite Lemo",
                        "y_data": 8
                    },
                    {
                        "x_data": "Diet Mountain Dew",
                        "y_data": 8
                    },
                    {
                        "x_data": "Vimto",
                        "y_data": 6
                    },
                    {
                        "x_data": "Dr Pepper",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Buildings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Give me a bar chart showing the number of buildings managed by \"Kyle\" and group by apartment type codes, rank y-axis in desc order please.",
            "How many buildings are managed by \"Kyle\"? Return a bar chart grouping by apartment type codes, and sort from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duplex",
                        "y_data": 2
                    },
                    {
                        "x_data": "Studio",
                        "y_data": 1
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, and show total number in ascending order.",
            "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, I want to rank in asc by the y-axis.",
            "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, show Y-axis in asc order please.",
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, display Y-axis in asc order.",
            "Create a bar chart showing total number of meter 100 across meter 200, and could you order from low to high by the Y-axis please?",
            "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, display Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 55
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 114
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "movie"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Show the number of movies for each year in a bar chart and ordered by budget.",
            "What is the number of movies for each year, ordered by budget in millions? Visualize in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1999",
                        "y_data": 3
                    },
                    {
                        "x_data": "2000",
                        "y_data": 6
                    },
                    {
                        "x_data": "2001",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a pie chart about the proportion of All_Home and the sum of School_ID.",
            "Return a pie chart about the proportion of All_Home and the sum of School_ID.",
            "A pie chart shows the proportion of All_Home and the sum of school id.",
            "Give me a pie chart to reflect the proportion of All_Home and the sum of School_ID.",
            "Draw a pie chart about the proportion of all home and the sum of School_ID.",
            "I want to know the proportion of sum school id for each all home."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 5
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(School_ID)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize the relationship between employee_id and salary .",
            "For those employees who did not have any job in the past, visualize a scatter chart about the correlation between employee_id and salary .",
            "For those employees who did not have any job in the past, a scatter chart shows the correlation between employee_id and salary .",
            "For those employees who did not have any job in the past, draw a scatter chart about the correlation between employee_id and salary .",
            "For those employees who did not have any job in the past, what is the relationship between employee_id and salary ?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 24000
                    },
                    {
                        "x_data": 103,
                        "y_data": 9000
                    },
                    {
                        "x_data": 104,
                        "y_data": 6000
                    },
                    {
                        "x_data": 105,
                        "y_data": 4800
                    },
                    {
                        "x_data": 106,
                        "y_data": 4800
                    },
                    {
                        "x_data": 107,
                        "y_data": 4200
                    },
                    {
                        "x_data": 108,
                        "y_data": 12000
                    },
                    {
                        "x_data": 109,
                        "y_data": 9000
                    },
                    {
                        "x_data": 110,
                        "y_data": 8200
                    },
                    {
                        "x_data": 111,
                        "y_data": 7700
                    },
                    {
                        "x_data": 112,
                        "y_data": 7800
                    },
                    {
                        "x_data": 113,
                        "y_data": 6900
                    },
                    {
                        "x_data": 115,
                        "y_data": 3100
                    },
                    {
                        "x_data": 116,
                        "y_data": 2900
                    },
                    {
                        "x_data": 117,
                        "y_data": 2800
                    },
                    {
                        "x_data": 118,
                        "y_data": 2600
                    },
                    {
                        "x_data": 119,
                        "y_data": 2500
                    },
                    {
                        "x_data": 120,
                        "y_data": 8000
                    },
                    {
                        "x_data": 121,
                        "y_data": 8200
                    },
                    {
                        "x_data": 123,
                        "y_data": 6500
                    },
                    {
                        "x_data": 124,
                        "y_data": 5800
                    },
                    {
                        "x_data": 125,
                        "y_data": 3200
                    },
                    {
                        "x_data": 126,
                        "y_data": 2700
                    },
                    {
                        "x_data": 127,
                        "y_data": 2400
                    },
                    {
                        "x_data": 128,
                        "y_data": 2200
                    },
                    {
                        "x_data": 129,
                        "y_data": 3300
                    },
                    {
                        "x_data": 130,
                        "y_data": 2800
                    },
                    {
                        "x_data": 131,
                        "y_data": 2500
                    },
                    {
                        "x_data": 132,
                        "y_data": 2100
                    },
                    {
                        "x_data": 133,
                        "y_data": 3300
                    },
                    {
                        "x_data": 134,
                        "y_data": 2900
                    },
                    {
                        "x_data": 135,
                        "y_data": 2400
                    },
                    {
                        "x_data": 136,
                        "y_data": 2200
                    },
                    {
                        "x_data": 137,
                        "y_data": 3600
                    },
                    {
                        "x_data": 138,
                        "y_data": 3200
                    },
                    {
                        "x_data": 139,
                        "y_data": 2700
                    },
                    {
                        "x_data": 140,
                        "y_data": 2500
                    },
                    {
                        "x_data": 141,
                        "y_data": 3500
                    },
                    {
                        "x_data": 142,
                        "y_data": 3100
                    },
                    {
                        "x_data": 143,
                        "y_data": 2600
                    },
                    {
                        "x_data": 144,
                        "y_data": 2500
                    },
                    {
                        "x_data": 145,
                        "y_data": 14000
                    },
                    {
                        "x_data": 146,
                        "y_data": 13500
                    },
                    {
                        "x_data": 147,
                        "y_data": 12000
                    },
                    {
                        "x_data": 148,
                        "y_data": 11000
                    },
                    {
                        "x_data": 149,
                        "y_data": 10500
                    },
                    {
                        "x_data": 150,
                        "y_data": 10000
                    },
                    {
                        "x_data": 151,
                        "y_data": 9500
                    },
                    {
                        "x_data": 152,
                        "y_data": 9000
                    },
                    {
                        "x_data": 153,
                        "y_data": 8000
                    },
                    {
                        "x_data": 154,
                        "y_data": 7500
                    },
                    {
                        "x_data": 155,
                        "y_data": 7000
                    },
                    {
                        "x_data": 156,
                        "y_data": 10000
                    },
                    {
                        "x_data": 157,
                        "y_data": 9500
                    },
                    {
                        "x_data": 158,
                        "y_data": 9000
                    },
                    {
                        "x_data": 159,
                        "y_data": 8000
                    },
                    {
                        "x_data": 160,
                        "y_data": 7500
                    },
                    {
                        "x_data": 161,
                        "y_data": 7000
                    },
                    {
                        "x_data": 162,
                        "y_data": 10500
                    },
                    {
                        "x_data": 163,
                        "y_data": 9500
                    },
                    {
                        "x_data": 164,
                        "y_data": 7200
                    },
                    {
                        "x_data": 165,
                        "y_data": 6800
                    },
                    {
                        "x_data": 166,
                        "y_data": 6400
                    },
                    {
                        "x_data": 167,
                        "y_data": 6200
                    },
                    {
                        "x_data": 168,
                        "y_data": 11500
                    },
                    {
                        "x_data": 169,
                        "y_data": 10000
                    },
                    {
                        "x_data": 170,
                        "y_data": 9600
                    },
                    {
                        "x_data": 171,
                        "y_data": 7400
                    },
                    {
                        "x_data": 172,
                        "y_data": 7300
                    },
                    {
                        "x_data": 173,
                        "y_data": 6100
                    },
                    {
                        "x_data": 174,
                        "y_data": 11000
                    },
                    {
                        "x_data": 175,
                        "y_data": 8800
                    },
                    {
                        "x_data": 177,
                        "y_data": 8400
                    },
                    {
                        "x_data": 178,
                        "y_data": 7000
                    },
                    {
                        "x_data": 179,
                        "y_data": 6200
                    },
                    {
                        "x_data": 180,
                        "y_data": 3200
                    },
                    {
                        "x_data": 181,
                        "y_data": 3100
                    },
                    {
                        "x_data": 182,
                        "y_data": 2500
                    },
                    {
                        "x_data": 183,
                        "y_data": 2800
                    },
                    {
                        "x_data": 184,
                        "y_data": 4200
                    },
                    {
                        "x_data": 185,
                        "y_data": 4100
                    },
                    {
                        "x_data": 186,
                        "y_data": 3400
                    },
                    {
                        "x_data": 187,
                        "y_data": 3000
                    },
                    {
                        "x_data": 188,
                        "y_data": 3800
                    },
                    {
                        "x_data": 189,
                        "y_data": 3600
                    },
                    {
                        "x_data": 190,
                        "y_data": 2900
                    },
                    {
                        "x_data": 191,
                        "y_data": 2500
                    },
                    {
                        "x_data": 192,
                        "y_data": 4000
                    },
                    {
                        "x_data": 193,
                        "y_data": 3900
                    },
                    {
                        "x_data": 194,
                        "y_data": 3200
                    },
                    {
                        "x_data": 195,
                        "y_data": 2800
                    },
                    {
                        "x_data": 196,
                        "y_data": 3100
                    },
                    {
                        "x_data": 197,
                        "y_data": 3000
                    },
                    {
                        "x_data": 198,
                        "y_data": 2600
                    },
                    {
                        "x_data": 199,
                        "y_data": 2600
                    },
                    {
                        "x_data": 202,
                        "y_data": 6000
                    },
                    {
                        "x_data": 203,
                        "y_data": 6500
                    },
                    {
                        "x_data": 204,
                        "y_data": 10000
                    },
                    {
                        "x_data": 205,
                        "y_data": 12000
                    },
                    {
                        "x_data": 206,
                        "y_data": 8300
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings in each year and bin booking end date by year with a bar chart.",
            "How many apartment bookings in each year? Show me a bar chart binning booking end date by year.",
            "Bar graph to show the number of booking end date from different booking end date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 11
                    },
                    {
                        "x_data": "2018",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_end_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_end_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Player"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Find the name and training hours of players whose hours are below 1500. Plot them as pie chart.",
            "Show me the proportion on what are the names and number of hours spent training for each player who trains for less than 1500 hours?",
            "Show me a pie chart for what are the names and number of hours spent training for each player who trains for less than 1500 hours?",
            "What are the names and number of hours spent training for each player who trains for less than 1500 hours. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andrew",
                        "y_data": 1200
                    },
                    {
                        "x_data": "Charles",
                        "y_data": 300
                    },
                    {
                        "x_data": "Eddie",
                        "y_data": 600
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "HS"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "pName"
                }
            }
        }
    },
    {
        "tables_used": [
            "ALBUM",
            "TRACK"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "Show the album names and ids for albums that contain tracks with unit price bigger than 1 Visualize by bar chart, show in descending by the total number please.",
            "Show the album names and ids for albums that contain tracks with unit price bigger than 1 by a bar chart, I want to order Y in descending order please.",
            "Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and rank in descending by the AlbumId.",
            "Return a histogram on what are the titles and ids for albums containing tracks with unit price greater than 1?, and display by the Y from high to low please.",
            "What are the titles and ids for albums containing tracks with unit price greater than 1, and show in descending by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "LOST, Season 4",
                        "y_data": 261
                    },
                    {
                        "x_data": "Aquaman",
                        "y_data": 254
                    },
                    {
                        "x_data": "Battlestar Galactica (Classic), Season 1",
                        "y_data": 253
                    },
                    {
                        "x_data": "The Office, Season 3",
                        "y_data": 251
                    },
                    {
                        "x_data": "The Office, Season 2",
                        "y_data": 250
                    },
                    {
                        "x_data": "The Office, Season 1",
                        "y_data": 249
                    },
                    {
                        "x_data": "Lost, Season 2",
                        "y_data": 231
                    },
                    {
                        "x_data": "Lost, Season 1",
                        "y_data": 230
                    },
                    {
                        "x_data": "Lost, Season 3",
                        "y_data": 229
                    },
                    {
                        "x_data": "Heroes, Season 1",
                        "y_data": 228
                    },
                    {
                        "x_data": "Battlestar Galactica, Season 3",
                        "y_data": 227
                    },
                    {
                        "x_data": "Battlestar Galactica: The Story So Far",
                        "y_data": 226
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AlbumId"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road, and could you order by the bar in asc?",
            "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, I want to show in asc by the bars.",
            "Return a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and could you show in asc by the names?",
            "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart, order by the X-axis in ascending.",
            "Give me a bar chart for total number of team id of each acc road, order by the X-axis in ascending.",
            "Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, list ACC_Road in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 7
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "How many different products are produced in each headquarter city Visualize by bar chart, show x-axis from high to low order.",
            "Find the number of different products that are produced by companies at different headquarter cities Plot them as bar chart, and order bar in desc order please.",
            "Draw a bar chart for how many different products are produced in each headquarter city?, and display X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T1.name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Give me a pie chart showing sum of price for each cinema."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 9
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 32
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 12
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 9
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 15
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart.",
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 9
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and list by the y-axis from low to high.",
            "Draw a bar chart of date versus how many date, and I want to sort Y in asc order.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and count their frequency, and rank by the Y-axis in ascending.",
            "I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year, display how many date in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show the of customer addresses and group by premises type and address type code in a stacked bar chart The x-axis is premises type, and rank by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Warehouse",
                        "y_data": 3,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 1,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Office",
                        "y_data": 4,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 3,
                        "classify": "Shipping"
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 2,
                        "classify": "Shipping"
                    },
                    {
                        "x_data": "Office",
                        "y_data": 2,
                        "classify": "Shipping"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Return a bar chart about the distribution of date_address_to and the average of monthly_rental , and group by attribute other_details and bin date_address_to by weekday.",
            "Draw a bar chart about the distribution of date_address_to and the average of monthly_rental , and group by attribute other_details and bin date_address_to by weekday.",
            "Visualize a bar chart about the distribution of date_address_to and the average of monthly_rental , and group by attribute other_details and bin date_address_to by weekday.",
            "Show me about the distribution of date_address_to and the average of monthly_rental , and group by attribute other_details and bin date_address_to by weekday in a bar chart.",
            "Find date_address_to and the average of monthly_rental , and group by attribute other_details and bin date_address_to by weekday, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1164.5,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1021.5,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 970.5,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 679,
                        "classify": "house"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 944.6666666666666,
                        "classify": "house"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 865,
                        "classify": "house"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 946.5,
                        "classify": "house"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1003.5,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 797.75,
                        "classify": "house"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and I want to show by the x-axis in descending.",
            "Show the average of id from each nationality, and list in desc by the X please.",
            "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, and list in desc by the X please.",
            "Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, could you sort bars from high to low order?",
            "Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, I want to display in descending by the Nationality.",
            "A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, list in desc by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 7
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "France",
                        "y_data": 8
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 6
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me a bar chart, that simply displays the last name of the employee and the corresponding department's location id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 1400
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 1500
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 2500
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 1800
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 2400
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 2700
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 1700
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "LOCATION_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Show the trend about the frequency of the claim dates.",
            "Tell me the trend about the claim dates using a trend line.",
            "Plot date claim settled by the number of date claim settled as a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-10-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Settled",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Settled)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time in a bar chart, show in ascending by the Y.",
            "Plot the average of shop id by grouped by is full time as a bar graph, and order by the y-axis from low to high.",
            "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time, order by the y-axis from low to high.",
            "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart, and display in ascending by the Y.",
            "Return a bar chart about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, could you rank in asc by the y-axis?",
            "Find Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, and visualize them by a bar chart, sort by the total number from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 3.4
                    },
                    {
                        "x_data": "F",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "Display a bar chart for what are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?, rank in descending by the bar please.",
            "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor, rank from high to low by the x axis.",
            "Return a histogram on how many entrepreneurs correspond to each investor?, and could you list bars from high to low order?",
            "Draw a bar chart of investor versus the total number, and could you list bars from high to low order?",
            "How many entrepreneurs correspond to each investor, and show from high to low by the bars please.",
            "how many entrepreneurs correspond to each investor?, show from high to low by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Simon Woodroffe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachel Elnaugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duncan Bannatyne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Doug Richard",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "What are the average ages of artists by countries? Visualize the result with a histogram, and I want to display in asc by the total number.",
            "Compare the average of artists' age by country in a bar graph, could you rank in ascending by the total number?",
            "Show the average of artists' age by country, I want to rank Y in ascending order.",
            "Bar chart x axis country y axis the average of age, and I want to show by the y-axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fiji",
                        "y_data": 45
                    },
                    {
                        "x_data": "Zimbabwe",
                        "y_data": 48
                    },
                    {
                        "x_data": "United States",
                        "y_data": 49.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of ships with different nationalities and ship types?",
            "A stacked bar chart shows the total number of ships with different nationalities and split by ship type.",
            "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type.",
            "Stacked bar chart of how many nationality for with each Type in each nationality"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United Kingdom",
                        "y_data": 2,
                        "classify": "Battle ship"
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1,
                        "classify": "Battle ship"
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 3,
                        "classify": "Cargo ship"
                    },
                    {
                        "x_data": "United States",
                        "y_data": 2,
                        "classify": "Cargo ship"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of price , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the average of price , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, find founder and the average of price , and group by attribute founder, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the founder , and group by attribute founder by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of price , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 240
                    },
                    {
                        "x_data": "James",
                        "y_data": 162
                    },
                    {
                        "x_data": "John",
                        "y_data": 240
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 150
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 150
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 62.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bin the hire date of employees into Month interval and count them for visualizing a bar chart.",
            "Create a bar chart showing how many hire date across hire date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 3
                    },
                    {
                        "x_data": "July",
                        "y_data": 2
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each cinema, show the price and group them by film title in a stacked bar chart, and I want to order in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 9,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 12,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 15,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Oriel"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "election"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "Show vote_percent from each date, and I want to rank by the x-axis from high to low.",
            "List the dates and vote percents of elections in a bar chart, and I want to rank by the x-axis from high to low.",
            "List the dates and vote percents of elections Show bar chart, I want to rank by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "October 1942",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "July 1942",
                        "y_data": 16.2
                    },
                    {
                        "x_data": "1953",
                        "y_data": 16
                    },
                    {
                        "x_data": "1949",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "1946",
                        "y_data": 19.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Vote_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "pilot"
        ],
        "db_id": "pilot_record",
        "nl_queries": [
            "Bar graph to show the total number from different nationality, sort total number in desc order.",
            "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality Show bar chart, and sort total number in desc order.",
            "Draw a bar chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality, display by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 3
                    },
                    {
                        "x_data": "United Kindom",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nigeria",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? List the participant id and the number with a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 26,
                        "y_data": 2
                    },
                    {
                        "x_data": 36,
                        "y_data": 1
                    },
                    {
                        "x_data": 37,
                        "y_data": 2
                    },
                    {
                        "x_data": 60,
                        "y_data": 1
                    },
                    {
                        "x_data": 63,
                        "y_data": 1
                    },
                    {
                        "x_data": 64,
                        "y_data": 1
                    },
                    {
                        "x_data": 66,
                        "y_data": 4
                    },
                    {
                        "x_data": 86,
                        "y_data": 2
                    },
                    {
                        "x_data": 90,
                        "y_data": 3
                    },
                    {
                        "x_data": 96,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Participant_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Visualize a bar chart that bin the open date into a day of the week interval and count them, and sort from high to low by the Y-axis.",
            "Please compare the number of the church by open date (bin into the weekday) using a bar chart, and order total number from high to low order.",
            "Draw a bar chart of open date versus the number of open date, and order from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airlines",
            "routes"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "Find the names of the top 10 airlines that operate the most number of routes. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ryanair",
                        "y_data": 4296
                    },
                    {
                        "x_data": "American Airlines",
                        "y_data": 24
                    },
                    {
                        "x_data": "United Airlines",
                        "y_data": 5209
                    },
                    {
                        "x_data": "Delta Air Lines",
                        "y_data": 2009
                    },
                    {
                        "x_data": "US Airways",
                        "y_data": 5265
                    },
                    {
                        "x_data": "China Southern Airlines",
                        "y_data": 1767
                    },
                    {
                        "x_data": "China Eastern Airlines",
                        "y_data": 1758
                    },
                    {
                        "x_data": "Air China",
                        "y_data": 751
                    },
                    {
                        "x_data": "Southwest Airlines",
                        "y_data": 4547
                    },
                    {
                        "x_data": "easyJet",
                        "y_data": 2297
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "alid"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart, I want to display y axis from low to high order.",
            "For each citizenship, what is the maximum net worth Visualize by bar chart, and sort Y in asc order.",
            "Show different citizenships and the maximum net worth of singers of each citizenship, and sort Y in asc order.",
            "Show me maximal net worth millions by citizenship in a histogram, sort Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Germany",
                        "y_data": 14.3
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 17
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 17.4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 28.8
                    },
                    {
                        "x_data": "France",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(Net_Worth_Millions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person?, list in desc by the x-axis.",
            "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart, and could you show by the friend in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Zach",
                        "y_data": 45
                    },
                    {
                        "x_data": "Bob",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "friend",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Compute the number of local authorities by local authorities and then split by services Show the result with a stacked bar graph, I want to order y axis from low to high order please.",
            "Group by the local authorities and count the number of local authorities, and then group by services, order in ascending by the y-axis.",
            "Stacked bar of services and how many services colored by local_authority, and sort in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 1,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Watford"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "home_game"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Can you draw the trend of sum avg(attendance) over the year?, order in asc by the X.",
            "Show the trend about the total average number of attendance at home games change over the years, bin year into year interval, order year in ascending order please.",
            "Can you draw the trend of sum avg(attendance) over the year?, and order X-axis from low to high order.",
            "Show the trend about the total average number of attendance at home games change over the years, bin year into year interval, could you sort X in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1871~1884",
                        "y_data": 76306
                    },
                    {
                        "x_data": "1885~1898",
                        "y_data": 235196
                    },
                    {
                        "x_data": "1899~1912",
                        "y_data": 216476
                    },
                    {
                        "x_data": "1913~1926",
                        "y_data": 3483527
                    },
                    {
                        "x_data": "1927~1940",
                        "y_data": 5260134
                    },
                    {
                        "x_data": "1941~1954",
                        "y_data": 12585780
                    },
                    {
                        "x_data": "1955~1968",
                        "y_data": 15436797
                    },
                    {
                        "x_data": "1969~1982",
                        "y_data": 18760115
                    },
                    {
                        "x_data": "1983~1996",
                        "y_data": 27746666
                    },
                    {
                        "x_data": "1997~2010",
                        "y_data": 32563010
                    },
                    {
                        "x_data": "2011~2014",
                        "y_data": 9550049
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(attendance))"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "What is the maximum price of wines in each year?, sort in desc by the Year.",
            "Given a line chart about the maximum price of wines for each year, I want to show in descending by the x-axis please.",
            "Visualize the general trend of maximal price over the year, list X in desc order.",
            "Show me the trend about the maximum price of wines for each year, and display by the x axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2066-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 78
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 130
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 225
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 200
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 75
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Please draw a bar chart to show the total number of different color, I want to show X from high to low order.",
            "Bar chart x axis color y axis the number of color, sort in desc by the x-axis.",
            "Compare the number of items in each color scheme using a bar chart, rank by the color from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "RBG",
                        "y_data": 8
                    },
                    {
                        "x_data": "Black/White",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "color",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(color)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "A bar chart for what are the number of the names of all products?, and sort by the Y-axis in asc.",
            "Select the names of all the products in the store, and count them by a bar chart, and order Y-axis from low to high order.",
            "Bar chart x axis name y axis the number of name, sort by the Y-axis in asc.",
            "What are the names of all products, and count them by a bar chart, and could you list by the Y-axis from low to high?",
            "What are the number of the names of all products?, and show in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize the relationship between price and code .",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between price and code .",
            "For those records from the products and each product's manufacturer, show me about the correlation between price and code in a scatter chart.",
            "For those records from the products and each product's manufacturer, what is the relationship between price and code ?",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between price and code ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 240,
                        "y_data": 5
                    },
                    {
                        "x_data": 120,
                        "y_data": 6
                    },
                    {
                        "x_data": 150,
                        "y_data": 4
                    },
                    {
                        "x_data": 5,
                        "y_data": 6
                    },
                    {
                        "x_data": 240,
                        "y_data": 1
                    },
                    {
                        "x_data": 180,
                        "y_data": 2
                    },
                    {
                        "x_data": 90,
                        "y_data": 2
                    },
                    {
                        "x_data": 270,
                        "y_data": 3
                    },
                    {
                        "x_data": 66,
                        "y_data": 3
                    },
                    {
                        "x_data": 180,
                        "y_data": 2
                    },
                    {
                        "x_data": 150,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "what is the maximum accelerate for different number of cylinders?",
            "plot scatter on what is the maximum accelerate for different number of cylinders?",
            "What is the maximum accelerate for different number of cylinders. Show scatter chart.",
            "what is the maximum accelerate for all the different cylinders?",
            "Draw a scatter chart for what is the maximum accelerate for all the different cylinders?",
            "What is the maximum accelerate for all the different cylinders.",
            "Scatter plot to show max(accelerate) on x axis and cylinders on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 13.5,
                        "y_data": 3
                    },
                    {
                        "x_data": 24.8,
                        "y_data": 4
                    },
                    {
                        "x_data": 20.1,
                        "y_data": 5
                    },
                    {
                        "x_data": 21,
                        "y_data": 6
                    },
                    {
                        "x_data": 22.2,
                        "y_data": 8
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(Accelerate)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Cylinders"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, list names in ascending order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of price , and group by attribute name in a bar chart, show x axis in asc order please.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of price , and group by attribute name, sort bar in ascending order.",
            "For those records from the products and each product's manufacturer, find name and the sum of price , and group by attribute name, and visualize them by a bar chart, could you sort in asc by the names?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name by a bar chart, show x axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 450
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 486
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 125
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Compare the total number of different product type codes, sort in asc by the X-axis please.",
            "Visualize a bar chart for showing the total number of different product type codes, and sort by the Product_Type_Code in ascending.",
            "What is the total number of different types of codes of products?, show x axis from low to high order please.",
            "Bar chart x axis product type code y axis the number of product type code, show x axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Books",
                        "y_data": 4
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Food",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Product_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Show me about the distribution of other_details and the average of monthly_rental , and group by attribute other_details in a bar chart.",
            "Visualize a bar chart about the distribution of other_details and the average of monthly_rental , and group by attribute other_details.",
            "Return a bar chart about the distribution of other_details and the average of monthly_rental , and group by attribute other_details.",
            "Draw a bar chart about the distribution of other_details and the average of monthly_rental , and group by attribute other_details.",
            "A bar chart shows the distribution of other_details and the average of monthly_rental , and group by attribute other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "apartment",
                        "y_data": 1049.2857142857142
                    },
                    {
                        "x_data": "house",
                        "y_data": 882.2307692307693
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "A bar chart for finding the number of the first name of students who are living in the Smith Hall, and show by the Fname in asc please.",
            "A bar chart for what are the number of the first names of all students in Smith Hall?, and show by the bar in ascending.",
            "Find the first name of students who are living in the Smith Hall, and count them by a bar chart, show by the bar in ascending.",
            "What are the first names of all students in Smith Hall, and count them by a bar chart, could you list in asc by the x-axis?",
            "What are the number of the first names of all students in Smith Hall?, list by the bar in ascending please.",
            "Find the number of the first name of students who are living in the Smith Hall, and show by the Fname in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students for each department. Visualize by pie chart.",
            "Visualize a pie chart with how many students are in each department?",
            "Give the proportion of how many students are in each department?",
            "How many students are in each department. Visualize by pie chart.",
            "Give me a pie to show the total number from different dept code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 2
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 1
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 1491
                    },
                    {
                        "x_data": "July",
                        "y_data": 3999
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4960
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 5512
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, sort y axis in descending order.",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart, show by the Y in descending please.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and could you list by the total number in desc?",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart, and list in desc by the total number.",
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, and show in descending by the y-axis please.",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, and show in descending by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 3
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nov",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Show the minimum of the rooms in different decor using a bar chart.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!",
            "Please use a bar chart to show the minimum price of the rooms in a different decor.",
            "Draw a bar chart of decor versus minimal baseprice"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 75
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 150
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Draw a bar chart about the distribution of Date_of_Birth and Height , sort from low to high by the x axis.",
            "A bar chart shows the distribution of Date_of_Birth and Height , and order X-axis from low to high order please.",
            "Return a bar chart about the distribution of Date_of_Birth and Height , and I want to show by the bar in asc.",
            "Bar chart x axis date of birth y axis height, and list by the bar in ascending.",
            "Show me about the distribution of Date_of_Birth and Height in a bar chart, and list by the bar in ascending.",
            "Visualize a bar chart about the distribution of Date_of_Birth and Height , and could you rank names from low to high order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "01.09.1977",
                        "y_data": 196
                    },
                    {
                        "x_data": "03.02.1976",
                        "y_data": 200
                    },
                    {
                        "x_data": "05.05.1972",
                        "y_data": 202
                    },
                    {
                        "x_data": "06.10.1976",
                        "y_data": 188
                    },
                    {
                        "x_data": "10.03.1976",
                        "y_data": 195
                    },
                    {
                        "x_data": "10.11.1972",
                        "y_data": 197
                    },
                    {
                        "x_data": "20.08.1970",
                        "y_data": 193
                    },
                    {
                        "x_data": "22.04.1977",
                        "y_data": 194
                    },
                    {
                        "x_data": "28.09.1981",
                        "y_data": 196
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "membership_register_branch",
            "branch"
        ],
        "db_id": "shop_membership",
        "nl_queries": [
            "Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, and show by the bar from low to high.",
            "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, show in ascending by the bars.",
            "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, and sort in ascending by the Name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexandre",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brooke Greville",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Popert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taverner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zytogorski",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the founder , and group by attribute founder by a bar chart, rank by the y-axis from low to high please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of price , and group by attribute founder in a bar chart, and could you rank by the total number in ascending?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of price , and group by attribute founder, could you sort by the total number of price in asc?",
            "For those records from the products and each product's manufacturer, find founder and the sum of price , and group by attribute founder, and visualize them by a bar chart, rank by the y-axis from low to high please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of price , and group by attribute founder, and display total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 125
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 150
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 240
                    },
                    {
                        "x_data": "John",
                        "y_data": 240
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 450
                    },
                    {
                        "x_data": "James",
                        "y_data": 486
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "architect",
            "bridge"
        ],
        "db_id": "architecture",
        "nl_queries": [
            "Draw a bar chart for what are the ids and names of the architects who built at least 3 bridges ?, list in ascending by the y-axis.",
            "Give me a histogram for what are the ids and names of the architects who built at least 3 bridges ?, and order Y-axis from low to high order.",
            "What are the ids and names of the architects who built at least 3 bridges , and I want to show by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Frank Lloyd Wright",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frank Gehry",
                        "y_data": 2
                    },
                    {
                        "x_data": "Le Corbusier",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, display by the y axis in desc please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart, I want to list Y-axis from high to low order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and display by the y axis in desc please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, and display by the y axis in desc please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, I want to sort by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, and rank in ascending by the y-axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, and sort by the Y-axis in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the headquarter , and group by attribute headquarter by a bar chart, could you list by the total number in ascending?",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter in a bar chart, and could you list by the total number in ascending?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, and could you show by the Y-axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 6
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "What are the names and ages of artists? Show the result in a bar graph, and show x axis in asc order.",
            "Bar chart x axis name y axis age, and display in ascending by the X-axis.",
            "Show all artist names and ages in a histogram, list from low to high by the bars.",
            "A bar chart compares the ages of all artists, rank by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 57
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 46
                    },
                    {
                        "x_data": "Larry Nelson",
                        "y_data": 50
                    },
                    {
                        "x_data": "Mark Brooks",
                        "y_data": 48
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 48
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 47
                    },
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, and display by the sum id in desc.",
            "Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, I want to list from high to low by the total number.",
            "A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, display by the sum id in desc.",
            "Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, order Y in descending order please.",
            "Show total number of id from each meter 200, and I want to list from high to low by the total number.",
            "Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, rank in descending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 8
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 5
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 4
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 3
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and order mean salary in descending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart, and list by the mean salary from high to low please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, could you rank y-axis in desc order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, list by the mean salary from high to low please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, I want to show by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 9083.333333333334
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then shows the amount of each payment, and then sort the bars in ascending order of date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Payment_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a scatter chart shows the correlation between employee_id and department_id .",
            "For those employees who was hired before 2002-06-21, show me about the correlation between employee_id and department_id in a scatter chart.",
            "For those employees who was hired before 2002-06-21, visualize a scatter chart about the correlation between employee_id and department_id .",
            "For those employees who was hired before 2002-06-21, return a scatter chart about the correlation between employee_id and department_id .",
            "For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between employee_id and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 90
                    },
                    {
                        "x_data": 101,
                        "y_data": 90
                    },
                    {
                        "x_data": 102,
                        "y_data": 90
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 104,
                        "y_data": 60
                    },
                    {
                        "x_data": 105,
                        "y_data": 60
                    },
                    {
                        "x_data": 106,
                        "y_data": 60
                    },
                    {
                        "x_data": 107,
                        "y_data": 60
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 109,
                        "y_data": 100
                    },
                    {
                        "x_data": 110,
                        "y_data": 100
                    },
                    {
                        "x_data": 111,
                        "y_data": 100
                    },
                    {
                        "x_data": 112,
                        "y_data": 100
                    },
                    {
                        "x_data": 113,
                        "y_data": 100
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 115,
                        "y_data": 30
                    },
                    {
                        "x_data": 116,
                        "y_data": 30
                    },
                    {
                        "x_data": 117,
                        "y_data": 30
                    },
                    {
                        "x_data": 118,
                        "y_data": 30
                    },
                    {
                        "x_data": 119,
                        "y_data": 30
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 125,
                        "y_data": 50
                    },
                    {
                        "x_data": 126,
                        "y_data": 50
                    },
                    {
                        "x_data": 127,
                        "y_data": 50
                    },
                    {
                        "x_data": 128,
                        "y_data": 50
                    },
                    {
                        "x_data": 129,
                        "y_data": 50
                    },
                    {
                        "x_data": 130,
                        "y_data": 50
                    },
                    {
                        "x_data": 131,
                        "y_data": 50
                    },
                    {
                        "x_data": 132,
                        "y_data": 50
                    },
                    {
                        "x_data": 133,
                        "y_data": 50
                    },
                    {
                        "x_data": 134,
                        "y_data": 50
                    },
                    {
                        "x_data": 135,
                        "y_data": 50
                    },
                    {
                        "x_data": 136,
                        "y_data": 50
                    },
                    {
                        "x_data": 137,
                        "y_data": 50
                    },
                    {
                        "x_data": 138,
                        "y_data": 50
                    },
                    {
                        "x_data": 139,
                        "y_data": 50
                    },
                    {
                        "x_data": 140,
                        "y_data": 50
                    },
                    {
                        "x_data": 141,
                        "y_data": 50
                    },
                    {
                        "x_data": 142,
                        "y_data": 50
                    },
                    {
                        "x_data": 143,
                        "y_data": 50
                    },
                    {
                        "x_data": 144,
                        "y_data": 50
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 150,
                        "y_data": 80
                    },
                    {
                        "x_data": 151,
                        "y_data": 80
                    },
                    {
                        "x_data": 152,
                        "y_data": 80
                    },
                    {
                        "x_data": 153,
                        "y_data": 80
                    },
                    {
                        "x_data": 154,
                        "y_data": 80
                    },
                    {
                        "x_data": 155,
                        "y_data": 80
                    },
                    {
                        "x_data": 156,
                        "y_data": 80
                    },
                    {
                        "x_data": 157,
                        "y_data": 80
                    },
                    {
                        "x_data": 158,
                        "y_data": 80
                    },
                    {
                        "x_data": 159,
                        "y_data": 80
                    },
                    {
                        "x_data": 160,
                        "y_data": 80
                    },
                    {
                        "x_data": 161,
                        "y_data": 80
                    },
                    {
                        "x_data": 162,
                        "y_data": 80
                    },
                    {
                        "x_data": 163,
                        "y_data": 80
                    },
                    {
                        "x_data": 164,
                        "y_data": 80
                    },
                    {
                        "x_data": 165,
                        "y_data": 80
                    },
                    {
                        "x_data": 166,
                        "y_data": 80
                    },
                    {
                        "x_data": 167,
                        "y_data": 80
                    },
                    {
                        "x_data": 168,
                        "y_data": 80
                    },
                    {
                        "x_data": 169,
                        "y_data": 80
                    },
                    {
                        "x_data": 170,
                        "y_data": 80
                    },
                    {
                        "x_data": 171,
                        "y_data": 80
                    },
                    {
                        "x_data": 172,
                        "y_data": 80
                    },
                    {
                        "x_data": 173,
                        "y_data": 80
                    },
                    {
                        "x_data": 174,
                        "y_data": 80
                    },
                    {
                        "x_data": 175,
                        "y_data": 80
                    },
                    {
                        "x_data": 176,
                        "y_data": 80
                    },
                    {
                        "x_data": 177,
                        "y_data": 80
                    },
                    {
                        "x_data": 178,
                        "y_data": 0
                    },
                    {
                        "x_data": 179,
                        "y_data": 80
                    },
                    {
                        "x_data": 180,
                        "y_data": 50
                    },
                    {
                        "x_data": 181,
                        "y_data": 50
                    },
                    {
                        "x_data": 182,
                        "y_data": 50
                    },
                    {
                        "x_data": 183,
                        "y_data": 50
                    },
                    {
                        "x_data": 184,
                        "y_data": 50
                    },
                    {
                        "x_data": 185,
                        "y_data": 50
                    },
                    {
                        "x_data": 186,
                        "y_data": 50
                    },
                    {
                        "x_data": 187,
                        "y_data": 50
                    },
                    {
                        "x_data": 188,
                        "y_data": 50
                    },
                    {
                        "x_data": 189,
                        "y_data": 50
                    },
                    {
                        "x_data": 190,
                        "y_data": 50
                    },
                    {
                        "x_data": 191,
                        "y_data": 50
                    },
                    {
                        "x_data": 192,
                        "y_data": 50
                    },
                    {
                        "x_data": 193,
                        "y_data": 50
                    },
                    {
                        "x_data": 194,
                        "y_data": 50
                    },
                    {
                        "x_data": 195,
                        "y_data": 50
                    },
                    {
                        "x_data": 196,
                        "y_data": 50
                    },
                    {
                        "x_data": 197,
                        "y_data": 50
                    },
                    {
                        "x_data": 198,
                        "y_data": 50
                    },
                    {
                        "x_data": 199,
                        "y_data": 50
                    },
                    {
                        "x_data": 200,
                        "y_data": 10
                    },
                    {
                        "x_data": 201,
                        "y_data": 20
                    },
                    {
                        "x_data": 202,
                        "y_data": 20
                    },
                    {
                        "x_data": 203,
                        "y_data": 40
                    },
                    {
                        "x_data": 204,
                        "y_data": 70
                    },
                    {
                        "x_data": 205,
                        "y_data": 110
                    },
                    {
                        "x_data": 206,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and employee_id , and sort bars from high to low order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the first_name by a bar chart, and list in desc by the X.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and employee_id , and order FIRST_NAME in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and employee_id in a bar chart, and order FIRST_NAME in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and employee_id , and visualize them by a bar chart, rank by the names in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 206
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 203
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 205
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 202
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 201
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 178
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 204
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "body_builder"
        ],
        "db_id": "body_builder",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between People_ID and Total .",
            "What is the relationship between People_ID and Total ?",
            "Return a scatter chart about the correlation between People_ID and Total .",
            "Show me about the correlation between People_ID and Total in a scatter chart.",
            "A scatter chart shows the correlation between People_ID and Total .",
            "Show me a scatter plot of people id and total for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 317.5
                    },
                    {
                        "x_data": 2,
                        "y_data": 315
                    },
                    {
                        "x_data": 3,
                        "y_data": 315
                    },
                    {
                        "x_data": 5,
                        "y_data": 312.5
                    },
                    {
                        "x_data": 6,
                        "y_data": 292.5
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "People_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Total"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, could you show Y from high to low order please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, and could you display by the Y-axis in descending?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, rank total number in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and rank mean manager id from high to low order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, I want to order in desc by the mean manager id please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Master_Index",
            "CMI_Cross_References"
        ],
        "db_id": "local_govt_mdm",
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart, and rank by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Volkman, Mills and Ferry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Schmitt-Lang",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt, Kertzmann and Lubowitz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reynolds-McClure",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cmi_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(cmi_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Create a bar chart showing manager_id across last name, and could you sort by the Y from high to low?",
            "Give me a histogram, that simply displays the last name of the employee and the corresponding manager id, and display Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 200
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 145
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 121
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 114
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 108
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 103
                    },
                    {
                        "x_data": "King",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show all card type codes and the number of cards in each type by a bar chart, and I want to rank names in ascending order.",
            "Bar chart x axis card type code y axis the total number, and order by the X-axis from low to high.",
            "Return a histogram on what are the different card types, and how many cards are there of each?, and list in asc by the x axis please.",
            "Show all card type codes and the number of cards in each type Plot them as bar chart, rank from low to high by the x-axis.",
            "Display a bar chart for what are the different card types, and how many cards are there of each?, and I want to list bar from low to high order.",
            "What are the different card types, and how many cards are there of each, display card_type_code in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturer",
            "furniture_manufacte"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Find the number of funiture types produced by each manufacturer as well as the company names Show bar chart, and list in ascending by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chevrolet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chevrolet House",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jiaj",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tomorrow",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and I want to list mean organisation id in asc order please.",
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, I want to show in asc by the Y.",
            "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, I want to show in asc by the Y.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and I want to show in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "eius",
                        "y_data": 2
                    },
                    {
                        "x_data": "a",
                        "y_data": 9
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 9.5
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 10
                    },
                    {
                        "x_data": "quo",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(organisation_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Give a bar chart showing how many shops in each carrier, display in asc by the y axis.",
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?, sort in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell Mobility",
                        "y_data": 3
                    },
                    {
                        "x_data": "Vodafone AU",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Carrier)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Give me a bar chart about the number of customer addresses in each premises type, and could you sort by the y-axis in descending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Warehouse",
                        "y_data": 6
                    },
                    {
                        "x_data": "Office",
                        "y_data": 6
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "For each phone, show its names and total number of stocks Visualize by bar chart, and rank num of stock in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 4324
                    },
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2914
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2540
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 874
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.Num_of_stock)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, and rank in asc by the sum employee id please.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart, rank in asc by the sum employee id please.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart, list in asc by the total number.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and list in asc by the total number.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, show by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    },
                    {
                        "x_data": "June",
                        "y_data": 1288
                    },
                    {
                        "x_data": "July",
                        "y_data": 3763
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4960
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 5138
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, list Y in descending order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, and I want to order by the y-axis from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the headquarter , and group by attribute headquarter, and order Y-axis in desc order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, and order by the y-axis in descending.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of manufacturer , and group by attribute headquarter, and visualize them by a bar chart, and order by the y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find founder and the average of price , and group by attribute founder, and visualize them by a bar chart, and list from low to high by the y-axis please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of price , and group by attribute founder in a bar chart, list y-axis in asc order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the founder , and group by attribute founder by a bar chart, and order by the the average of price in asc please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of price , and group by attribute founder, order by the the average of price in asc please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the average of price , and group by attribute founder, list in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 150
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 150
                    },
                    {
                        "x_data": "James",
                        "y_data": 162
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 240
                    },
                    {
                        "x_data": "John",
                        "y_data": 240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of revenue , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 100
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 75
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees in the Finance department, compare the total number of different job id using a bar chart, and order from low to high by the bar.",
            "Give me a bar chart that groups and count the job id for all employees in the Finance department, and display in ascending by the JOB_ID."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 29
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Bar graph to show how many asset make from different asset make, and show Y-axis from high to low order.",
            "Show the number of assets and group by asset make in a bar chart, and show in descending by the how many asset make."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "RU",
                        "y_data": 3
                    },
                    {
                        "x_data": "IN",
                        "y_data": 2
                    },
                    {
                        "x_data": "FR",
                        "y_data": 2
                    },
                    {
                        "x_data": "DE",
                        "y_data": 2
                    },
                    {
                        "x_data": "CN",
                        "y_data": 2
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT",
                        "y_data": 1
                    },
                    {
                        "x_data": "IE",
                        "y_data": 1
                    },
                    {
                        "x_data": "GB",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "asset_make",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(asset_make)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, and order in ascending by the Y-axis.",
            "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, and I want to list in ascending by the y axis.",
            "Return the number of the lot details of lots that belong to investors with details \"l\"?, sort total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "h",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "z",
                        "y_data": 1
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "How many tourist attractions for each attraction name? Visualize by a bar chart, sort the total number in desc order please.",
            "A bar chart showing the number of tourist attractions for each attraction name, and order y-axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "exploration trial",
                        "y_data": 4
                    },
                    {
                        "x_data": "US museum",
                        "y_data": 4
                    },
                    {
                        "x_data": "jungle cruise",
                        "y_data": 3
                    },
                    {
                        "x_data": "parking",
                        "y_data": 2
                    },
                    {
                        "x_data": "fun games",
                        "y_data": 2
                    },
                    {
                        "x_data": "presidents hall",
                        "y_data": 1
                    },
                    {
                        "x_data": "history gallery",
                        "y_data": 1
                    },
                    {
                        "x_data": "fun shops",
                        "y_data": 1
                    },
                    {
                        "x_data": "flying elephant",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK gallery",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "For players whose occupation is not \"Researcher\", tell me the distribution of their residences with a bar chart, and I want to show y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birtle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brandon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oakbank",
                        "y_data": 1
                    },
                    {
                        "x_data": "Selkirk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winnipeg",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Residence",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Residence)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, could you sort from high to low by the first_name please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vergie",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tyler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rosalee",
                        "y_data": 0
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 0
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Laury",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jailyn",
                        "y_data": 0
                    },
                    {
                        "x_data": "German",
                        "y_data": 1
                    },
                    {
                        "x_data": "Geovany",
                        "y_data": 0
                    },
                    {
                        "x_data": "Ericka",
                        "y_data": 0
                    },
                    {
                        "x_data": "Elinore",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What are the number of dates of birth of all the guests whose gender is \"Male\"?, show by the x axis in desc.",
            "Return the number of the date of birth for all the guests with gender code \"Male\", list x axis in descending order.",
            "What are dates of birth of all the guests whose gender is \"Male\", and count them by a line chart, and I want to show by the x-axis from high to low.",
            "A line chart for returning the number of the date of birth for all the guests with gender code \"Male\", sort by the X in descending.",
            "Return the date of birth for all the guests with gender code \"Male\", and count them by a line chart, and display from high to low by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013~2015",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010~2012",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007~2009",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004~2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_birth",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "List the number of games in each season and group by home team in a group line chart.",
            "I want to see trend the number of season over season by Home_team"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007-01-01",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 2,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 2,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 2,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 2,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "\u539f\u59cb\u6570\u636e\u6ca1\u6709weekday\u4fe1\u606f",
            "Give the years and official names of the cities of each competition."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What is the name of each course and the corresponding number of student enrollment Show bar chart, I want to display course_name in desc order.",
            "Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, show by the names in descending please.",
            "List the name and the number of enrolled student for each course in a bar chart, and could you show in desc by the X-axis?",
            "Return a histogram on what is the name of each course and the corresponding number of student enrollment?, could you list in desc by the x axis?",
            "List the name and the number of enrolled student for each course Show bar chart, show in desc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern Arts",
                        "y_data": 2
                    },
                    {
                        "x_data": "database",
                        "y_data": 2
                    },
                    {
                        "x_data": "advanced database",
                        "y_data": 2
                    },
                    {
                        "x_data": "Writing in French",
                        "y_data": 2
                    },
                    {
                        "x_data": "Spanish",
                        "y_data": 2
                    },
                    {
                        "x_data": "Japanese",
                        "y_data": 2
                    },
                    {
                        "x_data": "French",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chinese Painting",
                        "y_data": 1
                    },
                    {
                        "x_data": "Art history",
                        "y_data": 2
                    },
                    {
                        "x_data": "AI",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "A bar chart showing the number of debates in each venue for those on the affirmative side, and rank by the the number of venue in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergy types and the number of allergies in each type in a bar chart, display names in ascending order.",
            "what are the allergy types and how many allergies correspond to each one?, and order in ascending by the x-axis.",
            "Show all allergy types and the number of allergies in each type Plot them as bar chart, and rank bars in ascending order.",
            "Bar graph to show the total number from different allergytype, and show from low to high by the x axis.",
            "Return a bar chart on what are the allergy types and how many allergies correspond to each one?, and display from low to high by the X-axis.",
            "What are the allergy types and how many allergies correspond to each one, show from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "food",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the booking status code and the corresponding number of bookings in a bar chart.",
            "Show the booking status code and the corresponding number of bookings. Show bar chart.",
            "Return a bar chart on how many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "Show me a bar chart for how many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings with a bar chart.",
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "Plot the total number by grouped by booking status code as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Confirmed",
                        "y_data": 7
                    },
                    {
                        "x_data": "Provisional",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_status_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, show the price and group them by cinema name in a stacked bar chart, and list Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Codling",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 9,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 12,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 15,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 9,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 12,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 12,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 8,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me a bar chart for all_games_percent of each team name, could you list in asc by the y axis please?",
            "Find Team_Name and All_Games_Percent , and visualize them by a bar chart, could you list in asc by the y axis please?",
            "Give me the comparison about All_Games_Percent over the Team_Name , show in asc by the All_Games_Percent.",
            "Draw a bar chart about the distribution of Team_Name and All_Games_Percent , order by the All_Games_Percent in ascending.",
            "Return a bar chart about the distribution of Team_Name and All_Games_Percent , and order y-axis from low to high order.",
            "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , and I want to display in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.6
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.946
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Year interval, rank by the y axis from high to low please.",
            "Bar chart x axis date moved in y axis how many date moved in, could you order by the total number in descending?",
            "Group and count the move in date in a bar chart, and I want to bin the X into Year interval, and I want to sort y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015",
                        "y_data": 9
                    },
                    {
                        "x_data": "2016",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of All_Road and ACC_Percent , and rank in desc by the X-axis.",
            "Draw a bar chart about the distribution of All_Road and ACC_Percent , order X from high to low order.",
            "Show me about the distribution of All_Road and ACC_Percent in a bar chart, and show from high to low by the X please.",
            "Give me the comparison about ACC_Percent over the All_Road by a bar chart, show bar in desc order.",
            "Show me acc_percent by all road in a histogram, show from high to low by the X please.",
            "A bar chart shows the distribution of All_Road and ACC_Percent , and order X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.563
                    },
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Stacked bar of class and the number of class colored by Rank, sort Y in descending order.",
            "A stacked bar graph shows the total number of captains categorize by ranks of different classes, I want to order by the how many class in desc.",
            "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart, rank by the how many class in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 1,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 1,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 1,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 2,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 1,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 1,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Midshipman"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Order_items"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show order ids and the total quantity in each order by a scatter chart.",
            "Show order ids and the total quantity in each order. Visualize by scatter chart.",
            "Give the order ids for all orders, as well as the total product quantity in each in a scatter chart",
            "Give the order ids for all orders, as well as the total product quantity in each.",
            "Show me a scatter plot of order id and total number of product quantity for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 12
                    },
                    {
                        "x_data": 2,
                        "y_data": 3
                    },
                    {
                        "x_data": 4,
                        "y_data": 17
                    },
                    {
                        "x_data": 10,
                        "y_data": 4
                    },
                    {
                        "x_data": 12,
                        "y_data": 1
                    },
                    {
                        "x_data": 13,
                        "y_data": 18
                    },
                    {
                        "x_data": 14,
                        "y_data": 1
                    },
                    {
                        "x_data": 15,
                        "y_data": 9
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "order_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(product_quantity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "trust"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "Find each target user's name and average trust score Visualize by bar chart, and sort by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Terry",
                        "y_data": 5
                    },
                    {
                        "x_data": "Roxi",
                        "y_data": 10
                    },
                    {
                        "x_data": "Rosie",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 8
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 4.666666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(trust)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A pie chart listing the number of faults for different description of skills required to fix them."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Electrical",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 5
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 7
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the change of commission_pct over hire_date in a line chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of commission_pct over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the trend of commission_pct over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about commission_pct over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of commission_pct over hire_date",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, for commission_pct, hire_date, visualize the trend."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all cities and corresponding number of students Plot them as bar chart, and sort x-axis from low to high order.",
            "Show all cities and corresponding number of students by a bar chart, could you order by the bars from low to high?",
            "Plot the total number by grouped by city code as a bar graph, display by the city_code in ascending.",
            "How many students live in each city, and I want to display from low to high by the X.",
            "Return a histogram on how many students live in each city?, and I want to display from low to high by the X.",
            "A bar chart about how many students live in each city?, I want to rank by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 1
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total number of students in each department Show bar chart, and I want to show in descending by the total number.",
            "Visualize a bar chart for how many students are in each department?, and could you sort y axis in descending order?",
            "how many students are in each department?, and could you rank by the the total number in desc?",
            "How many students are in each department Plot them as bar chart, and I want to show in descending by the total number.",
            "Give me a bar chart for the total number of each dept name, and I want to list y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 120
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 119
                    },
                    {
                        "x_data": "History",
                        "y_data": 117
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 109
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 108
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 106
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 105
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 99
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 98
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 97
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 96
                    },
                    {
                        "x_data": "English",
                        "y_data": 95
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 92
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 92
                    },
                    {
                        "x_data": "Math",
                        "y_data": 91
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 86
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 85
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 85
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show all the ranks and the number of male and female faculty for each rank in a bar chart.",
            "How many faculty members do we have for each rank and gender? Plot them as bar chart.",
            "Stacked bar chart of the total number for with each Sex in each rank"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 7,
                        "classify": "M"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 12,
                        "classify": "M"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 5,
                        "classify": "M"
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27,
                        "classify": "M"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings for each weekday and bin booking start date by weekday interval in a bar chart.",
            "How many apartment bookings for each weekday? Draw a bar chart binning booking start date by weekday interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and manager_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and manager_id , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and manager_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grant",
                        "y_data": 149
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 100
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 201
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 101
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 101
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 101
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Reutrn a bar chart to bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons, rank y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 10
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 20
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 20
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Please give me a bar chart that counts the number of grape of wine, list in ascending by the total number.",
            "Give me a bar chart for how many grape of each grape, and sort by the total number in asc.",
            "What is the number of different grapes of each wine? Show me a bar chart, and sort y axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Barbera",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cabernet Franc",
                        "y_data": 1
                    },
                    {
                        "x_data": "Malbec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marsanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Roussanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sangiovese",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tempranillo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Viognier",
                        "y_data": 1
                    },
                    {
                        "x_data": "Petite Sirah",
                        "y_data": 6
                    },
                    {
                        "x_data": "Grenache",
                        "y_data": 10
                    },
                    {
                        "x_data": "Merlot",
                        "y_data": 10
                    },
                    {
                        "x_data": "Sauvignon Blanc",
                        "y_data": 46
                    },
                    {
                        "x_data": "Syrah",
                        "y_data": 61
                    },
                    {
                        "x_data": "Cabernet Sauvingnon",
                        "y_data": 68
                    },
                    {
                        "x_data": "Zinfandel",
                        "y_data": 78
                    },
                    {
                        "x_data": "Chardonnay",
                        "y_data": 104
                    },
                    {
                        "x_data": "Pinot Noir",
                        "y_data": 109
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Grape",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Grape)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and commission_pct , I want to sort X-axis from high to low order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the email , rank in desc by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the email by a bar chart, and sort by the EMAIL from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and commission_pct , and I want to sort X-axis from high to low order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and commission_pct , and visualize them by a bar chart, I want to sort X-axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "WGIETZ",
                        "y_data": 0
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 0
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 0
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 0
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 0
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Compare the smallest enrollment of schools in each state using a bar chart, list total number in asc order.",
            "What is the name of the school that has the smallest enrollment in each state?, and could you show Y-axis in ascending order?",
            "Return a bar graph for the name of the school that has the smallest enrollment in each state, and list total number in asc order.",
            "Bar graph to show minimal enr from different cname, and sort in asc by the minimal enr."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ASU",
                        "y_data": 12000
                    },
                    {
                        "x_data": "LSU",
                        "y_data": 18000
                    },
                    {
                        "x_data": "FSU",
                        "y_data": 19000
                    },
                    {
                        "x_data": "OU",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course description, could you order by the Y-axis in descending?",
            "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the teacher's first name and group by course description, and rank from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE",
            "ENROLLED_IN"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "What is the number of each course name that have at least five enrollments? Show me a bar chart.",
            "Give the number of each course name with at least five enrollments. Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ALGORITHMS I",
                        "y_data": 1
                    },
                    {
                        "x_data": "APPLIED STATISTICS AND DATA ANALYSIS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIRCUITS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMBINATORIAL ANALYSIS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMPUTER SYSTEM FUNDAMENTALS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMPUTER VISION",
                        "y_data": 1
                    },
                    {
                        "x_data": "DATA STRUCTURES in JAVA",
                        "y_data": 1
                    },
                    {
                        "x_data": "DATABASE SYSTEMS",
                        "y_data": 2
                    },
                    {
                        "x_data": "DISTRIBUTED SYSTEMS",
                        "y_data": 2
                    },
                    {
                        "x_data": "EXPLORING THE INTERNET",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRO TO NATURAL LANGUAGE PROCESSING",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRO TO PROGRAMMING IN JAVA",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRODUCTION TO PROBABILITY",
                        "y_data": 1
                    },
                    {
                        "x_data": "MULTIMEDIA COMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "QUANTITATIVE MEDICAL COMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "SUPERCOMPUTING",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Please draw a histogram to show the total number of participants in each type code.",
            "Compare the number of participants in each participant type code using a bar chart.",
            "Bar chart x axis participant type code y axis the number of participant type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Organizer",
                        "y_data": 7
                    },
                    {
                        "x_data": "Participant",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Participant_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates that have an average sea level pressure between 30.3 and 31?",
            "What are the dates in which the mean sea level pressure was between 30.3 and 31, and count them by a line chart",
            "A line chart for what are the number of the dates in which the mean sea level pressure was between 30.3 and 31?",
            "What are the number of the dates in which the mean sea level pressure was between 30.3 and 31?",
            "What are the dates that have an average sea level pressure between 30.3 and 31, and count them by a line chart",
            "A line chart for what are the number of the dates that have an average sea level pressure between 30.3 and 31?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-12-09",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-10",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-12-13",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-12-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-23",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-01-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-01-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-01-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-11-23",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-11-24",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-11-25",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-12-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-12-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-12-28",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-01-04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-01-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-01-23",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-02-24",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-03-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-04-14",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of price , and group by attribute founder in a bar chart, could you order names from low to high order?",
            "For those records from the products and each product's manufacturer, find founder and the sum of price , and group by attribute founder, and visualize them by a bar chart, and list by the X in ascending please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the founder , and group by attribute founder by a bar chart, order by the x-axis in asc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of price , and group by attribute founder, and order by the x-axis in asc.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of price , and group by attribute founder, and order by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 240
                    },
                    {
                        "x_data": "James",
                        "y_data": 486
                    },
                    {
                        "x_data": "John",
                        "y_data": 240
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 150
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 450
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 125
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergies with number of students affected with a bar chart.",
            "Show all allergies with number of students affected. Show bar chart.",
            "Return a bar chart on how many students have each different allergy?",
            "How many students have each different allergy. Show bar chart.",
            "Show the total number from each allergy"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anchovies",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 3
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 4
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nuts",
                        "y_data": 11
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 6
                    },
                    {
                        "x_data": "Rodent",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 4
                    },
                    {
                        "x_data": "Soy",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "What is the number of start dates for incidents with incident type code \"NOISE\"? Bin by year and return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 4
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_start",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_start)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses are in the Psychology department in each building? Draw a bar chart, and could you list X-axis in desc order please?",
            "Find the number of courses offered by Psychology department in each building with a bar chart, could you sort from high to low by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Main",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "accelerator_compatible_browser",
            "browser",
            "web_client_accelerator"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "A pie chart showing the proportion of the number of browsers for each accelerator."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CACHEbox",
                        "y_data": 2
                    },
                    {
                        "x_data": "CProxy",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fasterfox",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nitro",
                        "y_data": 1
                    },
                    {
                        "x_data": "fasTun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Find the ids and names of stations from which at least 200 trips started.",
            "Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?",
            "what are the ids and names of all start stations that were the beginning of at least 200 trips?",
            "What are the ids and names of all start stations that were the beginning of at least 200 trips. Show bar chart.",
            "Show me start_station_id by start station name in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2nd at Folsom",
                        "y_data": 62
                    },
                    {
                        "x_data": "2nd at South Park",
                        "y_data": 64
                    },
                    {
                        "x_data": "2nd at Townsend",
                        "y_data": 61
                    },
                    {
                        "x_data": "Beale at Market",
                        "y_data": 56
                    },
                    {
                        "x_data": "Embarcadero at Bryant",
                        "y_data": 54
                    },
                    {
                        "x_data": "Embarcadero at Folsom",
                        "y_data": 51
                    },
                    {
                        "x_data": "Embarcadero at Sansome",
                        "y_data": 60
                    },
                    {
                        "x_data": "Grant Avenue at Columbus Avenue",
                        "y_data": 73
                    },
                    {
                        "x_data": "Harry Bridges Plaza (Ferry Building)",
                        "y_data": 50
                    },
                    {
                        "x_data": "Howard at 2nd",
                        "y_data": 63
                    },
                    {
                        "x_data": "Market at 10th",
                        "y_data": 67
                    },
                    {
                        "x_data": "Market at 4th",
                        "y_data": 76
                    },
                    {
                        "x_data": "Market at Sansome",
                        "y_data": 77
                    },
                    {
                        "x_data": "Powell Street BART",
                        "y_data": 39
                    },
                    {
                        "x_data": "San Francisco Caltrain (Townsend at 4th)",
                        "y_data": 70
                    },
                    {
                        "x_data": "San Francisco Caltrain 2 (330 Townsend)",
                        "y_data": 69
                    },
                    {
                        "x_data": "Steuart at Market",
                        "y_data": 74
                    },
                    {
                        "x_data": "Temporary Transbay Terminal (Howard at Beale)",
                        "y_data": 55
                    },
                    {
                        "x_data": "Townsend at 7th",
                        "y_data": 65
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "start_station_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "start_station_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "mission"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of each fate? Give me the result in a bar graph, list X-axis in asc order.",
            "Compare the total number of each fate with a bar chart, list X-axis in asc order.",
            "Show the number of fate from each fate, sort x-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Decommissioned 1950",
                        "y_data": 2
                    },
                    {
                        "x_data": "Decommissioned 1959",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decommissioned 1960",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lost (burned and sunk) 1933",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lost (burned) 1931",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retired 1939",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fate",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "What are the number of the descriptions of the service types with product price above 100?, show in desc by the x-axis.",
            "What are the descriptions of the service types with product price above 100, and count them by a bar chart, and I want to order in desc by the names.",
            "A bar chart for giveing me the number of the descriptions of the service types that cost more than 100, and sort x-axis from high to low order please.",
            "Give me the descriptions of the service types that cost more than 100, and count them by a bar chart, and display by the bar in descending.",
            "A bar chart for what are the number of the descriptions of the service types with product price above 100?, and order by the x axis in descending.",
            "Give me the number of the descriptions of the service types that cost more than 100, could you sort X-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "provide photo service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide filming service",
                        "y_data": 3
                    },
                    {
                        "x_data": "provide dinning service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide adv promoting service",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Service_Type_Description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Service_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal",
            "journal",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, and I want to order by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Miami Dolphins",
                        "y_data": 798
                    },
                    {
                        "x_data": "Jacksonville Jaguars",
                        "y_data": 1232
                    },
                    {
                        "x_data": "at Pittsburgh Steelers",
                        "y_data": 1763
                    },
                    {
                        "x_data": "at Oakland Raiders",
                        "y_data": 1934
                    },
                    {
                        "x_data": "Green Bay Packers",
                        "y_data": 2804
                    },
                    {
                        "x_data": "at Cincinnati Bengals",
                        "y_data": 3421
                    },
                    {
                        "x_data": "Cleveland Browns",
                        "y_data": 3798
                    },
                    {
                        "x_data": "Tampa Bay Buccaneers",
                        "y_data": 4798
                    },
                    {
                        "x_data": "Baltimore Ravens",
                        "y_data": 6532
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Theme",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Sales"
                }
            }
        }
    },
    {
        "tables_used": [
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show each premise type and the number of premises in that type with a bar chart, display from low to high by the total number.",
            "Show each premise type and the number of premises in that type Visualize by bar chart, and show by the Y in ascending please.",
            "Create a bar chart showing the total number across premises type, I want to order Y in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Residence",
                        "y_data": 4
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 4
                    },
                    {
                        "x_data": "Office",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart, and I want to order in ascending by the x-axis.",
            "Show the number of dogs that received a treatment departed in each day in a bar chart, sort by the x axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-24",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-25",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the student ID and middle name for all the students with at most two enrollments.",
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?",
            "what are the student IDs and middle names of the students enrolled in at most two courses?",
            "What are the student IDs and middle names of the students enrolled in at most two courses."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Luella",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brandt",
                        "y_data": 3
                    },
                    {
                        "x_data": "Casimir",
                        "y_data": 4
                    },
                    {
                        "x_data": "Asa",
                        "y_data": 6
                    },
                    {
                        "x_data": "Kailey",
                        "y_data": 9
                    },
                    {
                        "x_data": "Vicente",
                        "y_data": 10
                    },
                    {
                        "x_data": "Kolby",
                        "y_data": 11
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 12
                    },
                    {
                        "x_data": "Camilla",
                        "y_data": 13
                    },
                    {
                        "x_data": "Ursula",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "middle_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, I want to display in ascending by the JOB_ID.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id, I want to sort in asc by the X-axis.",
            "For those employees who was hired before 2002-06-21, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart, display by the JOB_ID in ascending.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and order names from low to high order please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, sort by the x-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.33333333333333
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, and rank Y-axis in descending order.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, and rank in descending by the y-axis.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, display by the Y-axis in desc.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time, rank in desc by the total number.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and display by the Y-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 190.2962962962963
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 160
                    },
                    {
                        "x_data": "July",
                        "y_data": 129.75862068965517
                    },
                    {
                        "x_data": "June",
                        "y_data": 107.33333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CUSTOMER",
            "INVOICE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart",
            "What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart",
            "What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?",
            "A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "InvoiceDate",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(InvoiceDate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, group states and count them in a bar chart, display y-axis in desc order please.",
            "Bar chart of the number of state from each state, and show by the y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "NY",
                        "y_data": 2
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "CA",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "How many parties of the time they took office, binning the took office into WEEKDAY interval",
            "Bar graph to show the number of took office from different took office"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Took_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Took_office)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "What is the number of players who have points less than 30 for each position Plot them as bar chart, list in asc by the x axis please.",
            "what is the number of players who have points less than 30 for each position?, and list x axis in ascending order.",
            "Give me a histogram for what is the number of players who have points less than 30 for each position?, and show X from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 3
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the job_id by a bar chart, list names in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and department_id , sort from low to high by the JOB_ID.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of job_id and department_id , and I want to display from low to high by the names.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and department_id , and visualize them by a bar chart, could you show in ascending by the x-axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and department_id in a bar chart, order by the bar in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "track"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Show names and seatings for all tracks opened after 2000 by a pie chart.",
            "Show names and seatings for all tracks opened after 2000.",
            "Show me the proportion on what are the names and seatings for all tracks opened after 2000?",
            "Visualize a pie chart with what are the names and seatings for all tracks opened after 2000?",
            "What are the names and seatings for all tracks opened after 2000, ordered by seating. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chicagoland Speedway",
                        "y_data": 75000
                    },
                    {
                        "x_data": "Kansas Speedway",
                        "y_data": 81687
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Seating"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "Draw a bar chart of continent versus mean lifeexpectancy, and could you show from low to high by the total number?",
            "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72, could you show from low to high by the total number?",
            "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy, and list y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Africa",
                        "y_data": 52.57192982456139
                    },
                    {
                        "x_data": "Asia",
                        "y_data": 67.44117647058825
                    },
                    {
                        "x_data": "Oceania",
                        "y_data": 69.715
                    },
                    {
                        "x_data": "South America",
                        "y_data": 70.94615384615386
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(LifeExpectancy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts for each customer in a bar chart grouping by customer's last name.",
            "How many accounts for each customer? Show a bar chart that groups by customer's last name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Schaefer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Leuschke",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keeling",
                        "y_data": 4
                    },
                    {
                        "x_data": "Ruecker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Muller",
                        "y_data": 1
                    },
                    {
                        "x_data": "Auer",
                        "y_data": 4
                    },
                    {
                        "x_data": "Boyle",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Draw a bar chart about the distribution of personal_name and author_id .",
            "Return a bar chart about the distribution of personal_name and author_id .",
            "Visualize a bar chart about the distribution of personal_name and author_id .",
            "Show me about the distribution of personal_name and author_id in a bar chart.",
            "A bar chart shows the distribution of personal_name and author_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adolf",
                        "y_data": 6
                    },
                    {
                        "x_data": "Cathrine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ciara",
                        "y_data": 11
                    },
                    {
                        "x_data": "Darius",
                        "y_data": 3
                    },
                    {
                        "x_data": "Deja",
                        "y_data": 10
                    },
                    {
                        "x_data": "Dusty",
                        "y_data": 14
                    },
                    {
                        "x_data": "Georgiana",
                        "y_data": 9
                    },
                    {
                        "x_data": "Julio",
                        "y_data": 4
                    },
                    {
                        "x_data": "Kelsie",
                        "y_data": 8
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 7
                    },
                    {
                        "x_data": "Madonna",
                        "y_data": 13
                    },
                    {
                        "x_data": "Retha",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shakira",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sheldon",
                        "y_data": 12
                    },
                    {
                        "x_data": "Yessenia",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "personal_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A line chart shows the trend of the amount of Start_from over Start_from bin start_from by time, could you display Start_from in descending order?",
            "Visualize a line chart about the change of the amount of Start_from over Start_from bin start_from by time, order X-axis in descending order.",
            "Can you draw the trend of the number of start from over the start from?, display x-axis in descending order.",
            "Show me the trend about the amount of Start_from over Start_from bin start_from by time with a line chart, and rank in desc by the Start_from.",
            "Return a line chart about the change of the amount of Start_from over Start_from bin start_from by time, and list by the X-axis in descending.",
            "Draw a line chart about the change of the amount of Start_from over Start_from bin start_from by time, display x-axis in descending order.",
            "Show me about the change of the amount of Start_from over Start_from bin start_from by time in a line chart, and list by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Allergy_Type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "List the last name of the students who do not have any food type allergy and count them in a bart chart, show Y-axis from low to high order.",
            "What is the last name of each student who is not allergic to any type of food? Count them with a bar chart, sort total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adams",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andreo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brody",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Davis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Epp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Goldman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thornton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wilson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Buildings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many buildings are managed by \"Kyle\"? Return a bar chart grouping by apartment type codes, list y-axis in asc order.",
            "Give me a bar chart showing the number of buildings managed by \"Kyle\" and group by apartment type codes, and could you rank from low to high by the total number?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Flat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Studio",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duplex",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the amount of job_id , and group by attribute job_id, and visualize them by a bar chart, and I want to list x axis in asc order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and sort by the X in ascending please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and sort JOB_ID in ascending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, sort JOB_ID in ascending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and sort in ascending by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stadium"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me a bar chart for how many stadiums does each country have?",
            "Draw a bar chart for how many stadiums does each country have?",
            "How many stadiums does each country have. Show bar chart.",
            "Show me the total number by country in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Azerbaijan",
                        "y_data": 1
                    },
                    {
                        "x_data": "England",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hungary",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 4
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Show me a bar chart for what are the ids and details of events that have more than one participants?, I want to show by the x axis in descending please.",
            "A bar chart about what are the ids and details of events that have more than one participants?, could you sort by the x axis in descending?",
            "What are the ids and details of events that have more than one participants, and I want to rank in descending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Success",
                        "y_data": 83
                    },
                    {
                        "x_data": "Fail",
                        "y_data": 70
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Event_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "A bar chart about how many captains are in each rank?, show from low to high by the Rank.",
            "Show the total number from each rank, and show in asc by the bar please.",
            "Count the number of captains that have each rank by a bar chart, and list by the X-axis in ascending.",
            "Count the number of captains that have each rank Visualize by bar chart, and show from low to high by the x axis please.",
            "How many captains are in each rank, and show from low to high by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril'."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bulgarian victory",
                        "y_data": 5
                    },
                    {
                        "x_data": "Two Year Truce",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "result",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "HOST"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "How many hosts does each nationality have? List the nationality and the count with a bar chart, and sort X-axis from high to low order.",
            "Bar chart x axis nationality y axis the total number, rank in desc by the x axis.",
            "A bar chart about how many hosts does each nationality have? List the nationality and the count, and order by the names from high to low.",
            "Return a histogram on how many hosts does each nationality have? List the nationality and the count, and sort X-axis from high to low order.",
            "Show different nationalities along with the number of hosts of each nationality Visualize by bar chart, and show from high to low by the X.",
            "How many hosts does each nationality have? List the nationality and the count Visualize by bar chart, and sort X-axis from high to low order.",
            "Show different nationalities along with the number of hosts of each nationality in a bar chart, order by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 8
                    },
                    {
                        "x_data": "Hungary",
                        "y_data": 1
                    },
                    {
                        "x_data": "Argentina",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Please tell me how many employees in the department 80 on each type of job titles using a bar chart, list total number in asc order.",
            "Compare the total number of different job titles for all those jobs in department 80 using a bar chart, show Y from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sales Manager",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 29
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_TITLE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For the top 3 days with the largest max gust speeds, show the date and average temperature with a bar chart.",
            "What is the date, average temperature for the days with the 3 largest maximum gust speeds? Just give me a histogram, please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-10-14",
                        "y_data": 64
                    },
                    {
                        "x_data": "2013-10-31",
                        "y_data": 59
                    },
                    {
                        "x_data": "2013-08-31",
                        "y_data": 68
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "mean_temperature_f"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and display by the bars in descending.",
            "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, display by the bars in descending.",
            "Bar chart x axis nationality y axis how many nationality, and sort in desc by the bar.",
            "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list by the bars in desc.",
            "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list by the bars in desc.",
            "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, show in descending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Member",
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Give me a histogram for how many members are in each party?, and could you list by the y-axis from high to low?",
            "How many members are in each party Show bar chart, and rank in desc by the y-axis.",
            "Return a bar chart on how many members are in each party?, could you list by the y-axis from high to low?",
            "Show all party names and the number of members in each party with a bar chart, and rank in desc by the y-axis.",
            "Show all party names and the number of members in each party Show bar chart, and rank in desc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3",
                        "y_data": 9
                    },
                    {
                        "x_data": "Progress Party",
                        "y_data": 4
                    },
                    {
                        "x_data": "Convention Peoples Party",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents for each document type name? Visualize by a pie chart.",
            "Return a pie chart showing the number of documents for each document type name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Book",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 3
                    },
                    {
                        "x_data": "Film",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paper",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "A pie chart showing the number of flights with price higher than 300 for each destination city.",
            "How many flights with price higher than 300 for each destination city? Return a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(destination)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the names of people and the number of times they have been on the affirmative side of debates, sort in desc by the y axis.",
            "Show the names of people and the number of times they have been on the affirmative side of debates by a bar chart, and rank the total number in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Give me a bar chart that the x-axis is the services and the Y is the count(services), and show by the Y-axis in asc.",
            "Draw a bar chart of services versus the number of services, and order by the Y-axis in ascending please.",
            "Group by services attribute in station table and compute the total number of services with a bar chart, and show by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London Overground",
                        "y_data": 1
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show different citizenships and the maximum net worth of singers of each citizenship, and rank by the bars from low to high.",
            "For each citizenship, what is the maximum net worth Visualize by bar chart, sort in asc by the bar.",
            "Show me maximal net worth millions by citizenship in a histogram, and show by the x-axis in ascending.",
            "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart, show by the x axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 17
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 17.4
                    },
                    {
                        "x_data": "France",
                        "y_data": 30
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 14.3
                    },
                    {
                        "x_data": "United States",
                        "y_data": 28.8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(Net_Worth_Millions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many engineers does each staff contact? Show a bar chart, and order from high to low by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rodger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oren",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kadin",
                        "y_data": 4
                    },
                    {
                        "x_data": "Edmond",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cyrus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Christophe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Berneice",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "staff_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(staff_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give the name of each department and the number of employees in each Plot them as bar chart, and could you display from low to high by the y-axis?",
            "Give the name of each department and the number of employees in each in a bar chart, and order by the y-axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Administration",
                        "y_data": 1
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 1
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 2
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 3
                    },
                    {
                        "x_data": "IT",
                        "y_data": 5
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 6
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 34
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all investor details, and count them by a bar chart, and order by the Y-axis in ascending.",
            "Plot the number of investor details by grouped by investor details as a bar graph, list in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "o",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "l",
                        "y_data": 2
                    },
                    {
                        "x_data": "w",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 2
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "body_builder"
        ],
        "db_id": "body_builder",
        "nl_queries": [
            "Draw a scatter chart about the correlation between Snatch and Total .",
            "Return a scatter chart about the correlation between Snatch and Total .",
            "A scatter chart shows the correlation between Snatch and Total .",
            "Show me about the correlation between Snatch and Total in a scatter chart.",
            "What is the relationship between Snatch and Total ?",
            "Scatter plot to show snatch on x axis and total on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 142.5,
                        "y_data": 317.5
                    },
                    {
                        "x_data": 137.5,
                        "y_data": 315
                    },
                    {
                        "x_data": 140,
                        "y_data": 315
                    },
                    {
                        "x_data": 137.5,
                        "y_data": 312.5
                    },
                    {
                        "x_data": 130,
                        "y_data": 292.5
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Snatch"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Total"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute headquarter in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer",
            "record",
            "event",
            "stadium"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find the number of the names of stadiums that some Australian swimmers have been to.",
            "Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart",
            "A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baku Olympic Stadium",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gazprom Arena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nou Mestalla",
                        "y_data": 2
                    },
                    {
                        "x_data": "Yubileyniy Stadium",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show first name and id for all customers with at least 2 accounts in a bar chart.",
            "Show first name and id for all customers with at least 2 accounts. Show bar chart.",
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?",
            "What are the first names and ids for customers who have two or more accounts."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Meaghan",
                        "y_data": 8
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 13
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the number of rooms for each bed type. Visualize by bar chart.",
            "A bar chart about what are the number of rooms for each bed type?",
            "Return a bar chart on what are the number of rooms for each bed type?",
            "What are the number of rooms for each bed type. Show bar chart.",
            "Create a bar chart showing the total number across bedtype"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Double",
                        "y_data": 2
                    },
                    {
                        "x_data": "King",
                        "y_data": 4
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Show the number of names of phones in a bar chart.",
            "I want to compare the number of the names of phones by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and list from high to low by the Team_ID.",
            "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, and list from high to low by the Team_ID.",
            "Give me the comparison about Team_ID over the ACC_Road , and group by attribute ACC_Home, and display Y in descending order.",
            "Stacked bar chart of team_id for with each ACC_Home in each acc road, display Y in descending order.",
            "Draw a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, list Y-axis in descending order.",
            "Show me about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home in a bar chart, list from high to low by the Team_ID."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 3,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, list by the x-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 4
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 4
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 3
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend, display by the date_of_transaction in desc.",
            "Plot how many date of transaction over date of transaction in a line chart, and list X-axis from high to low order.",
            "Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin, order in desc by the date_of_transaction."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2004",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 3
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 1
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 2
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 2
                    },
                    {
                        "x_data": "1977~1979",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show me the propotion of the journalist's nationality using a pie chart.",
            "Visualize a pie chart, count and group by nationality from the journalist table.",
            "Create a pie chart showing how many nationality across nationality."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 9
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and commission_pct , and I want to display from high to low by the PHONE_NUMBER.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and commission_pct , and visualize them by a bar chart, sort bar from high to low order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number , and I want to display from high to low by the PHONE_NUMBER.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and commission_pct , sort in desc by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number by a bar chart, list by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "603.123.6666",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 0
                    },
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 0.15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Bar graph to show mean memory in g from different carrier, and could you order from high to low by the Y-axis?",
            "Give me a histogram for what are the memories and carriers of phones?, and show Y in descending order.",
            "A bar chart about what are the memories and carriers of phones?, and show by the total number in desc.",
            "What are the memories and carriers of phones Show bar chart, and show by the mean memory in g in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 80
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 69.33333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "projects",
            "assignedto"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each, and list from high to low by the the total number .",
            "Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, order by the Y-axis in descending.",
            "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, and show total number in desc order.",
            "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, list from high to low by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 3
                    },
                    {
                        "x_data": "A Silver-Cleaning Battery",
                        "y_data": 2
                    },
                    {
                        "x_data": "Juicy: Extracting Apple Juice with Pectinase",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aerodynamics and Ice Hockey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "What are the names of technicians with the machine series that they repair? Show me how many machines for each technician's name.",
            "Give me a bar chart that group and count names of technicians with a series of machines they are assigned to repair."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the average amount payment as the Y-axis, sort by the y-axis from low to high.",
            "Calculate the average of amount for all the payments processed with Visa by each year using a bar chart, rank by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 7343
                    },
                    {
                        "x_data": "2017",
                        "y_data": 262456.6666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "assignedto",
            "projects",
            "scientists"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart",
            "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.",
            "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart",
            "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aerodynamics and Gas Mileage",
                        "y_data": 1
                    },
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and sort in asc by the X please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, rank from low to high by the JOB_ID.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, sort bar in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and sort bar in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, could you rank in ascending by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 101.5
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000, and display in descending by the total number.",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart, and I want to list by the Y in desc.",
            "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000, and could you rank by the y axis in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the trend about Shop_ID over Start_from .",
            "Show me about the change of Shop_ID over Start_from in a line chart.",
            "Visualize a line chart about the change of Shop_ID over Start_from .",
            "A line chart shows the trend of Shop_ID over Start_from .",
            "Return a line chart about the change of Shop_ID over Start_from .",
            "A line chart shows the change of Shop_ID over Start_from",
            "Can you draw the trend of shop_id over the start from?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 8
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 6
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Shop_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "bookings"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "How many bookings did each customer make? List the first name as the X-axis, and the count as the Y-axis in the bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rosalee",
                        "y_data": 4
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 3
                    },
                    {
                        "x_data": "Elinore",
                        "y_data": 2
                    },
                    {
                        "x_data": "German",
                        "y_data": 2
                    },
                    {
                        "x_data": "Layne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jamir",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Please give me a bar chart to show the distribution of results of all music festival, I want to rank from high to low by the X.",
            "Plot the number of result by grouped by result as a bar graph, and I want to rank from high to low by the X.",
            "Return the results of all music festivals using a bar chart, list in descending by the X.",
            "What is the distibution of results for each music festival? Could you show me the result with a bar chart, list from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nominated",
                        "y_data": 6
                    },
                    {
                        "x_data": "Awarded",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "players"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Show me a bar chart for how many players are there for each hand type?, could you list by the total number in asc?",
            "Bar chart x axis hand y axis the total number, and could you list from low to high by the total number?",
            "Find the number of players for each hand type Show bar chart, and could you list by the total number in asc?",
            "Return a histogram on how many players are there for each hand type?, could you list by the total number in asc?",
            "How many players are there for each hand type Visualize by bar chart, and I want to list by the Y-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "L",
                        "y_data": 487
                    },
                    {
                        "x_data": "",
                        "y_data": 954
                    },
                    {
                        "x_data": "R",
                        "y_data": 5028
                    },
                    {
                        "x_data": "U",
                        "y_data": 14193
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "hand",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and the sum of revenue , and group by attribute name, and visualize them by a bar chart, I want to sort Y-axis in asc order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of revenue , and group by attribute name in a bar chart, and rank by the total number in ascending please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the name , and group by attribute name, and list by the Y-axis in ascending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of revenue , and group by attribute name, order by the y-axis in ascending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name, list by the Y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "home_game"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "How many home games by each year (bin the year attr into weekdays interval)? Give me a line chart, list X-axis from low to high order.",
            "Visualize the general trend of how many year over the year, show x axis from low to high order.",
            "Return me a line chart to show the frequency of the year attribute by binning into a weekday interval, I want to display X-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1871~1884",
                        "y_data": 14
                    },
                    {
                        "x_data": "1885~1898",
                        "y_data": 14
                    },
                    {
                        "x_data": "1899~1912",
                        "y_data": 14
                    },
                    {
                        "x_data": "1913~1926",
                        "y_data": 14
                    },
                    {
                        "x_data": "1927~1940",
                        "y_data": 14
                    },
                    {
                        "x_data": "1941~1954",
                        "y_data": 14
                    },
                    {
                        "x_data": "1955~1968",
                        "y_data": 14
                    },
                    {
                        "x_data": "1969~1982",
                        "y_data": 14
                    },
                    {
                        "x_data": "1983~1996",
                        "y_data": 14
                    },
                    {
                        "x_data": "1997~2010",
                        "y_data": 14
                    },
                    {
                        "x_data": "2011~2014",
                        "y_data": 4
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "How many total amounts of payments by each method code? You can give me a bar chart.",
            "Please use a bar chart to show the total amount of payment by each payment method code.",
            "Bar chart of sum amount payment from each payment method code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American Express",
                        "y_data": 177130
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 232825
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 2531865
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 794713
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize the relationship between salary and department_id .",
            "For those employees who did not have any job in the past, a scatter chart shows the correlation between salary and department_id .",
            "For those employees who did not have any job in the past, visualize a scatter chart about the correlation between salary and department_id .",
            "For those employees who did not have any job in the past, show me about the correlation between salary and department_id in a scatter chart.",
            "For those employees who did not have any job in the past, return a scatter chart about the correlation between salary and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 90
                    },
                    {
                        "x_data": 9000,
                        "y_data": 60
                    },
                    {
                        "x_data": 6000,
                        "y_data": 60
                    },
                    {
                        "x_data": 4800,
                        "y_data": 60
                    },
                    {
                        "x_data": 4800,
                        "y_data": 60
                    },
                    {
                        "x_data": 4200,
                        "y_data": 60
                    },
                    {
                        "x_data": 12000,
                        "y_data": 100
                    },
                    {
                        "x_data": 9000,
                        "y_data": 100
                    },
                    {
                        "x_data": 8200,
                        "y_data": 100
                    },
                    {
                        "x_data": 7700,
                        "y_data": 100
                    },
                    {
                        "x_data": 7800,
                        "y_data": 100
                    },
                    {
                        "x_data": 6900,
                        "y_data": 100
                    },
                    {
                        "x_data": 3100,
                        "y_data": 30
                    },
                    {
                        "x_data": 2900,
                        "y_data": 30
                    },
                    {
                        "x_data": 2800,
                        "y_data": 30
                    },
                    {
                        "x_data": 2600,
                        "y_data": 30
                    },
                    {
                        "x_data": 2500,
                        "y_data": 30
                    },
                    {
                        "x_data": 8000,
                        "y_data": 50
                    },
                    {
                        "x_data": 8200,
                        "y_data": 50
                    },
                    {
                        "x_data": 6500,
                        "y_data": 50
                    },
                    {
                        "x_data": 5800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2700,
                        "y_data": 50
                    },
                    {
                        "x_data": 2400,
                        "y_data": 50
                    },
                    {
                        "x_data": 2200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3300,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3300,
                        "y_data": 50
                    },
                    {
                        "x_data": 2900,
                        "y_data": 50
                    },
                    {
                        "x_data": 2400,
                        "y_data": 50
                    },
                    {
                        "x_data": 2200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3600,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2700,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 3500,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 14000,
                        "y_data": 80
                    },
                    {
                        "x_data": 13500,
                        "y_data": 80
                    },
                    {
                        "x_data": 12000,
                        "y_data": 80
                    },
                    {
                        "x_data": 11000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10500,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8000,
                        "y_data": 80
                    },
                    {
                        "x_data": 7500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8000,
                        "y_data": 80
                    },
                    {
                        "x_data": 7500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7200,
                        "y_data": 80
                    },
                    {
                        "x_data": 6800,
                        "y_data": 80
                    },
                    {
                        "x_data": 6400,
                        "y_data": 80
                    },
                    {
                        "x_data": 6200,
                        "y_data": 80
                    },
                    {
                        "x_data": 11500,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9600,
                        "y_data": 80
                    },
                    {
                        "x_data": 7400,
                        "y_data": 80
                    },
                    {
                        "x_data": 7300,
                        "y_data": 80
                    },
                    {
                        "x_data": 6100,
                        "y_data": 80
                    },
                    {
                        "x_data": 11000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8800,
                        "y_data": 80
                    },
                    {
                        "x_data": 8400,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 0
                    },
                    {
                        "x_data": 6200,
                        "y_data": 80
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 4200,
                        "y_data": 50
                    },
                    {
                        "x_data": 4100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3400,
                        "y_data": 50
                    },
                    {
                        "x_data": 3000,
                        "y_data": 50
                    },
                    {
                        "x_data": 3800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2900,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 4000,
                        "y_data": 50
                    },
                    {
                        "x_data": 3900,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3000,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 6000,
                        "y_data": 20
                    },
                    {
                        "x_data": 6500,
                        "y_data": 40
                    },
                    {
                        "x_data": 10000,
                        "y_data": 70
                    },
                    {
                        "x_data": 12000,
                        "y_data": 110
                    },
                    {
                        "x_data": 8300,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the total number from each state province county, sort by the Y-axis from low to high.",
            "Show each state and the number of addresses in each state Show bar chart, sort by the Y-axis from low to high.",
            "Show each state and the number of addresses in each state by a bar chart, and could you list in asc by the Y-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Colorado",
                        "y_data": 1
                    },
                    {
                        "x_data": "District of Columbia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Idaho",
                        "y_data": 1
                    },
                    {
                        "x_data": "Illinois",
                        "y_data": 1
                    },
                    {
                        "x_data": "Louisiana",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maryland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nevada",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oklahoma",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oregon",
                        "y_data": 1
                    },
                    {
                        "x_data": "SouthDakota",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vermont",
                        "y_data": 1
                    },
                    {
                        "x_data": "Virginia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kentucky",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state_province_county",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Rating",
            "Reviewer"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Find the average rating star for each movie that are not reviewed by Brittany Harris. Plot them as scatter chart.",
            "Show me the correlation about what is the average rating for each movie that has never been reviewed by Brittany Harris?",
            "What is the average rating for each movie that has never been reviewed by Brittany Harris."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 101,
                        "y_data": 3
                    },
                    {
                        "x_data": 104,
                        "y_data": 2.5
                    },
                    {
                        "x_data": 106,
                        "y_data": 4.5
                    },
                    {
                        "x_data": 107,
                        "y_data": 4
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "mID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "For each continent where the average life expectancy is shorter than 72, shows the correlation between average life expectancy and total population.",
            "For each continent where the average life expectancy is shorter than 72, shows the correlation between average life expectancy and total population with a scatter plot.",
            "Plot a scatter chart, sum(population) by mean lifeexpectancy."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 784475000,
                        "y_data": 52.57192982456139
                    },
                    {
                        "x_data": 3705025700,
                        "y_data": 67.44117647058825
                    },
                    {
                        "x_data": 30401150,
                        "y_data": 69.715
                    },
                    {
                        "x_data": 345780000,
                        "y_data": 70.94615384615386
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "sum(Population)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(LifeExpectancy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Bar chart x axis log entry description y axis the number of log entry description, could you show in asc by the log_entry_description please?",
            "What is the number of entry descriptions of each problem?, and order by the x axis in ascending.",
            "List all the log entry descriptions and count them using a bar chart, and could you show in asc by the log_entry_description please?",
            "Draw a bar chart for what is the number of entry descriptions of each problem?, rank by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 3
                    },
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 1
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "p",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "v",
                        "y_data": 1
                    },
                    {
                        "x_data": "w",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(log_entry_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Draw a bar chart of county versus the total number, and display by the X in asc.",
            "Return a bar chart showing the number of schools in each county, order X in ascending order.",
            "Show each county along with the number of schools, and could you rank by the x-axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 1
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 1
                    },
                    {
                        "x_data": "50 Marshall",
                        "y_data": 3
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 2
                    },
                    {
                        "x_data": "75 Starke",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 83.57142857142857
                    },
                    {
                        "x_data": "July",
                        "y_data": 46.12903225806452
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 50.689655172413794
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many departments for each building? Draw a bar chart, and show by the bar in ascending.",
            "Bar chart of how many building from each building, and could you rank by the X in asc?",
            "List the number of departments for each building with a bar chart, and show X in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brodhead",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Candlestick",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linderman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Main",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Palmer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rauch",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thompson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wrigley",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_Channel"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "List each language and the number of TV Channels using it with a pie chart.",
            "List each language and the number of TV Channels using it. Show the proportion.",
            "For each language, list the number of TV Channels that use it. Show a pie chart.",
            "Give me a pie to show the total number from different language."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italian",
                        "y_data": 12
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Language"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Draw a bar chart to compare the stars of each movie by title, and sort in descending by the Y-axis.",
            "Show the title and score of the movie with a bar chart, and I want to show Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Find all dates of the logs for the problem whose id is 10, show me a bar chart that bins the dates into the weekday interval, and counts the dates.",
            "For the problem whose id is 10, bin the log_entry_date into the weekday interval and count the date, and return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(log_entry_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find hire_date and the average of salary bin hire_date by weekday, and visualize them by a bar chart, and rank by the y-axis from high to low please.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday, and sort in descending by the mean salary please.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and sort in descending by the mean salary please.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart, and sort in desc by the Y please.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and order by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 7733.333333333333
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 7590.909090909091
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6620
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 6525
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6357.142857142857
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4933.333333333333
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3280
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "body_builder"
        ],
        "db_id": "body_builder",
        "nl_queries": [
            "What is the relationship between Body_Builder_ID and Snatch ?",
            "Draw a scatter chart about the correlation between Body_Builder_ID and Snatch .",
            "Visualize the relationship between Body_Builder_ID and Snatch .",
            "Show me about the correlation between Body_Builder_ID and Snatch in a scatter chart.",
            "Return a scatter chart about the correlation between Body_Builder_ID and Snatch .",
            "Scatter plot to show body builder id on x axis and snatch on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 142.5
                    },
                    {
                        "x_data": 2,
                        "y_data": 137.5
                    },
                    {
                        "x_data": 3,
                        "y_data": 140
                    },
                    {
                        "x_data": 4,
                        "y_data": 137.5
                    },
                    {
                        "x_data": 5,
                        "y_data": 130
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Body_Builder_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Snatch"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me team_id by all road in a histogram, I want to list by the X-axis in ascending please.",
            "Find All_Road and Team_ID , and visualize them by a bar chart, and rank by the x axis from low to high.",
            "Return a bar chart about the distribution of All_Road and Team_ID , and show X-axis in ascending order.",
            "Draw a bar chart about the distribution of All_Road and Team_ID , show by the bar in ascending.",
            "Give me the comparison about Team_ID over the All_Road by a bar chart, I want to list by the X-axis in ascending please.",
            "Show me about the distribution of All_Road and Team_ID in a bar chart, rank by the x axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 4
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 3
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019. Visualize them using a bar chart.",
            "Visualize a bar chart for what are the names and account balances of customers with the letter 'a' in their names?",
            "What are the names and account balances of customers with the letter a in their names.",
            "Can you compare the account balances of customers with the letter 'a' in their names using a bar graph."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mary",
                        "y_data": 2000
                    },
                    {
                        "x_data": "Jack",
                        "y_data": 1000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cust_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "acc_bal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by time, order total number from low to high order.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, show y axis in asc order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and could you rank from low to high by the Y-axis?",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of salary over the hire_date bin hire_date by time, and show y axis in asc order.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart, and order total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 3774.1935483870966
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 4880
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 9074.193548387097
                    },
                    {
                        "x_data": "June",
                        "y_data": 9885.714285714286
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the trend about the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, I want to list x axis from high to low order please.",
            "Draw a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, and I want to display by the x axis in descending please.",
            "The trend about the the number of start from of different Is_full_time over the start from, and display x-axis from high to low order.",
            "Return a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, and could you sort by the x axis in desc?",
            "A line chart shows the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, and I want to display by the x axis in descending please.",
            "For the amount of Start_from, Start_from, visualize the trend, and I want to list x axis from high to low order please.",
            "Visualize a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, display x-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVOICES"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all payment method codes and the number of orders for each code in a bar chart.",
            "Show all payment method codes and the number of orders for each code. Show bar chart.",
            "List the distinct payment method codes with the number of orders mad in a bar chart.",
            "List the distinct payment method codes with the number of orders mad. Show bar chart.",
            "Give me a bar chart for the total number of each payment method code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American E",
                        "y_data": 4
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 6
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, list in desc by the x-axis.",
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, could you sort bars in desc order?",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, show bar from high to low order.",
            "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, could you list x axis in desc order?",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and could you list catalog_entry_name from high to low order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vimto",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sprite Lemo",
                        "y_data": 8
                    },
                    {
                        "x_data": "Dr Pepper",
                        "y_data": 1
                    },
                    {
                        "x_data": "Diet Pepsi",
                        "y_data": 9
                    },
                    {
                        "x_data": "Diet Mountain Dew",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a scatter chart about the correlation between School_ID and All_Games_Percent , and group by attribute Team_Name.",
            "Return a scatter chart about the correlation between School_ID and All_Games_Percent , and group by attribute Team_Name.",
            "Visualize a scatter chart about the correlation between School_ID and All_Games_Percent , and group by attribute Team_Name.",
            "Show me about the correlation between School_ID and All_Games_Percent , and group by attribute Team_Name in a scatter chart.",
            "A scatter chart shows the correlation between School_ID and All_Games_Percent , and group by attribute Team_Name.",
            "Show the relation between school id and all_games_percent for each Team_Name using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.706,
                        "classify": "Clemson"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "Duke"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "North Carolina"
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.6,
                        "classify": "Virginia Tech"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "How many cars each weekday (by bin the year into a day of the week interval)? Show me the bar chart.",
            "Create a bar chart showing the number of year across year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "poker_player",
        "nl_queries": [
            "Visualize a bar chart for how many people are there of each nationality?, and I want to rank in ascending by the names.",
            "what are different nationalities of people and the corresponding number of people from each nation?, rank from low to high by the bar.",
            "What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, and list X in asc order.",
            "Draw a bar chart for how many people are there of each nationality?, and list X in asc order.",
            "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?, and I want to rank in asc by the X-axis please.",
            "Draw a bar chart of nationality versus the total number, and I want to rank in ascending by the names.",
            "How many people are there of each nationality Visualize by bar chart, show bars in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bulgaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of salary bin hire_date by weekday, and visualize them by a bar chart, and sort total number in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, and display sum salary in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, and show total number in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart, display sum salary in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, sort Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 124400
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 108200
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 97400
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 94800
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 94300
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 86200
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 79600
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the correlation between statement id and account detail in a scatter chart.",
            "What is the correlation between statement id and account detail? Plot a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 57,
                        "y_data": 495.06300000000005
                    },
                    {
                        "x_data": 57,
                        "y_data": 930.14
                    },
                    {
                        "x_data": 57,
                        "y_data": 6035.84
                    },
                    {
                        "x_data": 57,
                        "y_data": 199.52
                    },
                    {
                        "x_data": 192,
                        "y_data": 12223.93
                    },
                    {
                        "x_data": 57,
                        "y_data": 11130.23
                    },
                    {
                        "x_data": 192,
                        "y_data": 1230.454
                    },
                    {
                        "x_data": 192,
                        "y_data": 6352.31
                    },
                    {
                        "x_data": 57,
                        "y_data": 147.96
                    },
                    {
                        "x_data": 57,
                        "y_data": 187.14
                    },
                    {
                        "x_data": 192,
                        "y_data": 745.817
                    },
                    {
                        "x_data": 192,
                        "y_data": 127.9
                    },
                    {
                        "x_data": 57,
                        "y_data": 25.41
                    },
                    {
                        "x_data": 57,
                        "y_data": 1168.32
                    },
                    {
                        "x_data": 192,
                        "y_data": 658.26
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Statement_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Account_Details"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
            "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart",
            "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
            "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nominee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between manufacturer and code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the correlation between manufacturer and code , and group by attribute name in a scatter chart.",
            "For those records from the products and each product's manufacturer, what is the relationship between manufacturer and code , and group by attribute name?",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between manufacturer and code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between manufacturer and code , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 5,
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 4,
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": 6,
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": 6,
                        "y_data": 6,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "locations"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Group and count the state province attribute of the location table to visualize a bar chart, could you display in ascending by the Y please?",
            "Create a bar chart showing the number of state province across state province, rank Y-axis in asc order.",
            "Give me a bar chart to compare the number of state provinces located in different cities, rank Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bavaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "California",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oxford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Texas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Washington",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STATE_PROVINCE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STATE_PROVINCE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?, I want to order by the the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Photo",
                        "y_data": 2
                    },
                    {
                        "x_data": "Editor",
                        "y_data": 2
                    },
                    {
                        "x_data": "Proof Manager",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manager",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalogs"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend, and sort by the date_of_latest_revision in descending.",
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart, I want to order by the x axis from high to low please.",
            "Plot date of latest revision by the number of date of latest revision as a line chart, and list date_of_latest_revision from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nov",
                        "y_data": 0
                    },
                    {
                        "x_data": "May",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 1
                    },
                    {
                        "x_data": "June",
                        "y_data": 0
                    },
                    {
                        "x_data": "July",
                        "y_data": 0
                    },
                    {
                        "x_data": "Dec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 0
                    },
                    {
                        "x_data": "Apr",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_latest_revision",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_latest_revision)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airlines"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "What are the countries of all airlines whose names start with Orbit, and count them by a bar chart, order total number from low to high order.",
            "Find the country of the airlines whose name starts with 'Orbit', and count them by a bar chart, rank from low to high by the y axis.",
            "Find the number of the country of the airlines whose name starts with 'Orbit', and list by the Y-axis in ascending.",
            "A bar chart for what are the number of the countries of all airlines whose names start with Orbit?, and could you display y axis in asc order?",
            "A bar chart for finding the number of the country of the airlines whose name starts with 'Orbit', display y-axis in asc order please.",
            "What are the number of the countries of all airlines whose names start with Orbit?, I want to list by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Azerbaijan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Return a bar chart showing the number of templates for each template type code.",
            "How many templates for each template type code? Show a bar chart.",
            "Show the number of template type code from each template type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Template_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs departed in each day with a bar chart that groups by departed date, and could you show bars in ascending order?",
            "Show how many date departed from each date departed, and I want to order by the date_departed in asc.",
            "How many dogs departed in each day? Visualize with a bar chart that groups by departed date, could you sort date_departed in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-24",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-25",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Give me a histogram for how many climbers are from each country?, and could you rank in descending by the x axis?",
            "How many climbers are from each country, order in descending by the x axis.",
            "Display a bar chart for how many climbers are from each country?, rank Country in desc order.",
            "Bar chart of the total number from each country, and I want to order names from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "West Germany",
                        "y_data": 6
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 3
                    },
                    {
                        "x_data": "Switzerland",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Show different nominees and the number of musicals they have been nominated in a bar chart.",
            "Show different nominees and the number of musicals they have been nominated. Plot them as bar chart.",
            "Return a bar chart on how many musicals has each nominee been nominated for?",
            "Give me a histogram for how many musicals has each nominee been nominated for?",
            "How many musicals has each nominee been nominated for. Plot them as bar chart.",
            "Bar chart x axis nominee y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 5
                    },
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_contact_channels"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "How many customers using email as the contact channel? Group by customer name and bin active date by weekday in a stacked bar chart, I want to show by the total number in asc.",
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by weekday in a stacked bar chart, could you display by the y-axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "Tillman Ernser"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "active_from_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(active_from_date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "A bar chart about what are the nationalities and their average ages of journalists?, and order y-axis from high to low order.",
            "Draw a bar chart of nationality versus the average of age, I want to order total number from high to low order.",
            "Visualize a bar chart for what are the nationalities and their average ages of journalists?, order total number in desc order please.",
            "What are the nationalities and their average ages of journalists Show me a bar chart, order total number in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 34.22222222222222
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday.",
            "Draw a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday.",
            "Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday by a bar chart.",
            "Find Start_from and the sum of Shop_ID bin start_from by weekday, and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday.",
            "Show total number of shop id from each start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 11
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show the number of films for each cinema in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart.",
            "Show me a bar chart about the number of races held in each year after 2014."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the job_id , and group by attribute job_id, I want to order in descending by the JOB_ID please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, I want to display bar from high to low order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and order from high to low by the x-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, order from high to low by the x-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, I want to display bar from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7280
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2785
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3215
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8350
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 12200
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2780
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5760
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7920
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 17000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Display a pie chart for what are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
            "Draw a pie chart for what are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
            "What are the names and average prices of products for manufacturers whose products cost on average 150 or more. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.Price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_category",
            "category"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "List the genre name and genre id using a bar chart, and list by the y-axis in asc.",
            "What are the names and ids of the different categories? Show me the bar chart, and display Y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Action",
                        "y_data": 1
                    },
                    {
                        "x_data": "Animation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Children",
                        "y_data": 3
                    },
                    {
                        "x_data": "Classics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Comedy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Documentary",
                        "y_data": 6
                    },
                    {
                        "x_data": "Drama",
                        "y_data": 7
                    },
                    {
                        "x_data": "Family",
                        "y_data": 8
                    },
                    {
                        "x_data": "Foreign",
                        "y_data": 9
                    },
                    {
                        "x_data": "Games",
                        "y_data": 10
                    },
                    {
                        "x_data": "Horror",
                        "y_data": 11
                    },
                    {
                        "x_data": "Music",
                        "y_data": 12
                    },
                    {
                        "x_data": "New",
                        "y_data": 13
                    },
                    {
                        "x_data": "Sci-Fi",
                        "y_data": 14
                    },
                    {
                        "x_data": "Sports",
                        "y_data": 15
                    },
                    {
                        "x_data": "Travel",
                        "y_data": 16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "category_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Timed_Status_of_Things",
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a pie chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commen",
                        "y_data": 4
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Show me a bar chart about the number of races held in each year after 2014, and show x axis in ascending order.",
            "How many races are held in each year after 2014? Show me a bar chart, I want to order x-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Return a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, list in descending by the x axis.",
            "Give me the comparison about the average of Height over the Sex , and group by attribute Sex, and display in desc by the bars.",
            "Draw a bar chart of sex versus mean height, and could you list in descending by the X?",
            "Show me about the distribution of Sex and the average of Height , and group by attribute Sex in a bar chart, and order x-axis from high to low order please.",
            "Visualize a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, order x-axis from high to low order please.",
            "Draw a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, could you list in desc by the bar?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 195.14285714285714
                    },
                    {
                        "x_data": "F",
                        "y_data": 197.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Height)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Tell me the average of capacity of cinemas open for each year in a line chart.",
            "Can you draw the trend of the average of capacity over the openning year?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 305
                    },
                    {
                        "x_data": "2010",
                        "y_data": 544.3333333333334
                    },
                    {
                        "x_data": "2011",
                        "y_data": 445.3333333333333
                    },
                    {
                        "x_data": "2012",
                        "y_data": 368
                    },
                    {
                        "x_data": "2013",
                        "y_data": 330
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 364
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Pie chart. what is average age for different job title?",
            "Show me a pie chart for what is average age for different job title?",
            "What is average age for different job title. Show the proportion.",
            "Return a pie chart on how old is the average person for each job?",
            "Display a pie chart for how old is the average person for each job?",
            "How old is the average person for each job. Show a pie chart.",
            "Give me a pie to show mean age from different job."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "student",
                        "y_data": 25.5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "department)"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many departments whose budget is more than the average budget in each building? Show me a bar chart, list by the total number in asc.",
            "Give the number of departments with greater than average budget in each building with a bar chart, and order the number of building from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brodhead",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linderman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Palmer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thompson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wrigley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Candlestick",
                        "y_data": 2
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Show the number of cities in each country with a bar chart, and order y axis from high to low order.",
            "What is the number of cities in each country? Return a bar chart, I want to sort from high to low by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Campbell River",
                        "y_data": 6
                    },
                    {
                        "x_data": "Abbotsford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chilliwack",
                        "y_data": 2
                    },
                    {
                        "x_data": "Central Saanich",
                        "y_data": 2
                    },
                    {
                        "x_data": "Castlegar",
                        "y_data": 2
                    },
                    {
                        "x_data": "Burnaby",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Give me a histogram for what are the names of the technicians and how many machines are they assigned to repair?, display the total number in ascending order.",
            "Show names of technicians and the number of machines they are assigned to repair Visualize by bar chart, and sort by the total number in asc.",
            "Display a bar chart for what are the names of the technicians and how many machines are they assigned to repair?, and list from low to high by the total number please.",
            "What are the names of the technicians and how many machines are they assigned to repair, and could you display by the Y-axis in asc?",
            "Show names of technicians and the number of machines they are assigned to repair with a bar chart, display the total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Bar chart x axis location y axis how many location, and rank by the bars in asc.",
            "Compare the total number of locations in each location using a bar graph, and list bars in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell Centre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Verizon Center",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "For each account type, find the average account balance of customers with credit score lower than 50. Show bar chart.",
            "Draw a bar chart for what is the average account balance of customers with credit score below 50 for the different account types?",
            "What is the average account balance of customers with credit score below 50 for the different account types. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "checking",
                        "y_data": 1000
                    },
                    {
                        "x_data": "saving",
                        "y_data": 2000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "acc_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(acc_bal)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, and rank in asc by the Headquarter.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and list in ascending by the bar please.",
            "For those records from the products and each product's manufacturer, find headquarter and the sum of code , and group by attribute headquarter, and visualize them by a bar chart, and list by the X-axis in asc please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of code , and group by attribute headquarter in a bar chart, display by the Headquarter in ascending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, order in ascending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 23
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 28
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show names of teachers and the number of courses they teach Visualize by bar chart, I want to sort in desc by the y axis.",
            "What are the names of the teachers and how many courses do they teach Plot them as bar chart, order from high to low by the Y-axis.",
            "Show names of teachers and the number of courses they teach with a bar chart, and order from high to low by the Y-axis.",
            "what are the names of the teachers and how many courses do they teach?, order y axis in desc order please.",
            "Show me a bar chart for what are the names of the teachers and how many courses do they teach?, could you show Y-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "For each account type, find the average account balance of customers with credit score lower than 50. Show a pie chart.",
            "what is the average account balance of customers with credit score below 50 for the different account types?",
            "Show me a pie chart for what is the average account balance of customers with credit score below 50 for the different account types?",
            "What is the average account balance of customers with credit score below 50 for the different account types. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "checking",
                        "y_data": 1000
                    },
                    {
                        "x_data": "saving",
                        "y_data": 2000
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(acc_bal)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "acc_type"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Count the number of services by services, display by the total number in desc.",
            "Give me a bar chart for the number of services of each services, and rank by the y-axis in descending please.",
            "A bar graph listing the services and how many services provided by all stations, and order from high to low by the total number please.",
            "Compare the number of services by services with a bar graph, sort by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 3
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 2
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 1
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                }
            }
        }
    },
    {
        "tables_used": [
            "invoices"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "A pie chart about what are the top 5 countries by number of invoices and how many do they have?",
            "Visualize a pie chart with what are the top 5 countries by number of invoices and how many do they have?",
            "What are the top 5 countries by number of invoices and how many do they have."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 91
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 56
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 35
                    },
                    {
                        "x_data": "France",
                        "y_data": 35
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 28
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "billing_country"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, and order in ascending by the Y.",
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, and could you rank by the y-axis in asc?",
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, and order in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "September18\u2013September25",
                        "y_data": 2
                    },
                    {
                        "x_data": "September7\u2013September17",
                        "y_data": 3
                    },
                    {
                        "x_data": "August26\u2013September2",
                        "y_data": 7
                    },
                    {
                        "x_data": "August3\u2013August10",
                        "y_data": 7
                    },
                    {
                        "x_data": "August5\u2013August14",
                        "y_data": 52
                    },
                    {
                        "x_data": "May19 \u2013October26",
                        "y_data": 71
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Dates_active",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "payments"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-03",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-17",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "PURCHASES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "What are the purchase details of transactions with amount bigger than 10000, and count them by a pie chart",
            "A pie chart for what are the number of the purchase details of transactions with amount bigger than 10000?",
            "What are the number of the purchase details of transactions with amount bigger than 10000?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 2
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(purchase_details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "purchase_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "playlists"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "List the name of all playlist, and count them by a bar chart, show by the y axis from low to high.",
            "Bar chart x axis name y axis how many name, and display in ascending by the the number of name.",
            "List the number of the name of all playlist, display Y-axis in asc order.",
            "A bar chart for what are the number of the names of all the playlists?, and show by the y axis from low to high.",
            "What are the number of the names of all the playlists?, and display in ascending by the the number of name.",
            "What are the names of all the playlists, and count them by a bar chart, and show by the y axis from low to high.",
            "A bar chart for listing the number of the name of all playlist, display in ascending by the the number of name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "90\u2019s Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brazilian Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - Deep Cuts",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - Next Steps",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - The Basics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grunge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Heavy Metal Classic",
                        "y_data": 1
                    },
                    {
                        "x_data": "Music Videos",
                        "y_data": 1
                    },
                    {
                        "x_data": "On-The-Go 1",
                        "y_data": 1
                    },
                    {
                        "x_data": "Audiobooks",
                        "y_data": 2
                    },
                    {
                        "x_data": "Movies",
                        "y_data": 2
                    },
                    {
                        "x_data": "Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "TV Shows",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the sum of price supplied by supplier id 3 for different product type code in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 1634
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Create a bar chart showing the total number across rank, display Y in descending order.",
            "Show me a bar chart for how many faculty members do we have for each faculty rank?, and sort by the Y-axis from high to low.",
            "How many faculty members do we have for each faculty rank Show bar chart, and sort by the Y-axis from high to low.",
            "For each faculty rank, show the number of faculty members who have it Show bar chart, display by the y axis from high to low please.",
            "A bar chart about how many faculty members do we have for each faculty rank?, and display Y in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show the different nationalities and the number of journalists of each nationality in a bar chart, and I want to display by the y axis in asc.",
            "Show the different nationalities and the number of journalists of each nationality Visualize by bar chart, order in asc by the the total number .",
            "Plot the total number by grouped by nationality as a bar graph, I want to list by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 1
                    },
                    {
                        "x_data": "England",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and order from low to high by the names please.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, rank bar in asc order.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, list in ascending by the JOB_ID.",
            "For those employees who did not have any job in the past, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, display in ascending by the X-axis.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, and could you display in asc by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.10344827586206
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, I want to order by the Y-axis in ascending please.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, sort by the y-axis in ascending.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart, I want to show by the Y in asc please.",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of manager_id bin hire_date by time, and visualize them by a bar chart, show by the y axis in ascending.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time, sort from low to high by the the average of manager id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 92.5
                    },
                    {
                        "x_data": "July",
                        "y_data": 116.13333333333334
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 120.75
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 143.23076923076923
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "Give the years and official names of the cities of each competition, I want to order from low to high by the Y.",
            "\u539f\u59cb\u6570\u636e\u6ca1\u6709weekday\u4fe1\u606f, and could you order in ascending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "List the number of companies for each building in a bar chart.",
            "Return a bar chart showing the number of companies in each building."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Corporativo BBVA Bancomer",
                        "y_data": 2
                    },
                    {
                        "x_data": "LIU East",
                        "y_data": 1
                    },
                    {
                        "x_data": "Punto Chapultepec",
                        "y_data": 4
                    },
                    {
                        "x_data": "Reforma 432",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reforma 90",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 2",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 3",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre KOI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre Mitikah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Torre New York Life",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre Reforma",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 106.5
                    },
                    {
                        "x_data": "July",
                        "y_data": 129
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 160
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 190.06896551724137
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "How many countries does each continent have? List the continent name and the number of countries in a pie chart.",
            "For each continent, list how many countries it has in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "america",
                        "y_data": 3
                    },
                    {
                        "x_data": "europe",
                        "y_data": 6
                    },
                    {
                        "x_data": "asia",
                        "y_data": 2
                    },
                    {
                        "x_data": "africa",
                        "y_data": 2
                    },
                    {
                        "x_data": "australia",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments",
            "locations",
            "countries"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Find employee with ID and name of the country presently where (s)he is working Visualize by bar chart, and order in descending by the X.",
            "Give me a histogram for what are all the employee ids and the names of the countries in which they work?, order in descending by the X.",
            "What are all the employee ids and the names of the countries in which they work Visualize by bar chart, and order in descending by the X.",
            "Show me a bar chart for what are all the employee ids and the names of the countries in which they work?, and list bar in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States of America",
                        "y_data": 9891
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 203
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 204
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 403
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "COUNTRY_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "How many documents for different location code? Plot a bar chart to show the proportion, and sort in desc by the Location_Code please.",
            "Show the number of documents for each location code in a bar chart, I want to order from high to low by the bars.",
            "Bar chart x axis location code y axis how many location code, and I want to order from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "x",
                        "y_data": 5
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "e",
                        "y_data": 4
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "b",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airlines"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "Find the number of the country of the airlines whose name starts with 'Orbit', show by the the number of country from high to low please.",
            "A bar chart for what are the number of the countries of all airlines whose names start with Orbit?, could you sort by the y-axis in desc?",
            "Find the country of the airlines whose name starts with 'Orbit', and count them by a bar chart, rank from high to low by the y-axis.",
            "A bar chart for finding the number of the country of the airlines whose name starts with 'Orbit', show by the the number of country in desc.",
            "What are the countries of all airlines whose names start with Orbit, and count them by a bar chart, could you display Y in desc order?",
            "What are the number of the countries of all airlines whose names start with Orbit?, and rank from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 4
                    },
                    {
                        "x_data": "Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Azerbaijan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all ages and corresponding number of students in a scatter chart",
            "Show all ages and corresponding number of students. Show the correlation.",
            "how old is each student and how many students are each age?",
            "Return a scatter on how old is each student and how many students are each age?",
            "How old is each student and how many students are each age. Visualize by scatter chart.",
            "Plot a scatter chart, age by the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 16,
                        "y_data": 1
                    },
                    {
                        "x_data": 17,
                        "y_data": 4
                    },
                    {
                        "x_data": 18,
                        "y_data": 10
                    },
                    {
                        "x_data": 19,
                        "y_data": 4
                    },
                    {
                        "x_data": 20,
                        "y_data": 8
                    },
                    {
                        "x_data": 21,
                        "y_data": 2
                    },
                    {
                        "x_data": 22,
                        "y_data": 2
                    },
                    {
                        "x_data": 26,
                        "y_data": 2
                    },
                    {
                        "x_data": 27,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Age"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute headquarter by a bar chart, and sort x-axis in descending order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute headquarter, and order x axis from high to low order.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, order x axis from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute headquarter, and show names from high to low order please.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, and could you sort in desc by the Name?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution",
            "protein"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution in a bar chart, and I want to display by the total number in ascending.",
            "Show institution names along with the number of proteins for each institution, I want to show by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dakota State University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haskell Indian Nations University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Valley City State University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lindenwood University\u2013Belleville",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Institution",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Addresses",
            "Drama_Workshop_Groups"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all cities along with the number of drama workshop groups in each city with a bar chart.",
            "Show all cities along with the number of drama workshop groups in each city. Visualize by bar chart.",
            "Show me a bar chart for how many drama workshop groups are there in each city? Return both the city and the count.",
            "Give me a histogram for how many drama workshop groups are there in each city? Return both the city and the count.",
            "How many drama workshop groups are there in each city? Return both the city and the count with a bar chart.",
            "How many drama workshop groups are there in each city? Return both the city and the count. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chrisside",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feliciaberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jasthaven",
                        "y_data": 2
                    },
                    {
                        "x_data": "Macejkovicchester",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monahanshire",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nataliamouth",
                        "y_data": 2
                    },
                    {
                        "x_data": "New Lonzoville",
                        "y_data": 2
                    },
                    {
                        "x_data": "Port Maximeview",
                        "y_data": 1
                    },
                    {
                        "x_data": "Purdyville",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rueckermouth",
                        "y_data": 1
                    },
                    {
                        "x_data": "South Eugenia",
                        "y_data": 1
                    },
                    {
                        "x_data": "West Sherwoodstad",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "City_Town",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What are the names and ids of customers whose address contains TN Show bar chart, and could you sort customer_name from high to low order?",
            "Return the names and ids of customers who have TN in their address by a bar chart, and display names in descending order.",
            "Return a histogram on what are the names and ids of customers whose address contains TN?, and show by the customer_name in desc please.",
            "Return the names and ids of customers who have TN in their address Show bar chart, and show bar in descending order.",
            "what are the names and ids of customers whose address contains TN?, and I want to sort from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lukas",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kenya",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students whose age is younger than the average age and group by students' first name in a bar chart, and show from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 3
                    },
                    {
                        "x_data": "Derek",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charles",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "projects",
            "assignedto"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Find the number of scientists involved for the projects that require more than 300 hours. Show a pie chart.",
            "Return a pie chart on what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?",
            "A pie chart about what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?",
            "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A Silver-Cleaning Battery",
                        "y_data": 2
                    },
                    {
                        "x_data": "Aerodynamics and Ice Hockey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 3
                    },
                    {
                        "x_data": "Juicy: Extracting Apple Juice with Pectinase",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students in each department that has the top 3 highest number of students. Show the department address and number of students with a bar chart.",
            "Which departments have the top 3 highest number of students? Show the department address and number of students with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KLR 211, Box 52",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR 333, Box 56",
                        "y_data": 2
                    },
                    {
                        "x_data": "AAK 230, Box 415",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_ADDRESS",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart.",
            "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200.",
            "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200.",
            "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200.",
            "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart.",
            "Draw a bar chart of meter 200 versus the average of id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 8
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 4
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 3
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 5
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 2
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 3.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Plot date claim settled by the number of date claim settled as a line chart, and list by the X from low to high.",
            "Tell me the trend about the claim dates using a trend line, and could you show Date_Claim_Settled from low to high order please?",
            "Show the trend about the frequency of the claim dates, and list by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-10-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Settled",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Settled)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and manufacturer , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the correlation between code and manufacturer , and group by attribute name in a scatter chart.",
            "For those records from the products and each product's manufacturer, what is the relationship between code and manufacturer , and group by attribute name?",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between code and manufacturer , and group by attribute name.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and manufacturer , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 6,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 7,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 10,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 1,
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": 8,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 9,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 11,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": 5,
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": 2,
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": 4,
                        "y_data": 6,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturer",
            "furniture_manufacte"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Find the number of funiture types produced by each manufacturer as well as the company names. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chevrolet House",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jiaj",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chevrolet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tomorrow",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 3
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 4
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 6
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 8
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Editor_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph, display from high to low by the Y-axis.",
            "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart, I want to rank the number of flag from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Panama",
                        "y_data": 4
                    },
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Flag)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "List the number of games for each away team and group by home team in a stacked bar chart. The x-axis is away team.",
            "Stacked bar chart of how many away team for with each Home_team in each away team"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 9,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the weekday interval, and sum the share count of each bin Return the result using a bar chart, list in descending by the y axis please.",
            "Bar graph to show sum share count from different date of transaction, and rank total number in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 9357173
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1663726
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 97709
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 96529
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Visualize a scatter chart on what are total salaries and department id for each department that has more than 2 employees?",
            "plot scatter on what are total salaries and department id for each department that has more than 2 employees?",
            "What are total salaries and department id for each department that has more than 2 employees. Show scatter chart.",
            "Scatter plot to show department id on x axis and sum salary on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 20,
                        "y_data": 19000
                    },
                    {
                        "x_data": 30,
                        "y_data": 24900
                    },
                    {
                        "x_data": 50,
                        "y_data": 156400
                    },
                    {
                        "x_data": 60,
                        "y_data": 28800
                    },
                    {
                        "x_data": 80,
                        "y_data": 304500
                    },
                    {
                        "x_data": 90,
                        "y_data": 58000
                    },
                    {
                        "x_data": 100,
                        "y_data": 51600
                    },
                    {
                        "x_data": 110,
                        "y_data": 20300
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "For each year, bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons using a line chart, sort by the x axis in desc.",
            "For each year, bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons using a line chart, order X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 15
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 40
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 5
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 5
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 5
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 15
                    },
                    {
                        "x_data": "1903~1913",
                        "y_data": 10
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "acceptance"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "For each submission, group its acceptance result and count them Visualize them in a bar chart, and could you order by the Y in desc?",
            "Bar graph to show how many result from different result, show by the y axis in descending.",
            "Group by the result and count them by a bar chart, show from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rejected",
                        "y_data": 4
                    },
                    {
                        "x_data": "Accepted",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Home and School_ID , and group by attribute ACC_Home, order by the y axis from high to low please.",
            "Find All_Home and School_ID , and group by attribute ACC_Home, and visualize them by a bar chart, could you list in descending by the y-axis please?",
            "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, and sort by the y-axis from high to low.",
            "Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and sort by the y-axis from high to low.",
            "Stack bar chart of school_id vs ACC_Home based on all home, list by the y-axis in descending.",
            "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and rank in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 5,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 4,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different ending date and group by ending date with a line chart, and sort in ascending by the x-axis.",
            "How many documents in different ending date? Return a line chart grouping by ending date, and rank from low to high by the Date_in_Locaton_To.",
            "Can you draw the trend of how many date in locaton to over the date in locaton to?, order Date_in_Locaton_To in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1976-06-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 2
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 2
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give the maximum product price for each product type in a bar chart, and show X-axis in asc order.",
            "Bar chart x axis product type code y axis maximal product price, could you display from low to high by the product_type_code?",
            "What is the highest price of product, grouped by product type? Show a bar chart, and I want to display in asc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 971.44
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and could you list in ascending by the total number please?",
            "What are the student IDs and middle names of the students enrolled in at most two courses, and show student_id in ascending order.",
            "Find the student ID and middle name for all the students with at most two enrollments, I want to rank by the y-axis in ascending please.",
            "what are the student IDs and middle names of the students enrolled in at most two courses?, could you list in ascending by the total number please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Luella",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brandt",
                        "y_data": 3
                    },
                    {
                        "x_data": "Casimir",
                        "y_data": 4
                    },
                    {
                        "x_data": "Asa",
                        "y_data": 6
                    },
                    {
                        "x_data": "Kailey",
                        "y_data": 9
                    },
                    {
                        "x_data": "Vicente",
                        "y_data": 10
                    },
                    {
                        "x_data": "Kolby",
                        "y_data": 11
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 12
                    },
                    {
                        "x_data": "Camilla",
                        "y_data": 13
                    },
                    {
                        "x_data": "Ursula",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "middle_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents for each document type description? Visualize by a pie chart.",
            "Return a pie chart showing the number of documents for each document type description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "excellent",
                        "y_data": 9
                    },
                    {
                        "x_data": "fun",
                        "y_data": 1
                    },
                    {
                        "x_data": "good",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and show the average of meter 100 in asc order.",
            "Bar chart x axis nationality y axis mean meter 100, and I want to display in asc by the y-axis please.",
            "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and display by the y-axis in ascending.",
            "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, show the average of meter 100 in asc order.",
            "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and I want to display in ascending by the the average of meter 100.",
            "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and display by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 55
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 57
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 57
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Draw a bar chart for how many players played each position?, order by the x axis from low to high.",
            "Show the position of players and the corresponding number of players Visualize by bar chart, list by the names in asc.",
            "Show the position of players and the corresponding number of players with a bar chart, and could you list from low to high by the x axis?",
            "How many players played each position Plot them as bar chart, rank by the names in ascending.",
            "Return a bar chart on how many players played each position?, show in asc by the x-axis.",
            "Give me a bar chart for the total number of each position, display bars from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Defender",
                        "y_data": 7
                    },
                    {
                        "x_data": "Forward",
                        "y_data": 3
                    },
                    {
                        "x_data": "Midfielder",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "constructorStandings"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Show me the correlation about what are the numbers of races for each constructor id?",
            "Scatter chart. what are the numbers of races for each constructor id?",
            "What are the numbers of races for each constructor id. Show the correlation.",
            "For each constructor id, how many races are there. Show scatter chart.",
            "Plot a scatter chart, count(*) by constructorid."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 780,
                        "y_data": 1
                    },
                    {
                        "x_data": 70,
                        "y_data": 2
                    },
                    {
                        "x_data": 708,
                        "y_data": 3
                    },
                    {
                        "x_data": 347,
                        "y_data": 4
                    },
                    {
                        "x_data": 226,
                        "y_data": 5
                    },
                    {
                        "x_data": 909,
                        "y_data": 6
                    },
                    {
                        "x_data": 138,
                        "y_data": 7
                    },
                    {
                        "x_data": 52,
                        "y_data": 8
                    },
                    {
                        "x_data": 244,
                        "y_data": 9
                    },
                    {
                        "x_data": 190,
                        "y_data": 10
                    },
                    {
                        "x_data": 92,
                        "y_data": 11
                    },
                    {
                        "x_data": 17,
                        "y_data": 12
                    },
                    {
                        "x_data": 18,
                        "y_data": 13
                    },
                    {
                        "x_data": 4,
                        "y_data": 14
                    },
                    {
                        "x_data": 367,
                        "y_data": 15
                    },
                    {
                        "x_data": 112,
                        "y_data": 16
                    },
                    {
                        "x_data": 241,
                        "y_data": 17
                    },
                    {
                        "x_data": 337,
                        "y_data": 18
                    },
                    {
                        "x_data": 81,
                        "y_data": 19
                    },
                    {
                        "x_data": 82,
                        "y_data": 20
                    },
                    {
                        "x_data": 297,
                        "y_data": 21
                    },
                    {
                        "x_data": 259,
                        "y_data": 22
                    },
                    {
                        "x_data": 17,
                        "y_data": 23
                    },
                    {
                        "x_data": 46,
                        "y_data": 24
                    },
                    {
                        "x_data": 426,
                        "y_data": 25
                    },
                    {
                        "x_data": 120,
                        "y_data": 26
                    },
                    {
                        "x_data": 332,
                        "y_data": 27
                    },
                    {
                        "x_data": 32,
                        "y_data": 28
                    },
                    {
                        "x_data": 95,
                        "y_data": 29
                    },
                    {
                        "x_data": 33,
                        "y_data": 30
                    },
                    {
                        "x_data": 32,
                        "y_data": 31
                    },
                    {
                        "x_data": 405,
                        "y_data": 32
                    },
                    {
                        "x_data": 126,
                        "y_data": 33
                    },
                    {
                        "x_data": 315,
                        "y_data": 34
                    },
                    {
                        "x_data": 79,
                        "y_data": 35
                    },
                    {
                        "x_data": 24,
                        "y_data": 36
                    },
                    {
                        "x_data": 194,
                        "y_data": 37
                    },
                    {
                        "x_data": 84,
                        "y_data": 39
                    },
                    {
                        "x_data": 16,
                        "y_data": 40
                    },
                    {
                        "x_data": 32,
                        "y_data": 41
                    },
                    {
                        "x_data": 70,
                        "y_data": 42
                    },
                    {
                        "x_data": 48,
                        "y_data": 44
                    },
                    {
                        "x_data": 172,
                        "y_data": 45
                    },
                    {
                        "x_data": 32,
                        "y_data": 46
                    },
                    {
                        "x_data": 16,
                        "y_data": 47
                    },
                    {
                        "x_data": 32,
                        "y_data": 48
                    },
                    {
                        "x_data": 79,
                        "y_data": 49
                    },
                    {
                        "x_data": 47,
                        "y_data": 50
                    },
                    {
                        "x_data": 113,
                        "y_data": 51
                    },
                    {
                        "x_data": 39,
                        "y_data": 52
                    },
                    {
                        "x_data": 72,
                        "y_data": 53
                    },
                    {
                        "x_data": 116,
                        "y_data": 54
                    },
                    {
                        "x_data": 62,
                        "y_data": 55
                    },
                    {
                        "x_data": 123,
                        "y_data": 56
                    },
                    {
                        "x_data": 138,
                        "y_data": 57
                    },
                    {
                        "x_data": 106,
                        "y_data": 58
                    },
                    {
                        "x_data": 64,
                        "y_data": 59
                    },
                    {
                        "x_data": 31,
                        "y_data": 60
                    },
                    {
                        "x_data": 11,
                        "y_data": 61
                    },
                    {
                        "x_data": 3,
                        "y_data": 62
                    },
                    {
                        "x_data": 121,
                        "y_data": 63
                    },
                    {
                        "x_data": 71,
                        "y_data": 64
                    },
                    {
                        "x_data": 14,
                        "y_data": 65
                    },
                    {
                        "x_data": 231,
                        "y_data": 66
                    },
                    {
                        "x_data": 46,
                        "y_data": 67
                    },
                    {
                        "x_data": 13,
                        "y_data": 68
                    },
                    {
                        "x_data": 8,
                        "y_data": 69
                    },
                    {
                        "x_data": 17,
                        "y_data": 70
                    },
                    {
                        "x_data": 4,
                        "y_data": 71
                    },
                    {
                        "x_data": 2,
                        "y_data": 72
                    },
                    {
                        "x_data": 31,
                        "y_data": 73
                    },
                    {
                        "x_data": 14,
                        "y_data": 74
                    },
                    {
                        "x_data": 12,
                        "y_data": 75
                    },
                    {
                        "x_data": 11,
                        "y_data": 76
                    },
                    {
                        "x_data": 12,
                        "y_data": 77
                    },
                    {
                        "x_data": 12,
                        "y_data": 78
                    },
                    {
                        "x_data": 11,
                        "y_data": 79
                    },
                    {
                        "x_data": 30,
                        "y_data": 80
                    },
                    {
                        "x_data": 19,
                        "y_data": 81
                    },
                    {
                        "x_data": 56,
                        "y_data": 82
                    },
                    {
                        "x_data": 6,
                        "y_data": 83
                    },
                    {
                        "x_data": 4,
                        "y_data": 84
                    },
                    {
                        "x_data": 12,
                        "y_data": 85
                    },
                    {
                        "x_data": 26,
                        "y_data": 86
                    },
                    {
                        "x_data": 17,
                        "y_data": 87
                    },
                    {
                        "x_data": 14,
                        "y_data": 89
                    },
                    {
                        "x_data": 5,
                        "y_data": 90
                    },
                    {
                        "x_data": 6,
                        "y_data": 91
                    },
                    {
                        "x_data": 20,
                        "y_data": 92
                    },
                    {
                        "x_data": 10,
                        "y_data": 93
                    },
                    {
                        "x_data": 19,
                        "y_data": 94
                    },
                    {
                        "x_data": 56,
                        "y_data": 95
                    },
                    {
                        "x_data": 3,
                        "y_data": 96
                    },
                    {
                        "x_data": 15,
                        "y_data": 97
                    },
                    {
                        "x_data": 3,
                        "y_data": 98
                    },
                    {
                        "x_data": 17,
                        "y_data": 99
                    },
                    {
                        "x_data": 4,
                        "y_data": 100
                    },
                    {
                        "x_data": 19,
                        "y_data": 101
                    },
                    {
                        "x_data": 3,
                        "y_data": 103
                    },
                    {
                        "x_data": 10,
                        "y_data": 104
                    },
                    {
                        "x_data": 30,
                        "y_data": 105
                    },
                    {
                        "x_data": 9,
                        "y_data": 106
                    },
                    {
                        "x_data": 1,
                        "y_data": 113
                    },
                    {
                        "x_data": 14,
                        "y_data": 117
                    },
                    {
                        "x_data": 20,
                        "y_data": 118
                    },
                    {
                        "x_data": 5,
                        "y_data": 123
                    },
                    {
                        "x_data": 1,
                        "y_data": 124
                    },
                    {
                        "x_data": 11,
                        "y_data": 125
                    },
                    {
                        "x_data": 10,
                        "y_data": 127
                    },
                    {
                        "x_data": 156,
                        "y_data": 131
                    },
                    {
                        "x_data": 56,
                        "y_data": 164
                    },
                    {
                        "x_data": 38,
                        "y_data": 166
                    },
                    {
                        "x_data": 82,
                        "y_data": 167
                    },
                    {
                        "x_data": 1,
                        "y_data": 168
                    },
                    {
                        "x_data": 5,
                        "y_data": 169
                    },
                    {
                        "x_data": 89,
                        "y_data": 170
                    },
                    {
                        "x_data": 9,
                        "y_data": 171
                    },
                    {
                        "x_data": 66,
                        "y_data": 172
                    },
                    {
                        "x_data": 6,
                        "y_data": 173
                    },
                    {
                        "x_data": 8,
                        "y_data": 174
                    },
                    {
                        "x_data": 10,
                        "y_data": 175
                    },
                    {
                        "x_data": 58,
                        "y_data": 176
                    },
                    {
                        "x_data": 8,
                        "y_data": 177
                    },
                    {
                        "x_data": 1,
                        "y_data": 178
                    },
                    {
                        "x_data": 4,
                        "y_data": 179
                    },
                    {
                        "x_data": 54,
                        "y_data": 180
                    },
                    {
                        "x_data": 28,
                        "y_data": 181
                    },
                    {
                        "x_data": 47,
                        "y_data": 182
                    },
                    {
                        "x_data": 55,
                        "y_data": 183
                    },
                    {
                        "x_data": 21,
                        "y_data": 184
                    },
                    {
                        "x_data": 10,
                        "y_data": 185
                    },
                    {
                        "x_data": 10,
                        "y_data": 186
                    },
                    {
                        "x_data": 46,
                        "y_data": 187
                    },
                    {
                        "x_data": 8,
                        "y_data": 188
                    },
                    {
                        "x_data": 19,
                        "y_data": 189
                    },
                    {
                        "x_data": 25,
                        "y_data": 190
                    },
                    {
                        "x_data": 43,
                        "y_data": 191
                    },
                    {
                        "x_data": 6,
                        "y_data": 192
                    },
                    {
                        "x_data": 6,
                        "y_data": 193
                    },
                    {
                        "x_data": 22,
                        "y_data": 194
                    },
                    {
                        "x_data": 12,
                        "y_data": 195
                    },
                    {
                        "x_data": 23,
                        "y_data": 196
                    },
                    {
                        "x_data": 5,
                        "y_data": 197
                    },
                    {
                        "x_data": 12,
                        "y_data": 198
                    },
                    {
                        "x_data": 11,
                        "y_data": 199
                    },
                    {
                        "x_data": 11,
                        "y_data": 200
                    },
                    {
                        "x_data": 8,
                        "y_data": 201
                    },
                    {
                        "x_data": 14,
                        "y_data": 202
                    },
                    {
                        "x_data": 3,
                        "y_data": 203
                    },
                    {
                        "x_data": 31,
                        "y_data": 204
                    },
                    {
                        "x_data": 38,
                        "y_data": 205
                    },
                    {
                        "x_data": 58,
                        "y_data": 206
                    },
                    {
                        "x_data": 58,
                        "y_data": 207
                    },
                    {
                        "x_data": 77,
                        "y_data": 208
                    },
                    {
                        "x_data": 39,
                        "y_data": 209
                    },
                    {
                        "x_data": 41,
                        "y_data": 210
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "constructorId"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, could you rank from high to low by the Y?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, I want to show y-axis in descending order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, I want to show y-axis in descending order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the amount of job_id , and group by attribute job_id, and visualize them by a bar chart, I want to show by the total number in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and sort by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Compare the number of winery of the wines whose price is bigger than 100, and could you order bar in asc order please?",
            "List the number of winery of the wines whose price is bigger than 100 in a bar chart, rank from low to high by the names please.",
            "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and rank X in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bucella",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the teacher's first name and group by course description, sort from low to high by the X-axis.",
            "Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course description, display in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Return a histogram on how many students live in each city?, and list the total number in ascending order.",
            "Show all cities and corresponding number of students by a bar chart, and could you sort in ascending by the the total number ?",
            "Show all cities and corresponding number of students Plot them as bar chart, I want to display in ascending by the total number.",
            "A bar chart about how many students live in each city?, could you sort in ascending by the the total number ?",
            "Plot the total number by grouped by city code as a bar graph, and could you list in ascending by the y axis?",
            "How many students live in each city, display in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 1
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Find the number of people who is under 40 for each gender. Show the proportion.",
            "Give the proportion of how many people are under 40 for each gender?",
            "Pie chart. how many people are under 40 for each gender?",
            "How many people are under 40 for each gender. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "female",
                        "y_data": 2
                    },
                    {
                        "x_data": "male",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name, could you show in desc by the X-axis?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of revenue , and group by attribute name, could you list bars from high to low order please?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of revenue , and group by attribute name, and sort by the x axis from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the name , and group by attribute name by a bar chart, could you list bars from high to low order please?",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of revenue , and group by attribute name in a bar chart, could you show in desc by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 60
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 150
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, order by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "itaque",
                        "y_data": 2
                    },
                    {
                        "x_data": "quo",
                        "y_data": 1
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 1
                    },
                    {
                        "x_data": "eius",
                        "y_data": 1
                    },
                    {
                        "x_data": "a",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organisation_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute founder, and could you show total number in ascending order?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute founder, and rank Y from low to high order.",
            "For those records from the products and each product's manufacturer, give me the comparison about revenue over the name , and group by attribute founder by a bar chart, and rank Y from low to high order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute founder in a bar chart, could you list from low to high by the y axis?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and revenue , and group by attribute founder, could you show total number in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, rank in ascending by the bar.",
            "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, and could you display bar in ascending order?",
            "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and show by the X from low to high.",
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, show from low to high by the x axis.",
            "Create a bar chart showing total number of meter 100 across meter 200, rank from low to high by the x axis please.",
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, rank in ascending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 55
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 114
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Bar chart x axis headquarters y axis the total number, and display by the Y in descending.",
            "Show the different headquarters and number of companies at each headquarter with a bar chart, and order from high to low by the y-axis.",
            "Show the different headquarters and number of companies at each headquarter, and I want to show y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 8
                    },
                    {
                        "x_data": "China",
                        "y_data": 4
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "List the number of companies for each building in a bar chart, order bar from low to high order.",
            "Return a bar chart showing the number of companies in each building, and rank X-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Corporativo BBVA Bancomer",
                        "y_data": 2
                    },
                    {
                        "x_data": "LIU East",
                        "y_data": 1
                    },
                    {
                        "x_data": "Punto Chapultepec",
                        "y_data": 4
                    },
                    {
                        "x_data": "Reforma 432",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reforma 90",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 2",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 3",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre KOI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre Mitikah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Torre New York Life",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre Reforma",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "screen_mode",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, could you order by the X from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a bar chart for what is minimum age for different job title?",
            "what is minimum age for different job title?",
            "What is minimum age for different job title.",
            "Return a bar chart on how old is the youngest person for each job?",
            "how old is the youngest person for each job?",
            "How old is the youngest person for each job. Visualize by bar chart.",
            "Show minimal age from each job"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "student",
                        "y_data": 25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter by a bar chart, and show x-axis in desc order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter in a bar chart, and I want to display x axis in descending order please.",
            "For those records from the products and each product's manufacturer, find headquarter and the amount of headquarter , and group by attribute headquarter, and visualize them by a bar chart, and I want to display x axis in descending order please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter, sort Headquarter in desc order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter, and could you display by the bars in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarter)"
                }
            }
        }
    },
    {
        "tables_used": [
            "MATCH"
        ],
        "db_id": "city_record",
        "nl_queries": [
            "For each competition, count the number of matches, I want to display in asc by the X-axis.",
            "Find the number of matches in different competitions Visualize by bar chart, I want to display in asc by the X-axis.",
            "Bar chart x axis competition y axis the total number, and display by the X-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1994 FIFA World Cup qualification",
                        "y_data": 4
                    },
                    {
                        "x_data": "2002 FIFA World Cup qualification",
                        "y_data": 1
                    },
                    {
                        "x_data": "Friendly match",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "What is the proportion of the smallest enrollment in each state?",
            "A pie chart for the proportion of the smallest enrollment in each state.",
            "Give me a pie to show minimal enr from different state."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "LA",
                        "y_data": 18000
                    },
                    {
                        "x_data": "OK",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain)"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Give me a bar chart showing the total number of ships' classes that do not have a captain, display from low to high by the bars please.",
            "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, display from low to high by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GL",
                        "y_data": 1
                    },
                    {
                        "x_data": "KR",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200.",
            "Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200.",
            "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart.",
            "Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart.",
            "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart.",
            "Plot mean meter 100 by grouped by meter 200 as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 55
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the correlation between salary and manager_id in a scatter chart.",
            "For those employees who did not have any job in the past, visualize the relationship between salary and manager_id .",
            "For those employees who did not have any job in the past, return a scatter chart about the correlation between salary and manager_id .",
            "For those employees who did not have any job in the past, draw a scatter chart about the correlation between salary and manager_id .",
            "For those employees who did not have any job in the past, what is the relationship between salary and manager_id ?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 0
                    },
                    {
                        "x_data": 9000,
                        "y_data": 102
                    },
                    {
                        "x_data": 6000,
                        "y_data": 103
                    },
                    {
                        "x_data": 4800,
                        "y_data": 103
                    },
                    {
                        "x_data": 4800,
                        "y_data": 103
                    },
                    {
                        "x_data": 4200,
                        "y_data": 103
                    },
                    {
                        "x_data": 12000,
                        "y_data": 101
                    },
                    {
                        "x_data": 9000,
                        "y_data": 108
                    },
                    {
                        "x_data": 8200,
                        "y_data": 108
                    },
                    {
                        "x_data": 7700,
                        "y_data": 108
                    },
                    {
                        "x_data": 7800,
                        "y_data": 108
                    },
                    {
                        "x_data": 6900,
                        "y_data": 108
                    },
                    {
                        "x_data": 3100,
                        "y_data": 114
                    },
                    {
                        "x_data": 2900,
                        "y_data": 114
                    },
                    {
                        "x_data": 2800,
                        "y_data": 114
                    },
                    {
                        "x_data": 2600,
                        "y_data": 114
                    },
                    {
                        "x_data": 2500,
                        "y_data": 114
                    },
                    {
                        "x_data": 8000,
                        "y_data": 100
                    },
                    {
                        "x_data": 8200,
                        "y_data": 100
                    },
                    {
                        "x_data": 6500,
                        "y_data": 100
                    },
                    {
                        "x_data": 5800,
                        "y_data": 100
                    },
                    {
                        "x_data": 3200,
                        "y_data": 120
                    },
                    {
                        "x_data": 2700,
                        "y_data": 120
                    },
                    {
                        "x_data": 2400,
                        "y_data": 120
                    },
                    {
                        "x_data": 2200,
                        "y_data": 120
                    },
                    {
                        "x_data": 3300,
                        "y_data": 121
                    },
                    {
                        "x_data": 2800,
                        "y_data": 121
                    },
                    {
                        "x_data": 2500,
                        "y_data": 121
                    },
                    {
                        "x_data": 2100,
                        "y_data": 121
                    },
                    {
                        "x_data": 3300,
                        "y_data": 122
                    },
                    {
                        "x_data": 2900,
                        "y_data": 122
                    },
                    {
                        "x_data": 2400,
                        "y_data": 122
                    },
                    {
                        "x_data": 2200,
                        "y_data": 122
                    },
                    {
                        "x_data": 3600,
                        "y_data": 123
                    },
                    {
                        "x_data": 3200,
                        "y_data": 123
                    },
                    {
                        "x_data": 2700,
                        "y_data": 123
                    },
                    {
                        "x_data": 2500,
                        "y_data": 123
                    },
                    {
                        "x_data": 3500,
                        "y_data": 124
                    },
                    {
                        "x_data": 3100,
                        "y_data": 124
                    },
                    {
                        "x_data": 2600,
                        "y_data": 124
                    },
                    {
                        "x_data": 2500,
                        "y_data": 124
                    },
                    {
                        "x_data": 14000,
                        "y_data": 100
                    },
                    {
                        "x_data": 13500,
                        "y_data": 100
                    },
                    {
                        "x_data": 12000,
                        "y_data": 100
                    },
                    {
                        "x_data": 11000,
                        "y_data": 100
                    },
                    {
                        "x_data": 10500,
                        "y_data": 100
                    },
                    {
                        "x_data": 10000,
                        "y_data": 145
                    },
                    {
                        "x_data": 9500,
                        "y_data": 145
                    },
                    {
                        "x_data": 9000,
                        "y_data": 145
                    },
                    {
                        "x_data": 8000,
                        "y_data": 145
                    },
                    {
                        "x_data": 7500,
                        "y_data": 145
                    },
                    {
                        "x_data": 7000,
                        "y_data": 145
                    },
                    {
                        "x_data": 10000,
                        "y_data": 146
                    },
                    {
                        "x_data": 9500,
                        "y_data": 146
                    },
                    {
                        "x_data": 9000,
                        "y_data": 146
                    },
                    {
                        "x_data": 8000,
                        "y_data": 146
                    },
                    {
                        "x_data": 7500,
                        "y_data": 146
                    },
                    {
                        "x_data": 7000,
                        "y_data": 146
                    },
                    {
                        "x_data": 10500,
                        "y_data": 147
                    },
                    {
                        "x_data": 9500,
                        "y_data": 147
                    },
                    {
                        "x_data": 7200,
                        "y_data": 147
                    },
                    {
                        "x_data": 6800,
                        "y_data": 147
                    },
                    {
                        "x_data": 6400,
                        "y_data": 147
                    },
                    {
                        "x_data": 6200,
                        "y_data": 147
                    },
                    {
                        "x_data": 11500,
                        "y_data": 148
                    },
                    {
                        "x_data": 10000,
                        "y_data": 148
                    },
                    {
                        "x_data": 9600,
                        "y_data": 148
                    },
                    {
                        "x_data": 7400,
                        "y_data": 148
                    },
                    {
                        "x_data": 7300,
                        "y_data": 148
                    },
                    {
                        "x_data": 6100,
                        "y_data": 148
                    },
                    {
                        "x_data": 11000,
                        "y_data": 149
                    },
                    {
                        "x_data": 8800,
                        "y_data": 149
                    },
                    {
                        "x_data": 8400,
                        "y_data": 149
                    },
                    {
                        "x_data": 7000,
                        "y_data": 149
                    },
                    {
                        "x_data": 6200,
                        "y_data": 149
                    },
                    {
                        "x_data": 3200,
                        "y_data": 120
                    },
                    {
                        "x_data": 3100,
                        "y_data": 120
                    },
                    {
                        "x_data": 2500,
                        "y_data": 120
                    },
                    {
                        "x_data": 2800,
                        "y_data": 120
                    },
                    {
                        "x_data": 4200,
                        "y_data": 121
                    },
                    {
                        "x_data": 4100,
                        "y_data": 121
                    },
                    {
                        "x_data": 3400,
                        "y_data": 121
                    },
                    {
                        "x_data": 3000,
                        "y_data": 121
                    },
                    {
                        "x_data": 3800,
                        "y_data": 122
                    },
                    {
                        "x_data": 3600,
                        "y_data": 122
                    },
                    {
                        "x_data": 2900,
                        "y_data": 122
                    },
                    {
                        "x_data": 2500,
                        "y_data": 122
                    },
                    {
                        "x_data": 4000,
                        "y_data": 123
                    },
                    {
                        "x_data": 3900,
                        "y_data": 123
                    },
                    {
                        "x_data": 3200,
                        "y_data": 123
                    },
                    {
                        "x_data": 2800,
                        "y_data": 123
                    },
                    {
                        "x_data": 3100,
                        "y_data": 124
                    },
                    {
                        "x_data": 3000,
                        "y_data": 124
                    },
                    {
                        "x_data": 2600,
                        "y_data": 124
                    },
                    {
                        "x_data": 2600,
                        "y_data": 124
                    },
                    {
                        "x_data": 6000,
                        "y_data": 201
                    },
                    {
                        "x_data": 6500,
                        "y_data": 101
                    },
                    {
                        "x_data": 10000,
                        "y_data": 101
                    },
                    {
                        "x_data": 12000,
                        "y_data": 101
                    },
                    {
                        "x_data": 8300,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the number of each allergie type in a bar chart, and display by the X in desc.",
            "Create a bar chart showing how many allergytype across allergytype, and could you rank by the bars from high to low?",
            "What is the number of each allergie type? Return a bar chart, and order bar in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "food",
                        "y_data": 7
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "animal",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Show the position of players and the corresponding number of players in a pie chart.",
            "Show the position of players and the corresponding number of players. Visualize by pie chart.",
            "A pie chart about how many players played each position?",
            "Draw a pie chart for how many players played each position?",
            "How many players played each position. Show a pie chart.",
            "Give me a pie to show the total number from different position."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Defender",
                        "y_data": 7
                    },
                    {
                        "x_data": "Forward",
                        "y_data": 3
                    },
                    {
                        "x_data": "Midfielder",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position"
                }
            }
        }
    },
    {
        "tables_used": [
            "store"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "Bar chart x axis type y axis the total number, display Y-axis in asc order.",
            "Find all types of store and number of them Visualize by bar chart, order by the y axis in asc please.",
            "For each type of store, how many of them are there Plot them as bar chart, and list in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "City Mall",
                        "y_data": 2
                    },
                    {
                        "x_data": "Village Store",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" Plot them as bar chart, and list in desc by the Investor_details please.",
            "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart, rank in descending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "investor_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college location, and could you sort bar in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Western Ontario",
                        "y_data": 2
                    },
                    {
                        "x_data": "St. Francis Xavier",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ottawa",
                        "y_data": 2
                    },
                    {
                        "x_data": "Minnesota",
                        "y_data": 1
                    },
                    {
                        "x_data": "McGill",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "College_Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(College_Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent , and display from low to high by the bars.",
            "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart, and could you order x-axis in asc order?",
            "Create a bar chart showing all_games_percent across acc regular season, could you list ACC_Regular_Season in ascending order?",
            "Give me the comparison about All_Games_Percent over the ACC_Regular_Season , and display from low to high by the bars.",
            "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, show X from low to high order.",
            "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, and show X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "wrestler"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "Show the reign and days held of wrestlers in a scatter chart",
            "Show the reign and days held of wrestlers. Visualize by scatter chart.",
            "Draw a scatter chart for what are the reigns and days held of all wrestlers?",
            "What are the reigns and days held of all wrestlers. Visualize by scatter chart.",
            "Scatter plot to show reign on x axis and days_held on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 344
                    },
                    {
                        "x_data": 1,
                        "y_data": 113
                    },
                    {
                        "x_data": 1,
                        "y_data": 1285
                    },
                    {
                        "x_data": 1,
                        "y_data": 960
                    },
                    {
                        "x_data": 1,
                        "y_data": 1
                    },
                    {
                        "x_data": 1,
                        "y_data": 99
                    },
                    {
                        "x_data": 1,
                        "y_data": 54
                    },
                    {
                        "x_data": 1,
                        "y_data": 183
                    },
                    {
                        "x_data": 2,
                        "y_data": 35
                    },
                    {
                        "x_data": 1,
                        "y_data": 56
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Reign"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Days_held"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of start dates of all the apartment bookings for each weekday with a bar chart.",
            "What is the number of start dates of each apartment booking for each weekday? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, I want to sort Y in descending order.",
            "Draw a bar chart of date versus how many date, and could you display by the Y-axis in desc?",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and count their frequency, list Y-axis from high to low order.",
            "I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year, and list Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customers_policies"
        ],
        "db_id": "insurance_fnol",
        "nl_queries": [
            "Retrieve the close dates of all the policies associated with the customer whose name contains \"Diana\", bin the close dates into the day of week interval and count them for a bar chart, and sort from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Closed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Closed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and list y axis in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, and could you rank y-axis from high to low order please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, rank in descending by the y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time, and rank in descending by the y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, display from high to low by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 190.06896551724137
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 160
                    },
                    {
                        "x_data": "July",
                        "y_data": 129
                    },
                    {
                        "x_data": "June",
                        "y_data": 106.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "A bar chart for what are the number of the dates with a maximum temperature higher than 85?, and show total number in descending order.",
            "What are the number of the dates with a maximum temperature higher than 85?, and sort by the the number of date in desc.",
            "What are the dates with a maximum temperature higher than 85, and count them by a bar chart, and display from high to low by the Y.",
            "Give me the dates when the max temperature was higher than 85, and count them by a bar chart, and display in descending by the y-axis.",
            "Give me the number of the dates when the max temperature was higher than 85, and display from high to low by the Y.",
            "A bar chart for giveing me the number of the dates when the max temperature was higher than 85, and could you show by the y axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 32
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 31
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 28
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 24
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 23
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 21
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie that the student with first name Lisa has? Draw a bar chart, and could you list by the total number in desc?",
            "What is the number of each allergie the girl named Lisa has? Plot them as bar chart, and could you rank in desc by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anchovies",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Allergy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "shipments"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "What is the placement date of the order whose invoice number is 10, and count them by a bar chart",
            "On what day was the order with invoice number 10 placed, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_order_placed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_order_placed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught with a bar chart grouping by course code, show y axis from low to high order.",
            "How many courses each teacher taught? Show me a bar chart grouping by course code, sort in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    },
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    },
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_CODE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "medication",
            "prescribes"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Draw a bar chart for how many medications are prescribed for each brand?, rank in descending by the y axis.",
            "Find the number of medications prescribed for each brand Plot them as bar chart, and I want to order y axis from high to low order.",
            "Display a bar chart for how many medications are prescribed for each brand?, and show Y-axis in desc order.",
            "How many medications are prescribed for each brand Visualize by bar chart, list Y in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thesisin",
                        "y_data": 2
                    },
                    {
                        "x_data": "Procrastin-X",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show the capacity for each cinema in a bar chart.",
            "Create a bar chart showing capacity across name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Codling",
                        "y_data": 1100
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 368
                    },
                    {
                        "x_data": "Dublin Array",
                        "y_data": 364
                    },
                    {
                        "x_data": "Glenmore",
                        "y_data": 305
                    },
                    {
                        "x_data": "Glenough",
                        "y_data": 325
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 208
                    },
                    {
                        "x_data": "Grouse Lodge",
                        "y_data": 203
                    },
                    {
                        "x_data": "Moneypoint",
                        "y_data": 225
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 908
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 330
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents are created in each day? Bin the document date by weekday and group by document type description with a stacked bar chart, I want to sort Y in desc order.",
            "Show the number of documents created in each day and bin document date by weekday and group by document type description with a stacked bar chart, could you rank by the Y-axis in descending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 3,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "fun"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "good"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "good"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "good"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1,
                        "classify": "good"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "good"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "good"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "good"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names and their average grades of each high schooler with a bar chart, and I want to rank by the bars in descending.",
            "Show the names and their average grades of each high schooler, and order in descending by the bar.",
            "Bar graph to show mean grade from different name, and could you rank in descending by the names?",
            "Draw a bar chart for what are the names and the average grades for each high schooler?, and I want to rank by the bars in descending.",
            "What are the names and the average grades for each high schooler Plot them as a bar chart, I want to show from high to low by the X please.",
            "Display a bar chart for what are the names and the average grades for each high schooler?, and list X in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tiffany",
                        "y_data": 9
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 12
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 12
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 10
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "John",
                        "y_data": 12
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 11
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 10
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 10
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 9
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 10
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 11
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 10
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(grade)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart, and show by the y axis in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time, and show in descending by the Y.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, list total number in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, and could you list total number in desc order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart, show by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 31
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 31
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 29
                    },
                    {
                        "x_data": "June",
                        "y_data": 14
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees in the same department as Clara excluding Clara, bin their hire date into the day of week interval, and count how many employees in each month for a bar chart, and I want to sort Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize the relationship between School_ID and ACC_Percent .",
            "What is the relationship between School_ID and ACC_Percent ?",
            "A scatter chart shows the correlation between School_ID and ACC_Percent .",
            "Show me about the correlation between School_ID and ACC_Percent in a scatter chart.",
            "Visualize a scatter chart about the correlation between School_ID and ACC_Percent .",
            "Scatter plot to show school id on x axis and acc_percent on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.875
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.625
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "How many countries does each continent have? List the continent id, continent name and the number of countries in a scatter chart.",
            "For each continent, list its id, name, and how many countries it has in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 2,
                        "classify": "africa"
                    },
                    {
                        "x_data": 1,
                        "y_data": 3,
                        "classify": "america"
                    },
                    {
                        "x_data": 3,
                        "y_data": 2,
                        "classify": "asia"
                    },
                    {
                        "x_data": 5,
                        "y_data": 2,
                        "classify": "australia"
                    },
                    {
                        "x_data": 2,
                        "y_data": 6,
                        "classify": "europe"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ContId",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Compare the number of items in the type of each thing using a bar chart.",
            "Show the number of type of thing code from each type of thing code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commen",
                        "y_data": 8
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 5
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and manager_id , list bars in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and manager_id , I want to display X-axis in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and manager_id , and show by the X in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the first_name , order from low to high by the X.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and manager_id in a bar chart, and I want to display X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 149
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 201
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    },
                    {
                        "x_data": "William",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a line chart, and could you order X in ascending order?",
            "Find the number of courses offered by Psychology department in each year with a line chart, rank by the X-axis from low to high.",
            "How many courses are in the Psychology department for each year? Return a line chart, and display from low to high by the x axis.",
            "How many courses are in the Psychology department for each year? Return a line chart, and order X from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 2
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, sort y axis from low to high order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of name over the name , and group by attribute name, and rank Y in asc order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the amount of name , and group by attribute name, rank by the y-axis from low to high.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, and could you order in asc by the y-axis?",
            "For those records from the products and each product's manufacturer, find name and the amount of name , and group by attribute name, and visualize them by a bar chart, and rank by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 2
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' by a pie chart.",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 231794
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Num_Employees)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "university"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find the total student enrollment for different affiliation type schools.",
            "Display a pie chart for what are the total enrollments of universities of each affiliation type?",
            "Visualize a pie chart with what are the total enrollments of universities of each affiliation type?",
            "What are the total enrollments of universities of each affiliation type. Plot them as pie chart.",
            "Compute the total total number of enrollment across affiliation as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private/Methodist",
                        "y_data": 2100
                    },
                    {
                        "x_data": "Public",
                        "y_data": 119027
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Affiliation"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist",
            "news_report"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Find the average age of journalists working on different role type, show the result with a bar chart, and I want to rank by the Work_Type from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Screening",
                        "y_data": 30.33333333333333
                    },
                    {
                        "x_data": "Music",
                        "y_data": 35.5
                    },
                    {
                        "x_data": "Host",
                        "y_data": 43
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Work_Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(t1.age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "What are the cost and treatment type description of each treatment, order in asc by the y axis.",
            "A bar chart about what are the cost and treatment type description of each treatment?, and order Y-axis from low to high order.",
            "Draw a bar chart for what are the cost and treatment type description of each treatment?, order in asc by the Y-axis.",
            "List the cost of each treatment and the corresponding treatment type description in a bar chart, and could you rank by the y-axis in asc?",
            "List the cost of each treatment and the corresponding treatment type description, order Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Take for a Walk",
                        "y_data": 2392
                    },
                    {
                        "x_data": "Physical examination",
                        "y_data": 2429
                    },
                    {
                        "x_data": "Vaccination",
                        "y_data": 2540
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "treatment_type_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cost_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, find name and the average of code , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the amount of founder , and group by attribute founder in a bar chart, rank by the bar in ascending please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, and sort by the x axis in asc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, I want to sort by the x axis in asc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, and I want to sort by the x axis in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of founder over the founder , and group by attribute founder by a bar chart, sort from low to high by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 3
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 1
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Founder)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manager"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show the number of the countries that have managers of age above 50 or below 46, and I want to rank by the total number in ascending.",
            "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, order by the y axis from low to high.",
            "A bar chart for showing the number of the countries that have managers of age above 50 or below 46, I want to rank by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "England",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manager"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show the working years of managers in descending order of their level, and count them by a bar chart",
            "A bar chart for showing the number of the working years of managers in descending order of their level.",
            "Show the number of the working years of managers in descending order of their level."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Working_year_starts",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Working_year_starts)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart, and display in ascending by the Y-axis.",
            "Bar chart x axis open date y axis how many open date, and order in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution",
            "protein"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution by a pie chart.",
            "Show institution names along with the number of proteins for each institution. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dakota State University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haskell Indian Nations University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lindenwood University\u2013Belleville",
                        "y_data": 2
                    },
                    {
                        "x_data": "Valley City State University",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Institution"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the founder , and group by attribute founder by a bar chart, and rank in descending by the X.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of price , and group by attribute founder, sort x-axis from high to low order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of price , and group by attribute founder in a bar chart, sort x-axis from high to low order.",
            "For those records from the products and each product's manufacturer, find founder and the sum of price , and group by attribute founder, and visualize them by a bar chart, and could you display X-axis in desc order?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of price , and group by attribute founder, and could you display X-axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 125
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 450
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 150
                    },
                    {
                        "x_data": "John",
                        "y_data": 240
                    },
                    {
                        "x_data": "James",
                        "y_data": 486
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute founder, could you rank in ascending by the X-axis?",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart, and show in ascending by the Name please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart, and display X-axis in ascending order please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, could you show by the x axis from low to high?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, and show bars from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Display a bar chart for what are the age and hometown of teachers?, and order x-axis in ascending order please.",
            "Visualize a bar chart for what is the age and hometown of every teacher?, and rank Hometown in asc order.",
            "Create a bar chart showing age across hometown, I want to order x axis from low to high order please.",
            "What are the age and hometown of teachers Visualize by bar chart, and rank Hometown in asc order.",
            "What is the age and hometown of every teacher Visualize by bar chart, could you show from low to high by the Hometown?",
            "Return a histogram on what are the age and hometown of teachers?, could you show from low to high by the Hometown?",
            "A bar chart about what is the age and hometown of every teacher?, and list Hometown in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Blackrod Urban District",
                        "y_data": 32
                    },
                    {
                        "x_data": "Bolton County Borough",
                        "y_data": 29
                    },
                    {
                        "x_data": "Farnworth Municipal Borough",
                        "y_data": 26
                    },
                    {
                        "x_data": "Horwich Urban District",
                        "y_data": 33
                    },
                    {
                        "x_data": "Kearsley Urban District",
                        "y_data": 45
                    },
                    {
                        "x_data": "Little Lever Urban District",
                        "y_data": 41
                    },
                    {
                        "x_data": "Turton Urban District",
                        "y_data": 39
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show me how many long by long in a histogram, and list by the Y from high to low please.",
            "For each station, bin its longitude divided by zero as buckets, and count the frequency in each bucket, order in desc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "<=0",
                        "y_data": 69
                    },
                    {
                        "x_data": ">0",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "long",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(long)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time, and sort by the y-axis in descending.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and could you list by the y axis in descending please?",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, could you list by the y axis in descending please?",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart, could you show Y in desc order?",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of manager_id bin hire_date by time, and visualize them by a bar chart, and could you list by the y axis in descending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 143.23076923076923
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 120.75
                    },
                    {
                        "x_data": "July",
                        "y_data": 116.13333333333334
                    },
                    {
                        "x_data": "June",
                        "y_data": 92.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts opened in each day. Bin the account open day by weekday and group by other account details in a stacked bar chart.",
            "How many accounts are opened in each day? Bin the account open day by weekday and group by other account details in a stacked bar chart.",
            "Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2,
                        "classify": "VIP"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses are provided in each year? Visualize with a line chart, and order X-axis in asc order.",
            "Find the number of courses provided in each year with a line chart, I want to rank from low to high by the year please.",
            "Plot year by sum count(*) as a trend line, list x axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001",
                        "y_data": 5
                    },
                    {
                        "x_data": "2002",
                        "y_data": 13
                    },
                    {
                        "x_data": "2003",
                        "y_data": 12
                    },
                    {
                        "x_data": "2004",
                        "y_data": 7
                    },
                    {
                        "x_data": "2005",
                        "y_data": 8
                    },
                    {
                        "x_data": "2006",
                        "y_data": 13
                    },
                    {
                        "x_data": "2007",
                        "y_data": 12
                    },
                    {
                        "x_data": "2008",
                        "y_data": 10
                    },
                    {
                        "x_data": "2009",
                        "y_data": 9
                    },
                    {
                        "x_data": "2010",
                        "y_data": 11
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute founder by a bar chart.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show employee_id from each email, display in descending by the names.",
            "Visualize a bar chart for simply displaying the email address of the employee and the corresponding employee id, and show from high to low by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 203
                    },
                    {
                        "x_data": "SKING",
                        "y_data": 100
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 205
                    },
                    {
                        "x_data": "NGREENBE",
                        "y_data": 108
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 201
                    },
                    {
                        "x_data": "JWHALEN",
                        "y_data": 200
                    },
                    {
                        "x_data": "JRUSSEL",
                        "y_data": 145
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 204
                    },
                    {
                        "x_data": "DRAPHEAL",
                        "y_data": 114
                    },
                    {
                        "x_data": "AHUNOLD",
                        "y_data": 103
                    },
                    {
                        "x_data": "AFRIPP",
                        "y_data": 121
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "membership_register_branch",
            "branch"
        ],
        "db_id": "shop_membership",
        "nl_queries": [
            "Show all branch names with the number of members in each branch registered after 2015 with a bar chart.",
            "Show all branch names with the number of members in each branch registered after 2015. Plot them as bar chart.",
            "For each branch id, what are the names of the branches that were registered after 2015. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexandre",
                        "y_data": 3
                    },
                    {
                        "x_data": "Popert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zytogorski",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taverner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brooke Greville",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "gymnast",
            "people"
        ],
        "db_id": "gymnast",
        "nl_queries": [
            "Show me a bar chart for how many gymnasts are from each hometown?, and rank bars from high to low order.",
            "How many gymnasts are from each hometown Plot them as bar chart, order x axis in desc order.",
            "Return a bar chart on how many gymnasts are from each hometown?, display by the x axis in descending.",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts, and order x axis in desc order.",
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, display by the x axis in descending.",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, rank x-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Santo Domingo",
                        "y_data": 4
                    },
                    {
                        "x_data": "Santiago de los Caballeros",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Alcarrizos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bonao",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart.",
            "Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob",
                        "y_data": 35
                    },
                    {
                        "x_data": "Zach",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "friend",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "perpetrator"
        ],
        "db_id": "perpetrator",
        "nl_queries": [
            "Visualize a pie chart with what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "Show me the proportion on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "I want to know the proportion of the total number for each country."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "India",
                        "y_data": 1
                    },
                    {
                        "x_data": "Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "South Korea",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain",
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "What are the id and name of the mountains that have at least 2 photos Show bar chart, sort Y in descending order.",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, sort in desc by the Y.",
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, and could you order in desc by the id please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Taska n\u2019Zat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Ighil Mgoun",
                        "y_data": 14
                    },
                    {
                        "x_data": "Mount Cameroon",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Return a histogram on what are the names and ids of customers whose address contains TN?, rank bar in ascending order.",
            "Return the names and ids of customers who have TN in their address by a bar chart, and order in asc by the X-axis.",
            "Return the names and ids of customers who have TN in their address Show bar chart, show by the X in asc.",
            "what are the names and ids of customers whose address contains TN?, and sort by the X in ascending.",
            "What are the names and ids of customers whose address contains TN Show bar chart, sort by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kenya",
                        "y_data": 13
                    },
                    {
                        "x_data": "Lukas",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Allergy_Type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "List the first name of the students who do not have any food type allergy and count them in a bar chart.",
            "What is the first name of each student who is not allergic to any type of food? Count them in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 5
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur",
            "people"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, and count them by a bar chart, and rank by the how many date of birth from high to low.",
            "A bar chart for what are the number of the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?, sort by the Y-axis from high to low.",
            "What are the number of the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?, sort by the Y-axis from high to low.",
            "Return the number of the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, and order by the Y in desc.",
            "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\", and count them by a bar chart, order by the Y in desc.",
            "A bar chart for returning the number of the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, I want to list from high to low by the how many date of birth."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_of_Birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph.",
            "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Panama",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Flag)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Count the total number of different locations of parties using a pie chart.",
            "Give me the proportion about the location of each party with a pie chart.",
            "Create a pie chart showing the number of location across location."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Heineken Music Hall Amsterdam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam, Heineken Music Hall Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "RAI Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Various locations",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality.",
            "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality.",
            "Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart.",
            "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality.",
            "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart.",
            "Show total number of id from each nationality"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 6
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 6
                    },
                    {
                        "x_data": "France",
                        "y_data": 8
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 7
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Order_items",
            "Products",
            "Orders"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show all product names and the number of customers having an order on each product with a bar chart.",
            "Show all product names and the number of customers having an order on each product. Plot them as bar chart.",
            "Give me a histogram for what are teh names of the different products, as well as the number of customers who have ordered each product.",
            "what are teh names of the different products, as well as the number of customers who have ordered each product.",
            "What are teh names of the different products, as well as the number of customers who have ordered each product. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arts",
                        "y_data": 2
                    },
                    {
                        "x_data": "Beer Menus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chocolate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fans",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard Drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Harry Potter 2",
                        "y_data": 1
                    },
                    {
                        "x_data": "Harry Potter 3",
                        "y_data": 4
                    },
                    {
                        "x_data": "Harry Potter 4",
                        "y_data": 1
                    },
                    {
                        "x_data": "Learning English",
                        "y_data": 1
                    },
                    {
                        "x_data": "TV",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "user_profiles",
            "tweets"
        ],
        "db_id": "twitter_1",
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, could you order X-axis in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Black Widow\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "Celine Dion",
                        "y_data": 2
                    },
                    {
                        "x_data": "Iron Man",
                        "y_data": 2
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tyler Swift",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me about the proportion of the sum of Height and the sum of Height in a pie chart.",
            "For the attribute Sex and the sum of Height, show their proportion by a pie chart.",
            "Visualize a pie chart about the proportion of Sex and the sum of Height.",
            "A pie chart shows the proportion of Sex and the sum of Height.",
            "Return a pie chart about the proportion of Sex and the sum of Height.",
            "Create a pie chart showing sum height across sex."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 395
                    },
                    {
                        "x_data": "M",
                        "y_data": 1366
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Height)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "customers"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "For each customer who has at least two orders, find the customer name and number of orders made. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "George",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beulah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jeramie",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Count the number of employees for each city Plot them as bar chart, and rank in asc by the y-axis.",
            "Count the number of employees for each city with a bar chart, display total number from low to high order.",
            "Draw a bar chart for what is the number of employees from each city?, show y axis in asc order.",
            "Bar chart of the total number from each city, and display total number from low to high order.",
            "What is the number of employees from each city, and list total number from low to high order please.",
            "what is the number of employees from each city?, and show y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Leicester",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sale",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wasps",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bath",
                        "y_data": 3
                    },
                    {
                        "x_data": "Bristol",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "City",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all dates of transactions whose type code is \"SALE\", and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name, and show from low to high by the total number.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, and could you list in asc by the Y?",
            "For those records from the products and each product's manufacturer, find name and the sum of code , and group by attribute name, and visualize them by a bar chart, and order in ascending by the y axis.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name, sort total number of code in asc order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, and show from low to high by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 5
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 23
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, sort X-axis in descending order.",
            "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, rank in desc by the bar.",
            "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, and could you rank by the bars from high to low?",
            "A bar chart shows the distribution of All_Home and School_ID , and group by attribute ACC_Home, and sort X-axis in descending order.",
            "Stack bar chart of school_id vs ACC_Home based on all home, and list from high to low by the bars.",
            "Find All_Home and School_ID , and group by attribute ACC_Home, and visualize them by a bar chart, sort X-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 4,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What are the names and ids of customers whose address contains TN Show bar chart, and rank in asc by the y-axis.",
            "Return the names and ids of customers who have TN in their address by a bar chart, and sort in ascending by the y axis please.",
            "Return the names and ids of customers who have TN in their address Show bar chart, and order by the total number in asc please.",
            "Return a histogram on what are the names and ids of customers whose address contains TN?, rank in asc by the y-axis.",
            "what are the names and ids of customers whose address contains TN?, and sort in ascending by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lukas",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kenya",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, compute the total number of states, and compute the average of their vote id with a bar chart.",
            "Bar chart x axis state y axis the average of vote id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 3
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 5
                    },
                    {
                        "x_data": "NY",
                        "y_data": 1.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(vote_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "Bar chart of the number of date from each date, and display date in descending order.",
            "A bar chart listing the number of battle date, and sort from high to low by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June 1205",
                        "y_data": 2
                    },
                    {
                        "x_data": "February 1206",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 September 1207",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 June 1208",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 January 1206",
                        "y_data": 1
                    },
                    {
                        "x_data": "14 April 1205",
                        "y_data": 1
                    },
                    {
                        "x_data": "1235",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Show me a bar chart about the number of races held in each year after 2014, and I want to list y axis from low to high order please.",
            "How many races are held in each year after 2014? Show me a bar chart, and I want to show by the how many year from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart, I want to list in asc by the Y-axis please.",
            "Plot how many date from by grouped by date from as a bar graph, list Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show each employee's salary using a bar chart, note that use the last name of each employee, and sort by the X-axis in ascending.",
            "Show me salary by last name in a histogram, display X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baer",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 9000
                    },
                    {
                        "x_data": "King",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 4400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Give me a bar chart for sum price of each name, and display from low to high by the y-axis please.",
            "Give me a histogram for what are the names and total prices of all products in the store?, display from low to high by the y-axis please.",
            "Visualize a bar chart for what are the names and the total prices of all products in the store?, and display by the y axis in ascending.",
            "What are the names and the accumulated prices of all products in the store Plot them as a bar chart, I want to order by the Y in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "Use a stacked bar chart to show how many films for each title and each type The x-axis is title, could you sort in desc by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tootsie",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 1,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 1,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 3,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 2,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 0,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 0,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 1,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 1,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 0,
                        "classify": "Mass suicide murder"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart listing the number of faults for different description of skills required to fix them, show by the bar in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Electrical",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 5
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the transaction type and the number of transactions by a bar chart.",
            "Show the transaction type and the number of transactions. Plot them as bar chart.",
            "Return a histogram on what are the different transaction types, and how many transactions of each have taken place?",
            "Show me a bar chart for what are the different transaction types, and how many transactions of each have taken place?",
            "What are the different transaction types, and how many transactions of each have taken place. Show bar chart.",
            "Draw a bar chart of transaction type versus the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Payment",
                        "y_data": 6
                    },
                    {
                        "x_data": "Refund",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the maximum capacity among rooms in each building with a bar chart, rank by the X-axis from high to low.",
            "Bar chart x axis building y axis maximal capacity, show by the X-axis from high to low.",
            "What is the greatest capacity for rooms in each building? Draw a bar chart, list bar in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whitman",
                        "y_data": 120
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 115
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 113
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 109
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 60
                    },
                    {
                        "x_data": "Power",
                        "y_data": 12
                    },
                    {
                        "x_data": "Polya",
                        "y_data": 28
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 97
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 92
                    },
                    {
                        "x_data": "Main",
                        "y_data": 30
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 10
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 51
                    },
                    {
                        "x_data": "Grace",
                        "y_data": 34
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 65
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 59
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 27
                    },
                    {
                        "x_data": "Drown",
                        "y_data": 18
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 11
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 12
                    },
                    {
                        "x_data": "Alumni",
                        "y_data": 47
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give me a scatter chart to visualize two attributes: the employees' departments' id and the corresponding location id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 90,
                        "y_data": 1700
                    },
                    {
                        "x_data": 60,
                        "y_data": 1400
                    },
                    {
                        "x_data": 100,
                        "y_data": 1700
                    },
                    {
                        "x_data": 30,
                        "y_data": 1700
                    },
                    {
                        "x_data": 50,
                        "y_data": 1500
                    },
                    {
                        "x_data": 80,
                        "y_data": 2500
                    },
                    {
                        "x_data": 10,
                        "y_data": 1700
                    },
                    {
                        "x_data": 20,
                        "y_data": 1800
                    },
                    {
                        "x_data": 40,
                        "y_data": 2400
                    },
                    {
                        "x_data": 70,
                        "y_data": 2700
                    },
                    {
                        "x_data": 110,
                        "y_data": 1700
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "LOCATION_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of salary over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of salary over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, for salary, hire_date, visualize the trend.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about salary over hire_date with a line chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of salary over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the trend of salary over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-09-03",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 13000
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 8300
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Plot the number of home city by grouped by home city as a bar graph, and show from high to low by the Y-axis.",
            "Show the comparison of the total number of the home city of all drivers with a bar chart, and could you order the number of home city from high to low order?",
            "Please give me a pie chart to show the number of home cities of all drivers, I want to show by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hartford",
                        "y_data": 6
                    },
                    {
                        "x_data": "East Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Manchester",
                        "y_data": 1
                    },
                    {
                        "x_data": "Coventry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bethel",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_city",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_city)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show all template type codes and the number of documents using each type with a bar chart, display by the x axis in descending.",
            "Show all template type codes and the number of documents using each type Visualize by bar chart, list in descending by the x axis.",
            "What are the different template type codes, and how many documents use each type Plot them as bar chart, and show by the bar from high to low.",
            "what are the different template type codes, and how many documents use each type?, and display by the x axis in descending.",
            "A bar chart about what are the different template type codes, and how many documents use each type?, order by the x axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    },
                    {
                        "x_data": "PP",
                        "y_data": 4
                    },
                    {
                        "x_data": "BK",
                        "y_data": 5
                    },
                    {
                        "x_data": "AD",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Can you draw the trend of maximal score over the year?, rank by the x-axis in descending.",
            "What are the maximum score of wines in each year?, and list by the Year in descending please.",
            "Show me the trend aboutthe maximum score of wines for each year, rank Year in desc order please.",
            "Give me a line chart about each year's maximum score , and rank by the x-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2066-01-01",
                        "y_data": 88
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 95
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 95
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 98
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 98
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 95
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 92
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(Score)"
                }
            }
        }
    },
    {
        "tables_used": [
            "accelerator_compatible_browser",
            "browser",
            "web_client_accelerator"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "A pie chart showing the number of browsers for each accelerator in the descending order of compatible year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CACHEbox",
                        "y_data": 2
                    },
                    {
                        "x_data": "CProxy",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fasterfox",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nitro",
                        "y_data": 1
                    },
                    {
                        "x_data": "fasTun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the change of department_id over hire_date in a line chart, and list x axis from high to low order please.",
            "For those employees who did not have any job in the past, a line chart shows the trend of department_id over hire_date , and list x axis from high to low order please.",
            "For those employees who did not have any job in the past, give me the trend about department_id over hire_date , I want to order in desc by the X-axis.",
            "For those employees who did not have any job in the past, for department_id, hire_date, visualize the trend, show x axis from high to low order please.",
            "For those employees who did not have any job in the past, a line chart shows the change of department_id over hire_date, list HIRE_DATE in descending order.",
            "For those employees who did not have any job in the past, return a line chart about the change of department_id over hire_date , list HIRE_DATE in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 40
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show how many committee from each committee, I want to sort names in desc order.",
            "How many delegates in each committee? Return a bar chart, I want to order in descending by the X.",
            "Show the number of delegates in each committee with a bar chart, and show by the bar from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ways and Means",
                        "y_data": 1
                    },
                    {
                        "x_data": "Health and Government Operations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters (Vice-Chair)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Economic Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Appropriations",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Committee",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Committee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Return the average price for each product type Visualize by bar chart, I want to sort in desc by the Y.",
            "What is the average price for each type of product Visualize by bar chart, and display in descending by the the average of product price.",
            "Return the average price for each product type by a bar chart, and could you list the average of product price from high to low order?",
            "Bar graph to show mean product price from different product type code, rank Y-axis from high to low order please.",
            "what is the average price for each type of product?, and show y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 796.0416666666665
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 715.5366666666665
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart, order total number in ascending order please.",
            "In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, order total number in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 79
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 81
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 82
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 82
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 86
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 87
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 90
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Show me a bar chart for how many matches were played each year?",
            "Return a histogram on how many matches were played in each year.",
            "Sum the number of matches that happened each year. Plot them as a bar chart.",
            "Show sum count(*) from each year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 12
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2016",
                        "y_data": 158
                    },
                    {
                        "x_data": "2017",
                        "y_data": 108
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "List the number of completion students in each month and bin date of completion by month interval with a bar chart, display from high to low by the Y-axis.",
            "How many completion students in each month? Return a bar chart binning date of completion by month interval, and order in descending by the y axis.",
            "Bar chart of how many date of completion from each date of completion, could you order in desc by the Y please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mar",
                        "y_data": 16
                    },
                    {
                        "x_data": "Feb",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Bar chart x axis type y axis total number of enrollment, rank by the X in desc.",
            "Please give me a bar chart showing institution types, along with the total enrollment for each type, could you order by the x axis in desc?",
            "Please compare the total enrollment for each type using a bar chart, list in desc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tribal",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Public",
                        "y_data": 5267
                    },
                    {
                        "x_data": "Private",
                        "y_data": 7868
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For employees with first names that end with the letter m, groups and count the first name to visualize a bar graph, list in ascending by the X-axis.",
            "For those employees whose first name is ending with the letter m, show the frequency of the first name using a bar chart, sort X-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(FIRST_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Give me the times and numbers of all trains that go to Chennai with a pie chart.",
            "Give me the times and numbers of all trains that go to Chennai.",
            "Show me the proportion of times and numbers of all trains that go to Chennai with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "17:15",
                        "y_data": 16724
                    },
                    {
                        "x_data": "4:49",
                        "y_data": 16128
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "train_number"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "time"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, group states and count them in a bar chart, rank X-axis in descending order.",
            "Bar chart of the number of state from each state, could you order in desc by the X-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "NY",
                        "y_data": 2
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "CA",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions",
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the relationship between account name and the number of transactions for each account in a scatter chart.",
            "What is the relationship between account name and the number of transactions for each account? Return a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 390,
                        "y_data": 1
                    },
                    {
                        "x_data": 371,
                        "y_data": 3
                    },
                    {
                        "x_data": 710,
                        "y_data": 1
                    },
                    {
                        "x_data": 337,
                        "y_data": 4
                    },
                    {
                        "x_data": 191,
                        "y_data": 1
                    },
                    {
                        "x_data": 601,
                        "y_data": 1
                    },
                    {
                        "x_data": 272,
                        "y_data": 3
                    },
                    {
                        "x_data": 861,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "account_name"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "architect",
            "bridge"
        ],
        "db_id": "architecture",
        "nl_queries": [
            "Give me a histogram for what are the ids and names of the architects who built at least 3 bridges ?",
            "Draw a bar chart for what are the ids and names of the architects who built at least 3 bridges ?",
            "What are the ids and names of the architects who built at least 3 bridges ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Frank Lloyd Wright",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frank Gehry",
                        "y_data": 2
                    },
                    {
                        "x_data": "Le Corbusier",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A bar chart about the number of end dates for incidents with incident type code \"NOISE\"?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-08",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_end",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_end)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Order_items"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the order ids and the number of items in each order with a scatter chart.",
            "Show the order ids and the number of items in each order.",
            "plot scatter on how many order items correspond to each order id?",
            "Return a scatter on how many order items correspond to each order id?",
            "How many order items correspond to each order id. Plot them as scatter chart.",
            "Scatter plot to show order id on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 2
                    },
                    {
                        "x_data": 2,
                        "y_data": 1
                    },
                    {
                        "x_data": 4,
                        "y_data": 3
                    },
                    {
                        "x_data": 10,
                        "y_data": 1
                    },
                    {
                        "x_data": 12,
                        "y_data": 1
                    },
                    {
                        "x_data": 13,
                        "y_data": 4
                    },
                    {
                        "x_data": 14,
                        "y_data": 1
                    },
                    {
                        "x_data": 15,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "order_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Show the number of cities in each country with a bar chart.",
            "What is the number of cities in each country? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abbotsford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Burnaby",
                        "y_data": 2
                    },
                    {
                        "x_data": "Campbell River",
                        "y_data": 6
                    },
                    {
                        "x_data": "Castlegar",
                        "y_data": 2
                    },
                    {
                        "x_data": "Central Saanich",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chilliwack",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Which committees have delegates from the Democratic party, and count them by a bar chart, I want to rank x axis from high to low order.",
            "Return all the committees that have delegates from Democratic party, and count them by a bar chart, display in desc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Environmental Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Economic Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Appropriations",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Committee",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Committee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Transcript_Contents",
            "Transcripts"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Return a histogram on what is the date and id of the transcript with at least 2 courses listed?, display in desc by the X.",
            "Show the date and id of the transcript with at least 2 course results Visualize by bar chart, and could you rank by the x-axis in descending?",
            "A bar chart about what is the date and id of the transcript with at least 2 courses listed?, could you show from high to low by the names?",
            "Show the date and id of the transcript with at least 2 course results in a bar chart, and could you rank by the x-axis in descending?",
            "What is the date and id of the transcript with at least 2 courses listed Visualize by bar chart, and could you rank by the x-axis in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-06-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2010-12-13",
                        "y_data": 6
                    },
                    {
                        "x_data": "1998-11-22",
                        "y_data": 15
                    },
                    {
                        "x_data": "1975-05-06",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transcript_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "transcript_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "Bar chart x axis publication date y axis how many publication date, could you order by the x-axis in ascending?",
            "A bar chart showing the number of publication dates of books, display in ascending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "April 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "August 2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "June 2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "October 2005",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publication_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Publication_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\", sort from low to high by the x-axis.",
            "What are the category of music festivals with result \"Awarded\", and count them by a bar chart, I want to list x axis in asc order.",
            "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?, I want to list x axis in asc order.",
            "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart, and I want to rank in ascending by the bars.",
            "What are the number of the category of music festivals with result \"Awarded\"?, could you order in ascending by the X-axis?",
            "Return the number of the categories of music festivals that have the result \"Awarded\", and show by the names in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Best Song",
                        "y_data": 2
                    },
                    {
                        "x_data": "Best Sound Song",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Category)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Activity",
            "Faculty_participates_in"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show all the activity names and the number of faculty involved in each activity Show bar chart, and list by the Y in descending.",
            "How many faculty members participate in each activity? Return the activity names and the number of faculty members by a bar chart, and could you rank by the Y from high to low?",
            "Show all the activity names and the number of faculty involved in each activity in a bar chart, order by the Y in descending please.",
            "Display a bar chart for how many faculty members participate in each activity? Return the activity names and the number of faculty members, sort Y in descending order.",
            "How many faculty members participate in each activity? Return the activity names and the number of faculty members Show bar chart, and list by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Crossword Puzzles",
                        "y_data": 7
                    },
                    {
                        "x_data": "Mountain Climbing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Chess",
                        "y_data": 5
                    },
                    {
                        "x_data": "Canoeing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Football",
                        "y_data": 3
                    },
                    {
                        "x_data": "Extreme Canasta",
                        "y_data": 3
                    },
                    {
                        "x_data": "Canasta",
                        "y_data": 3
                    },
                    {
                        "x_data": "Volleyball",
                        "y_data": 2
                    },
                    {
                        "x_data": "Square Dancing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Spelunking",
                        "y_data": 2
                    },
                    {
                        "x_data": "Soccer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kayaking",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baseball",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "activity_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show the average price of each film in a bar chart, show names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Draw a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex.",
            "Return a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex.",
            "Give me the comparison about the average of Weight over the Sex , and group by attribute Sex by a bar chart.",
            "A bar chart shows the distribution of Sex and the average of Weight , and group by attribute Sex.",
            "Show me about the distribution of Sex and the average of Weight , and group by attribute Sex in a bar chart.",
            "Show me the average of weight by sex in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 92
                    },
                    {
                        "x_data": "M",
                        "y_data": 86.71428571428571
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "web_client_accelerator"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "Draw a bar chart of operating system versus the total number, display from high to low by the names please.",
            "Find the number of web accelerators used for each Operating system, and I want to rank x-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Windows, except NT and 95",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac, Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac, Linux and Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac and Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac",
                        "y_data": 3
                    },
                    {
                        "x_data": "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows (2000 onwards)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows",
                        "y_data": 3
                    },
                    {
                        "x_data": "Unix (Linux, *BSD, Mac OS X, others), Windows",
                        "y_data": 2
                    },
                    {
                        "x_data": "Unix (Linux, *BSD, Mac OS X, others)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Appliance (Linux)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Any system with Java 1.6 VM available",
                        "y_data": 1
                    },
                    {
                        "x_data": "Any",
                        "y_data": 1
                    },
                    {
                        "x_data": "Android, Linux, Mac and Windows devices",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Operating_system",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "A bar chart about how many departments are in each school?, rank X-axis in asc order.",
            "Find the number of departments in each school Plot them as bar chart, could you list in ascending by the X?",
            "Return a bar chart on how many departments are in each school?, display in ascending by the names.",
            "How many departments are in each school Show bar chart, display by the bars in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A&SCI",
                        "y_data": 7
                    },
                    {
                        "x_data": "BUS",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SCHOOL_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT dept_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about All_Games_Percent over the ACC_Regular_Season , list total number in ascending order.",
            "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent , rank All_Games_Percent in ascending order please.",
            "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart, display by the Y in ascending.",
            "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, and list total number in ascending order.",
            "Create a bar chart showing all_games_percent across acc regular season, and could you sort Y-axis in asc order?",
            "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, rank All_Games_Percent from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.6
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.946
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of treatments in each day with a line chart that groups by date of treatment, order from high to low by the date_of_treatment.",
            "How many treatments in each day? Return a line chart that groups by date of treatment, list from high to low by the x axis.",
            "How many treatments in each day? Return a line chart that groups by date of treatment, order X in descending order.",
            "List the number of treatments in each day with a line chart that groups by date of treatment, and order from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-26",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "status"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Draw a bar chart for showing the id and name of the stations that have ever had more than 12 bikes available, and rank id in asc order.",
            "Draw a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, and order total number in ascending order please.",
            "What are the different ids and names of the stations that have had more than 12 bikes available Plot them as bar chart, I want to rank from low to high by the y-axis.",
            "Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, rank id in asc order.",
            "What are the id and name of the stations that have ever had more than 12 bikes available? Plot them as a bar chart, rank id in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commercial at Montgomery",
                        "y_data": 45
                    },
                    {
                        "x_data": "Embarcadero at Vallejo",
                        "y_data": 48
                    },
                    {
                        "x_data": "Beale at Market",
                        "y_data": 56
                    },
                    {
                        "x_data": "5th at Howard",
                        "y_data": 57
                    },
                    {
                        "x_data": "Townsend at 7th",
                        "y_data": 65
                    },
                    {
                        "x_data": "Yerba Buena Center of the Arts (3rd @ Howard)",
                        "y_data": 68
                    },
                    {
                        "x_data": "Civic Center BART (7th at Market)",
                        "y_data": 72
                    },
                    {
                        "x_data": "Mechanics Plaza (Market at Battery)",
                        "y_data": 75
                    },
                    {
                        "x_data": "Market at Sansome",
                        "y_data": 77
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "roller_coaster"
        ],
        "db_id": "roller_coaster",
        "nl_queries": [
            "Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, sort from high to low by the Name please.",
            "Show the names of countries and the average speed of roller coasters from each country with a bar chart, and show by the bars in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sweden",
                        "y_data": 67
                    },
                    {
                        "x_data": "Finland",
                        "y_data": 47.45
                    },
                    {
                        "x_data": "Austria",
                        "y_data": 58.66666666666666
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.Speed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the average of price supplied by supplier id 3 for different product type code in a bar chart, and sort in asc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 817
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A line chart shows the trend of the amount of date_address_to over date_address_to , and group by attribute other_details.",
            "Draw a line chart about the change of the amount of date_address_to over date_address_to , and group by attribute other_details.",
            "Show me the trend about the amount of date_address_to over date_address_to , and group by attribute other_details with a line chart.",
            "Give me the trend about the amount of date_address_to over date_address_to , and group by attribute other_details.",
            "Show me about the change of the amount of date_address_to over date_address_to , and group by attribute other_details in a line chart.",
            "Return a line chart about the change of the amount of date_address_to over date_address_to , and group by attribute other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 2,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018-02-25",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 3,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1,
                        "classify": "house"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_address_to)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart, and rank total number in desc order.",
            "Bar chart x axis open date y axis how many open date, rank total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show all account ids and account details by a scatter chart.",
            "Show all account ids and account details. Plot them as scatter chart.",
            "Scatter. what are the ids and details of all accounts?",
            "Return a scatter chart on what are the ids and details of all accounts?",
            "What are the ids and details of all accounts. Show scatter chart.",
            "Show me a scatter plot of account id and account_details for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 7,
                        "y_data": 495.06300000000005
                    },
                    {
                        "x_data": 61,
                        "y_data": 930.14
                    },
                    {
                        "x_data": 98,
                        "y_data": 6035.84
                    },
                    {
                        "x_data": 136,
                        "y_data": 199.52
                    },
                    {
                        "x_data": 164,
                        "y_data": 12223.93
                    },
                    {
                        "x_data": 209,
                        "y_data": 11130.23
                    },
                    {
                        "x_data": 211,
                        "y_data": 1230.454
                    },
                    {
                        "x_data": 240,
                        "y_data": 6352.31
                    },
                    {
                        "x_data": 262,
                        "y_data": 147.96
                    },
                    {
                        "x_data": 280,
                        "y_data": 187.14
                    },
                    {
                        "x_data": 321,
                        "y_data": 745.817
                    },
                    {
                        "x_data": 346,
                        "y_data": 127.9
                    },
                    {
                        "x_data": 414,
                        "y_data": 25.41
                    },
                    {
                        "x_data": 427,
                        "y_data": 1168.32
                    },
                    {
                        "x_data": 451,
                        "y_data": 658.26
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Account_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Account_Details"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "Visualize a bar chart for how films are produced by each studio?, I want to display in descending by the Y.",
            "List the studios of each film and the number of films produced by that studio by a bar chart, I want to display in descending by the Y.",
            "How films are produced by each studio Show bar chart, display y axis in descending order please.",
            "List the studios of each film and the number of films produced by that studio Show bar chart, and show the total number in desc order.",
            "Show me the total number by studio in a histogram, and rank by the Y in descending please.",
            "A bar chart about how films are produced by each studio?, display y axis in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Paramount",
                        "y_data": 2
                    },
                    {
                        "x_data": "Columbia",
                        "y_data": 2
                    },
                    {
                        "x_data": "20th Century Fox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Universal / RKO",
                        "y_data": 1
                    },
                    {
                        "x_data": "Universal",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Artists",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paramount / Lorimar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orion / Carolco",
                        "y_data": 1
                    },
                    {
                        "x_data": "MGM",
                        "y_data": 1
                    },
                    {
                        "x_data": "Columbia / Rastar",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Studio",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number by a bar chart, list y-axis in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and commission_pct , list total number in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number , sort in desc by the Y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and commission_pct , and visualize them by a bar chart, list total number in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and commission_pct , and list total number in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings in each day and group by booking end date with a line chart, sort by the booking_end_date in descending.",
            "How many apartment bookings in each day? Show me a line chart grouping by booking end date, and show by the booking_end_date from high to low.",
            "Show me a line chart of how how many booking end date change over the booking end date, and sort by the x-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-07",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-10-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-28",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_end_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_end_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Return the number of the lot details of lots that belong to investors with details \"l\"?, and order in desc by the y axis please.",
            "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, I want to rank by the how many lot details in descending.",
            "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, and could you list in descending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "z",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes', could you rank by the names from low to high please?",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' with a bar chart, show from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 231794
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Num_Employees)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Has_allergy"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Find the last name and age of the student who has allergy to both milk and cat. Show a pie chart.",
            "Give the proportion of what are the last names and ages of the students who are allergic to milk and cat?",
            "Show me the proportion on what are the last names and ages of the students who are allergic to milk and cat?",
            "What are the last names and ages of the students who are allergic to milk and cat."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apap",
                        "y_data": 18
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 17
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the director and their lowest rating among all movies in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, show me the trend about manager_id over hire_date with a line chart, and display X-axis in descending order.",
            "For those employees who was hired before 2002-06-21, for manager_id, hire_date, visualize the trend, and display X-axis in descending order.",
            "For those employees who was hired before 2002-06-21, give me the trend about manager_id over hire_date , sort from high to low by the X-axis.",
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of manager_id over hire_date , and sort from high to low by the X-axis.",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of manager_id over hire_date, display X-axis in descending order.",
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of manager_id over hire_date , and could you display by the X from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Count the names of all the products in the store and return me a bar chart, could you order y axis in asc order?",
            "Give me a bar chart for how many name of each name, order by the Y in ascending.",
            "What is the number of names for each product in the store?, and display by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Use a bar chart to show the number of start dates of all the apartment bookings made by guests with gender code \"Female\" for each weekday, and rank from high to low by the y-axis.",
            "A bar chart showing the number of start date of the apartment bookings made by female guests (gender code \"Female\") for each weekday, and show by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Give me a pie chart to reflect the proportion of other_details and the sum of monthly_rental.",
            "Draw a pie chart about the proportion of other_details and the sum of monthly_rental.",
            "Return a pie chart about the proportion of other_details and the sum of monthly_rental.",
            "Visualize a pie chart about the proportion of other_details and the sum of monthly_rental.",
            "For the attribute other_details and the sum of monthly_rental, show their proportion by a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "apartment",
                        "y_data": 7345
                    },
                    {
                        "x_data": "house",
                        "y_data": 11469
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(monthly_rental)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A bar chart about the number of end dates for incidents with incident type code \"NOISE\"?, sort date_incident_end from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-08",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_end",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_end)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergies with number of students affected Show bar chart, and sort by the Y-axis from low to high.",
            "How many students have each different allergy Show bar chart, and I want to order in ascending by the total number.",
            "Show the total number from each allergy, show total number from low to high order.",
            "Return a bar chart on how many students have each different allergy?, and I want to show Y-axis from low to high order.",
            "Show all allergies with number of students affected with a bar chart, sort by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rodent",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anchovies",
                        "y_data": 3
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 3
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 4
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 4
                    },
                    {
                        "x_data": "Soy",
                        "y_data": 4
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 6
                    },
                    {
                        "x_data": "Nuts",
                        "y_data": 11
                    },
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Payments"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "List all payment methods and number of payments using each payment methods Plot them as bar chart, sort by the Y in descending.",
            "For each payment method, how many payments were made Show bar chart, display y-axis in desc order.",
            "List all payment methods and number of payments using each payment methods by a bar chart, show by the Y-axis in descending.",
            "Show the total number from each payment method code, sort by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Direct Debit",
                        "y_data": 10
                    },
                    {
                        "x_data": "Credit Card",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "A scatter chart shows the correlation between People_ID and Height , and group by attribute Sex.",
            "Draw a scatter chart about the correlation between People_ID and Height , and group by attribute Sex.",
            "Visualize a scatter chart about the correlation between People_ID and Height , and group by attribute Sex.",
            "Return a scatter chart about the correlation between People_ID and Height , and group by attribute Sex.",
            "What is the relationship between People_ID and Height , and group by attribute Sex?",
            "Show people id vs height as scatter plot use a different color for each Sex"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 200,
                        "classify": "F"
                    },
                    {
                        "x_data": 5,
                        "y_data": 195,
                        "classify": "F"
                    },
                    {
                        "x_data": 1,
                        "y_data": 188,
                        "classify": "M"
                    },
                    {
                        "x_data": 2,
                        "y_data": 197,
                        "classify": "M"
                    },
                    {
                        "x_data": 4,
                        "y_data": 202,
                        "classify": "M"
                    },
                    {
                        "x_data": 6,
                        "y_data": 196,
                        "classify": "M"
                    },
                    {
                        "x_data": 7,
                        "y_data": 193,
                        "classify": "M"
                    },
                    {
                        "x_data": 8,
                        "y_data": 194,
                        "classify": "M"
                    },
                    {
                        "x_data": 9,
                        "y_data": 196,
                        "classify": "M"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "People_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, and rank x-axis in ascending order please.",
            "How many courses for each subject? Plot a bar chart, could you display bar in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    },
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    },
                    {
                        "x_data": "Language",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show sum of budget in different year and group by department creation time with a line chart.",
            "Can you draw the trend of sum budget in billions over the creation?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789-01-01",
                        "y_data": 20
                    },
                    {
                        "x_data": "1849-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "1870-01-01",
                        "y_data": 23
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 77
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 59
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 439
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 543
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 46
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 58
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 21
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 62
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 73
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 44
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the party and the number of drivers in each party with a bar chart.",
            "Show the party and the number of drivers in each party. Plot them as bar chart.",
            "Create a bar chart showing the total number across party"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dem",
                        "y_data": 10
                    },
                    {
                        "x_data": "Rep",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the headquarter , and group by attribute headquarter, show by the y-axis in asc.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of manufacturer , and group by attribute headquarter, and visualize them by a bar chart, I want to rank from low to high by the y-axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, I want to rank from low to high by the y-axis.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, and order from low to high by the y axis.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, could you order in asc by the y-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Visualize the title and their average smallest ratings of the movie using a bar chart.",
            "Please return me a bar chart show what are the average smallest rating of different movie title?",
            "Visualize the average smallest rating of different movie title using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 4
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Group by all home, show the team id and school id in a scatter plot.",
            "Give me a scatter chart that groups by all home, the x-axis is team id and the y-axis is school id.",
            "Draw a scatterplot of team id vs school_id where team id is on the x-axis and points are colored by All_Home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 5,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give the minimum product price for each product type in a pie chart.",
            "What is the lowest price of product, grouped by product type? Show a pie chart.",
            "I want to know the proportion of minimum product price for each product type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 408.82
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 612.46
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, give me the comparison about price over the name , order by the names from high to low please.",
            "For those products with a price between 60 and 120, give me the comparison about price over the name by a bar chart, could you list by the Name in descending?",
            "For those products with a price between 60 and 120, find name and price , and visualize them by a bar chart, and could you rank in desc by the Name?",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and price , I want to sort in desc by the bar please.",
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and price , show by the x-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Bar chart x axis all games y axis team_id, and display by the X-axis in ascending please.",
            "Give me the comparison about Team_ID over the All_Games by a bar chart, display by the X-axis in ascending please.",
            "Show me about the distribution of All_Games and Team_ID in a bar chart, and order by the bars from low to high please.",
            "Find All_Games and Team_ID , and visualize them by a bar chart, I want to order in asc by the x-axis.",
            "Give me the comparison about Team_ID over the All_Games , and rank from low to high by the bar please.",
            "A bar chart shows the distribution of All_Games and Team_ID , order by the bars from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "21\u201314",
                        "y_data": 4
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 3
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For each city, return the highest latitude among its stations. Show a pie chart.",
            "For each city, what is the highest latitude for its stations. Visualize by pie chart.",
            "Create a pie chart showing maximal lat across city."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mountain View",
                        "y_data": 37.40694000000001
                    },
                    {
                        "x_data": "Palo Alto",
                        "y_data": 37.448598
                    },
                    {
                        "x_data": "Redwood City",
                        "y_data": 37.491269
                    },
                    {
                        "x_data": "San Francisco",
                        "y_data": 37.80477
                    },
                    {
                        "x_data": "San Jose",
                        "y_data": 37.352601
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(lat)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city"
                }
            }
        }
    },
    {
        "tables_used": [
            "MATCH"
        ],
        "db_id": "city_record",
        "nl_queries": [
            "What are the venues of all the matches? Sort them in the descending order of match date, and count them by a bar chart",
            "What are the number of the venues of all the matches? Sort them in the descending order of match date.",
            "A bar chart for what are the number of the venues of all the matches? Sort them in the descending order of match date.",
            "List venues of all matches in the order of their dates starting from the most recent one, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Estadio Cuscatl\u00e1n , San Salvador , El Salvador",
                        "y_data": 5
                    },
                    {
                        "x_data": "Estadio Rigoberto L\u00f3pez , Managua , Nicaragua",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy",
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergy type with number of students affected with a bar chart, and order X-axis from high to low order.",
            "How many students are affected by each allergy type Visualize by bar chart, and could you list x-axis from high to low order?",
            "Draw a bar chart for how many students are affected by each allergy type?, show by the bar in descending.",
            "Show all allergy type with number of students affected Visualize by bar chart, show in desc by the bars.",
            "A bar chart about how many students are affected by each allergy type?, and could you rank in descending by the bars?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "food",
                        "y_data": 28
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 23
                    },
                    {
                        "x_data": "animal",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "chip_model",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32, and could you show by the bar in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HTC Corporation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Huawei Technologies Co.Ltd.",
                        "y_data": 1
                    },
                    {
                        "x_data": "LG Electronics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a bar chart for how many people are under 40 for each gender?, display Y in desc order.",
            "How many people are under 40 for each gender Plot them as bar chart, and display Y in desc order.",
            "Find the number of people who is under 40 for each gender, sort from high to low by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "female",
                        "y_data": 2
                    },
                    {
                        "x_data": "male",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "What are total transaction amounts for each transaction type, could you show by the Y-axis from low to high?",
            "Show the transaction types and the total amount of transactions with a bar chart, and rank by the total number of transaction amount in ascending.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?, and could you sort in ascending by the Y-axis?",
            "what are total transaction amounts for each transaction type?, and show by the Y-axis from low to high.",
            "Show sum transaction amount from each transaction type, and list by the total number in asc.",
            "Show the transaction types and the total amount of transactions, could you sort in ascending by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Payment",
                        "y_data": 8743.15
                    },
                    {
                        "x_data": "Refund",
                        "y_data": 11192.69
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(transaction_amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a bar chart grouping by instructor's first name, and rank by the names in ascending.",
            "Show the number of courses each instructor taught in a bar chart, rank X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Compare the average of maximum score of wines each year, bin the year into the weekday interval, and show by the Y-axis from high to low.",
            "A bar chart about the average of maximum score of wines each year, bin the year into the weekday interval, and I want to show in descending by the total number.",
            "Compare the average of maximum score of wines each year, bin the year into the weekday interval and draw a bar chart, and list Y from high to low order.",
            "Give me a bar chart for mean max(score) of each year, and show by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 98
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 98
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 95
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 95
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 93.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 88
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(max(Score))"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "A bar chart for how many competitions for each country, and display bars from high to low order.",
            "Show me the number of country by country in a histogram, and I want to sort in desc by the x axis.",
            "How many competitions for each country?, rank by the Country in desc.",
            "Compare the total number of competitions for each country, I want to sort in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Spain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show all the buildings along with the number of faculty members the buildings have with a bar chart.",
            "Show all the buildings along with the number of faculty members the buildings have. Plot them as bar chart.",
            "Return a bar chart on how many faculty members does each building have? List the result with the name of the building.",
            "Show me a bar chart for how many faculty members does each building have? List the result with the name of the building.",
            "How many faculty members does each building have? List the result with the name of the building with a bar chart.",
            "How many faculty members does each building have? List the result with the name of the building. Visualize by bar chart.",
            "Bar graph to show the total number from different building"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Barton",
                        "y_data": 20
                    },
                    {
                        "x_data": "Krieger",
                        "y_data": 20
                    },
                    {
                        "x_data": "NEB",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Building",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Player"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "A bar chart about what are the names and number of hours spent training for each player who trains for less than 1500 hours?, and order HS from low to high order.",
            "What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, and could you list by the total number from low to high?",
            "Find the name and training hours of players whose hours are below 1500 Show bar chart, and rank by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charles",
                        "y_data": 300
                    },
                    {
                        "x_data": "Eddie",
                        "y_data": 600
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "pName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "HS"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games in each season and group by home team in a group line chart. The x-axis is season.",
            "The trend about the the number of season of different Home_team over the season"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 5,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 4,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 8,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 3,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 5,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 10,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 4,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 10,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 4,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Visualize a bar chart for the number of trains for each station by the station network name, display names in desc order please.",
            "Find the number of trains for each station, as well as the station network name Show the result with a bar graph, sort in descending by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cheshunt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chesham",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chalfont & Latimer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chafford Hundred",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carpenders Park",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bushey",
                        "y_data": 2
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 2
                    },
                    {
                        "x_data": "Amersham",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "network_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Draw a bar chart for what is the name of every city that has at least 15 stations and how many stations does it have?, and order by the x axis in desc.",
            "What is the name of every city that has at least 15 stations and how many stations does it have Visualize by bar chart, and display by the names from high to low.",
            "List the name and the number of stations for all the cities that have at least 15 stations Show bar chart, and order by the x axis in desc.",
            "List the name and the number of stations for all the cities that have at least 15 stations with a bar chart, and display by the names from high to low.",
            "A bar chart about what is the name of every city that has at least 15 stations and how many stations does it have?, and display by the names from high to low.",
            "Create a bar chart showing the total number across city, I want to list names from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "San Jose",
                        "y_data": 16
                    },
                    {
                        "x_data": "San Francisco",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show the proportion of faculty for each rank.",
            "How many faculty members do we have for each rank? Give me a proportion.",
            "I want to know the proportion of faculty members for each rank."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart.",
            "Plot how many date to by grouped by date to as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_to",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, I want to list in descending by the log_entry_date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-04-10",
                        "y_data": 13
                    },
                    {
                        "x_data": "1997-08-31",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "problem_log_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "people",
            "wedding)"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "A bar chart about the name and age for all male people who don't have a wedding, and could you order y-axis in ascending order?",
            "Show the name and age for all male people who don't have a wedding with a bar chart, list from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam Scott",
                        "y_data": 26
                    },
                    {
                        "x_data": "Graeme McDowell",
                        "y_data": 34
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "flight"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "Show how many flights each pilot has flied in a pie chart.",
            "Create a pie chart showing how many pilot across pilot."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Peterson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thompson",
                        "y_data": 10
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Pilot)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Pilot"
                }
            }
        }
    },
    {
        "tables_used": [
            "people",
            "people)"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show the number of countries for all people whose age is smaller than the average, display Y-axis in desc order.",
            "A bar chart about the number of countries for all people whose age is smaller than the average, and display by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 5
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "tryout"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and show by the bars in descending.",
            "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, list by the x axis from high to low.",
            "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, show by the bars in descending.",
            "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and rank by the state in descending.",
            "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision Plot them as bar chart, show by the bars in descending.",
            "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, and could you order names from high to low order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "enr"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses provided in each year with a group line chart that groups by semester, and I want to show in desc by the X.",
            "I want to see trend sum count(*) over year by semester, order by the x axis from high to low.",
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester, I want to order X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010",
                        "y_data": 5,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 7,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 8,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 4,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 3,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 9,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2001",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 9,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 5,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2001",
                        "y_data": 3,
                        "classify": "Spring"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, and show from low to high by the the average of department id.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, I want to display by the y-axis in asc.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart, sort in ascending by the total number.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, and show in ascending by the y-axis.",
            "For those employees who did not have any job in the past, find hire_date and the average of department_id bin hire_date by weekday, and visualize them by a bar chart, and could you display by the Y-axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 60.666666666666664
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 61.42857142857143
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 62
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 63.57142857142857
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 63.84615384615385
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 64.28571428571429
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 67.33333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Charges"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Give me a bar chart for charge_amount of each charge type, could you list by the x axis in asc?",
            "List each charge type and its amount Show bar chart, display bars in asc order.",
            "List each charge type and its amount in a bar chart, list in asc by the x-axis.",
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount, and rank charge_type in asc order.",
            "How much does each charge type costs? List both charge type and amount, could you list bar in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Daily Accommodation",
                        "y_data": 98
                    },
                    {
                        "x_data": "Drugs",
                        "y_data": 322
                    },
                    {
                        "x_data": "Health Check",
                        "y_data": 640
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "charge_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "charge_amount"
                }
            }
        }
    },
    {
        "tables_used": [
            "players"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Find the number of players for each hand type. Show bar chart.",
            "Show me a bar chart for how many players are there for each hand type?",
            "Return a histogram on how many players are there for each hand type?",
            "How many players are there for each hand type. Visualize by bar chart.",
            "Bar chart x axis hand y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 954
                    },
                    {
                        "x_data": "L",
                        "y_data": 487
                    },
                    {
                        "x_data": "R",
                        "y_data": 5028
                    },
                    {
                        "x_data": "U",
                        "y_data": 14193
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "hand",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "How many accounts for different account details? Draw a bar chart, list by the Y-axis in desc.",
            "Bar chart x axis other account details y axis how many other account details, and list by the Y-axis in desc.",
            "Show the number of accounts in a bar chart that groups by other account details, and order total number in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Regular",
                        "y_data": 8
                    },
                    {
                        "x_data": "VIP",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_account_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_account_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Give me a scatter chart to show the star rating of the movie and reviewer id, group the title."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 206,
                        "y_data": 3,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": 207,
                        "y_data": 5,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": 205,
                        "y_data": 2,
                        "classify": "E.T."
                    },
                    {
                        "x_data": 208,
                        "y_data": 3,
                        "classify": "E.T."
                    },
                    {
                        "x_data": 201,
                        "y_data": 2,
                        "classify": "Gone with the Wind"
                    },
                    {
                        "x_data": 204,
                        "y_data": 3,
                        "classify": "Gone with the Wind"
                    },
                    {
                        "x_data": 202,
                        "y_data": 4,
                        "classify": "Snow White"
                    },
                    {
                        "x_data": 203,
                        "y_data": 2,
                        "classify": "The Sound of Music"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "rID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "member_attendance",
            "member",
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Show the number of the dates of performances with attending members whose roles are \"Violin\", I want to rank from high to low by the bar.",
            "A bar chart for showing the number of the dates of performances with attending members whose roles are \"Violin\", and list by the Date in descending.",
            "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart, sort in descending by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "February 5",
                        "y_data": 1
                    },
                    {
                        "x_data": "February 2",
                        "y_data": 2
                    },
                    {
                        "x_data": "February 11",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_Channel"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "List each language and the number of TV Channels using it Visualize by bar chart, rank y-axis in ascending order.",
            "Bar chart of the total number from each language, and list by the total number from low to high.",
            "List each language and the number of TV Channels using it in a bar chart, list by the total number from low to high.",
            "For each language, list the number of TV Channels that use it Plot them as bar chart, I want to order from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italian",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Language",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and manufacturer , rank from low to high by the Y.",
            "For those products with a price between 60 and 120, give me the comparison about manufacturer over the name , sort by the y-axis in ascending please.",
            "For those products with a price between 60 and 120, a bar chart shows the distribution of name and manufacturer , rank from low to high by the Y.",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and manufacturer , and rank from low to high by the Y.",
            "For those products with a price between 60 and 120, draw a bar chart about the distribution of name and manufacturer , and could you order by the Y in asc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, rank by the how many fname in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners and group by first name in a bar chart, and could you sort by the total number in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 2
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 2
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 2
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Road and Team_ID , and visualize them by a bar chart, I want to order y axis from high to low order.",
            "Draw a bar chart about the distribution of All_Road and Team_ID , display Team_ID in descending order.",
            "Give me the comparison about Team_ID over the All_Road by a bar chart, and list by the Y-axis from high to low.",
            "Show me about the distribution of All_Road and Team_ID in a bar chart, and display Y in desc order.",
            "Show me team_id by all road in a histogram, and I want to list from high to low by the Team_ID.",
            "Return a bar chart about the distribution of All_Road and Team_ID , order y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4\u20138",
                        "y_data": 4
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 3
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "13\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Just show the average and minimum price of the rooms in different decor using a scatter.",
            "What is the relationship between the average price and the minimum price of the rooms for each different decor? How about using a line chart to show them.",
            "Please give me scatter to visualize two attr: the average and minimum price of the rooms in different decor using a scatter.",
            "Show avg(baseprice) vs minimal baseprice as scatter plot use a different color for each decor"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 112.5,
                        "y_data": 75,
                        "classify": "modern"
                    },
                    {
                        "x_data": 162.5,
                        "y_data": 150,
                        "classify": "rustic"
                    },
                    {
                        "x_data": 187.5,
                        "y_data": 150,
                        "classify": "traditional"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(basePrice)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute headquarter in a bar chart, and display from high to low by the total number.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and manufacturer , and group by attribute headquarter, show by the Y in desc please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute headquarter, show y-axis from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute headquarter, and show by the Y in desc please.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and manufacturer , and group by attribute headquarter, show y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the number of each allergiy type in a pie chart.",
            "What is the number of allergy type? Show the proportion.",
            "Compute the total the number of allergytype across allergytype as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "food",
                        "y_data": 7
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show the of customer addresses and group by premises type and address type code in a stacked bar chart The x-axis is premises type, sort x-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Office",
                        "y_data": 4,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 1,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 3,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Office",
                        "y_data": 2,
                        "classify": "Shipping"
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 2,
                        "classify": "Shipping"
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 3,
                        "classify": "Shipping"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "students",
            "student_course_registrations",
            "courses"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "how many registed students do each course have? List course name and the number of their registered students?, display by the names from high to low.",
            "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, display by the names from high to low.",
            "For each course id, how many students are registered and what are the course names, and rank X in desc order.",
            "How many registed students do each course have? List course name and the number of their registered students, display X in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "statistics",
                        "y_data": 4
                    },
                    {
                        "x_data": "data structure",
                        "y_data": 1
                    },
                    {
                        "x_data": "French",
                        "y_data": 2
                    },
                    {
                        "x_data": "English",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "A bar chart shows how many locations, list by the the number of location from high to low.",
            "How many locations? Draw a bar chart, order by the Y from high to low.",
            "Bar graph to show how many location from different location, and sort Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London",
                        "y_data": 10
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 1
                    },
                    {
                        "x_data": "Birmingham",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Compare the number of players of different occupations using a bar chart, I want to show in asc by the Occupation.",
            "Visualize a bar chart to show how many players in each occupation, and I want to list names in ascending order.",
            "Bar chart x axis occupation y axis how many occupation, I want to show in asc by the Occupation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Design Coordinator",
                        "y_data": 1
                    },
                    {
                        "x_data": "Distribution Centre Associate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Locomotive Engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ministerial Assistant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parliamentarian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Product Consultant - MLCC",
                        "y_data": 1
                    },
                    {
                        "x_data": "Researcher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retired",
                        "y_data": 2
                    },
                    {
                        "x_data": "Self Employed / Consultant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Small Businessman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Student",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Occupation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Occupation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Give me a bar chart to visualize the number of the districts of markets they are on, in ascending order of the ranking of the market."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alberta",
                        "y_data": 2
                    },
                    {
                        "x_data": "British Columbia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quebec",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(District)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter, and could you order in desc by the x axis?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, could you rank by the bars from high to low please?",
            "For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart, and I want to display by the x axis in descending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, sort in desc by the x axis.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of code , and group by attribute headquarter, and I want to rank from high to low by the Headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 3
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 7.666666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, order in desc by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, rank y axis in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, list by the Y-axis from high to low please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, and I want to sort y-axis from high to low order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id, and order by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 4935
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 610
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 203
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, and list by the Level_of_membership in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gonzalo Higua\u00edn ",
                        "y_data": 8
                    },
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 6
                    },
                    {
                        "x_data": "Guti Midfielder",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Level_of_membership"
                }
            }
        }
    },
    {
        "tables_used": [
            "payment",
            "payment",
            "staff"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart, and show by the total number in asc please.",
            "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, and list total number from low to high order.",
            "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and show by the total number in asc please.",
            "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and list total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "May",
                        "y_data": 5
                    },
                    {
                        "x_data": "June",
                        "y_data": 15
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 47
                    },
                    {
                        "x_data": "July",
                        "y_data": 47
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "A bar chart showing the number of members in each country, rank from low to high by the bars please.",
            "Plot how many country by grouped by country as a bar graph, rank from low to high by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, and display y-axis in asc order.",
            "Find the number of the dates of the tests taken with result \"Pass\", sort from low to high by the y axis.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, and order y-axis in ascending order.",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", and order total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_test_taken",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_test_taken)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Show me a bar chart for how many total credits are offered by each department?, sort by the total number of credits from low to high.",
            "Draw a bar chart for how many total credits are offered by each department?, sort by the total number of credits from low to high.",
            "Bar chart of total number of credits from each dept name, and sort in asc by the total number of credits.",
            "How many total credits are offered by each department Show bar chart, I want to display Y in ascending order.",
            "Find the total credits of courses provided by different department Plot them as bar chart, and display Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Marketing",
                        "y_data": 20
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 21
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 23
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 23
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 28
                    },
                    {
                        "x_data": "English",
                        "y_data": 28
                    },
                    {
                        "x_data": "History",
                        "y_data": 29
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 30
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 33
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 34
                    },
                    {
                        "x_data": "Math",
                        "y_data": 34
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 37
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 37
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 37
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 38
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 40
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 40
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 44
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 49
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What are the names of products with price at most 200, and count them by a bar chart, and rank by the y axis in ascending.",
            "What are the number of the names of products with price at most 200?, and could you list in ascending by the Y?",
            "Select the name of the products with a price less than or equal to $200, and count them by a bar chart, and rank by the y axis in ascending.",
            "A bar chart for what are the number of the names of products with price at most 200?, and show from low to high by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each office in a bar chart, and I want to display X in ascending order please.",
            "How many courses for each office? Show me a bar chart, and display in asc by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BBG 208",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total credits of courses provided by different department Plot them as bar chart, and order by the dept_name in descending.",
            "Show me a bar chart for how many total credits are offered by each department?, sort by the bar in desc.",
            "Bar chart of total number of credits from each dept name, and display dept_name in descending order.",
            "How many total credits are offered by each department Show bar chart, sort by the bar in desc.",
            "Draw a bar chart for how many total credits are offered by each department?, and rank bar from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 21
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 44
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 23
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 38
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 40
                    },
                    {
                        "x_data": "Math",
                        "y_data": 34
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 20
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 37
                    },
                    {
                        "x_data": "History",
                        "y_data": 29
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 33
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 49
                    },
                    {
                        "x_data": "English",
                        "y_data": 28
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 28
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 67
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 37
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 34
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 23
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 30
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 37
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 40
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A scatter chart shows the correlation between Shop_ID and Employee_ID .",
            "Draw a scatter chart about the correlation between Shop_ID and Employee_ID .",
            "Visualize the relationship between Shop_ID and Employee_ID .",
            "Return a scatter chart about the correlation between Shop_ID and Employee_ID .",
            "Visualize a scatter chart about the correlation between Shop_ID and Employee_ID .",
            "Scatter plot to show shop id on x axis and employee_id on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1
                    },
                    {
                        "x_data": 1,
                        "y_data": 2
                    },
                    {
                        "x_data": 8,
                        "y_data": 3
                    },
                    {
                        "x_data": 4,
                        "y_data": 4
                    },
                    {
                        "x_data": 5,
                        "y_data": 5
                    },
                    {
                        "x_data": 2,
                        "y_data": 6
                    },
                    {
                        "x_data": 6,
                        "y_data": 7
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Shop_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Employee_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show the total salary by each hire date of employees, and please bin the hire date into the day of week interval for showing a bar chart, sort by the Y in asc.",
            "Plot total number of salary by grouped by hire date as a bar graph, could you display in ascending by the Y-axis?",
            "Compare the total salary by each hire date (bin it into the day of week interval) of employees using a bar chart, display from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 36000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 55200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize the relationship between employee_id and commission_pct .",
            "For those employees who did not have any job in the past, draw a scatter chart about the correlation between employee_id and commission_pct .",
            "For those employees who did not have any job in the past, return a scatter chart about the correlation between employee_id and commission_pct .",
            "For those employees who did not have any job in the past, show me about the correlation between employee_id and commission_pct in a scatter chart.",
            "For those employees who did not have any job in the past, what is the relationship between employee_id and commission_pct ?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 0
                    },
                    {
                        "x_data": 103,
                        "y_data": 0
                    },
                    {
                        "x_data": 104,
                        "y_data": 0
                    },
                    {
                        "x_data": 105,
                        "y_data": 0
                    },
                    {
                        "x_data": 106,
                        "y_data": 0
                    },
                    {
                        "x_data": 107,
                        "y_data": 0
                    },
                    {
                        "x_data": 108,
                        "y_data": 0
                    },
                    {
                        "x_data": 109,
                        "y_data": 0
                    },
                    {
                        "x_data": 110,
                        "y_data": 0
                    },
                    {
                        "x_data": 111,
                        "y_data": 0
                    },
                    {
                        "x_data": 112,
                        "y_data": 0
                    },
                    {
                        "x_data": 113,
                        "y_data": 0
                    },
                    {
                        "x_data": 115,
                        "y_data": 0
                    },
                    {
                        "x_data": 116,
                        "y_data": 0
                    },
                    {
                        "x_data": 117,
                        "y_data": 0
                    },
                    {
                        "x_data": 118,
                        "y_data": 0
                    },
                    {
                        "x_data": 119,
                        "y_data": 0
                    },
                    {
                        "x_data": 120,
                        "y_data": 0
                    },
                    {
                        "x_data": 121,
                        "y_data": 0
                    },
                    {
                        "x_data": 123,
                        "y_data": 0
                    },
                    {
                        "x_data": 124,
                        "y_data": 0
                    },
                    {
                        "x_data": 125,
                        "y_data": 0
                    },
                    {
                        "x_data": 126,
                        "y_data": 0
                    },
                    {
                        "x_data": 127,
                        "y_data": 0
                    },
                    {
                        "x_data": 128,
                        "y_data": 0
                    },
                    {
                        "x_data": 129,
                        "y_data": 0
                    },
                    {
                        "x_data": 130,
                        "y_data": 0
                    },
                    {
                        "x_data": 131,
                        "y_data": 0
                    },
                    {
                        "x_data": 132,
                        "y_data": 0
                    },
                    {
                        "x_data": 133,
                        "y_data": 0
                    },
                    {
                        "x_data": 134,
                        "y_data": 0
                    },
                    {
                        "x_data": 135,
                        "y_data": 0
                    },
                    {
                        "x_data": 136,
                        "y_data": 0
                    },
                    {
                        "x_data": 137,
                        "y_data": 0
                    },
                    {
                        "x_data": 138,
                        "y_data": 0
                    },
                    {
                        "x_data": 139,
                        "y_data": 0
                    },
                    {
                        "x_data": 140,
                        "y_data": 0
                    },
                    {
                        "x_data": 141,
                        "y_data": 0
                    },
                    {
                        "x_data": 142,
                        "y_data": 0
                    },
                    {
                        "x_data": 143,
                        "y_data": 0
                    },
                    {
                        "x_data": 144,
                        "y_data": 0
                    },
                    {
                        "x_data": 145,
                        "y_data": 0.4
                    },
                    {
                        "x_data": 146,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 147,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 148,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 149,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 150,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 151,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 152,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 153,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 154,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 155,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 156,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 157,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 158,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 159,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 160,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 161,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 162,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 163,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 164,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 165,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 166,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 167,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 168,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 169,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 170,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 171,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 172,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 173,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 174,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 175,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 177,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 178,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 179,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 180,
                        "y_data": 0
                    },
                    {
                        "x_data": 181,
                        "y_data": 0
                    },
                    {
                        "x_data": 182,
                        "y_data": 0
                    },
                    {
                        "x_data": 183,
                        "y_data": 0
                    },
                    {
                        "x_data": 184,
                        "y_data": 0
                    },
                    {
                        "x_data": 185,
                        "y_data": 0
                    },
                    {
                        "x_data": 186,
                        "y_data": 0
                    },
                    {
                        "x_data": 187,
                        "y_data": 0
                    },
                    {
                        "x_data": 188,
                        "y_data": 0
                    },
                    {
                        "x_data": 189,
                        "y_data": 0
                    },
                    {
                        "x_data": 190,
                        "y_data": 0
                    },
                    {
                        "x_data": 191,
                        "y_data": 0
                    },
                    {
                        "x_data": 192,
                        "y_data": 0
                    },
                    {
                        "x_data": 193,
                        "y_data": 0
                    },
                    {
                        "x_data": 194,
                        "y_data": 0
                    },
                    {
                        "x_data": 195,
                        "y_data": 0
                    },
                    {
                        "x_data": 196,
                        "y_data": 0
                    },
                    {
                        "x_data": 197,
                        "y_data": 0
                    },
                    {
                        "x_data": 198,
                        "y_data": 0
                    },
                    {
                        "x_data": 199,
                        "y_data": 0
                    },
                    {
                        "x_data": 202,
                        "y_data": 0
                    },
                    {
                        "x_data": 203,
                        "y_data": 0
                    },
                    {
                        "x_data": 204,
                        "y_data": 0
                    },
                    {
                        "x_data": 205,
                        "y_data": 0
                    },
                    {
                        "x_data": 206,
                        "y_data": 0
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "What are the ids and names of the medicine that can interact with two or more enzymes Visualize by bar chart, and could you show by the name in desc?",
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?, and order by the X-axis from high to low.",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, and order by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ziprasidone",
                        "y_data": 20
                    },
                    {
                        "x_data": "Iloperidone",
                        "y_data": 8
                    },
                    {
                        "x_data": "Asenapine",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aripiprazole",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000 Plot them as bar chart, and I want to list by the names from low to high.",
            "what are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?, and could you display by the x-axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting Manager",
                        "y_data": 7800
                    },
                    {
                        "x_data": "Finance Manager",
                        "y_data": 7800
                    },
                    {
                        "x_data": "Marketing Manager",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Purchasing Manager",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 6000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max_salary - min_salary"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each month and bin date to by month interval with a bar chart, could you list from high to low by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mar",
                        "y_data": 18
                    },
                    {
                        "x_data": "Feb",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_to",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of courses for each subject in a pie chart.",
            "How many courses for each subject? Plot a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    },
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    },
                    {
                        "x_data": "Language",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_series"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "List top 3 highest Rating TV series. List the TV series's Episode and Rating in a bar chart.",
            "List top 3 highest Rating TV series. List the TV series's Episode and Rating. Show bar chart.",
            "Draw a bar chart for what are 3 most highly rated episodes in the TV series table and what were those ratings?",
            "Show me a bar chart for what are 3 most highly rated episodes in the TV series table and what were those ratings?",
            "What are 3 most highly rated episodes in the TV series table and what were those ratings. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A Love of a Lifetime",
                        "y_data": 5.8
                    },
                    {
                        "x_data": "Friendly Skies",
                        "y_data": 5.3
                    },
                    {
                        "x_data": "Game Three",
                        "y_data": 4.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Episode",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Rating"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What is the lowest price of product, grouped by product type? Show a bar chart.",
            "Give the minimum product price for each product type in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 408.82
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 612.46
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "list"
        ],
        "db_id": "student_1",
        "nl_queries": [
            "For each fourth-grade classroom, show the classroom number and the total number of students using it. Show the correlation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 108,
                        "y_data": 2
                    },
                    {
                        "x_data": 110,
                        "y_data": 6
                    },
                    {
                        "x_data": 111,
                        "y_data": 4
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Classroom"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "What is the average high temperature for each day of week Plot them as bar chart, and could you order in desc by the x-axis?",
            "Return a histogram on what is the average high temperature for each day of week?, I want to rank by the bar in desc.",
            "Bar graph to show the average of high temperature from different day of week, and could you order by the bars in desc?",
            "Draw a bar chart for what is the average high temperature for each day of week?, and list in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wednesday",
                        "y_data": 58
                    },
                    {
                        "x_data": "Tuesday",
                        "y_data": 58
                    },
                    {
                        "x_data": "Thursday",
                        "y_data": 57
                    },
                    {
                        "x_data": "Sunday",
                        "y_data": 54
                    },
                    {
                        "x_data": "Saturday",
                        "y_data": 55
                    },
                    {
                        "x_data": "Monday",
                        "y_data": 56
                    },
                    {
                        "x_data": "Friday",
                        "y_data": 55
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "day_of_week",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(high_temperature)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me the trend about Employee_ID over Start_from with a line chart, I want to display by the X in asc.",
            "Plot start from by employee_id as a line chart, list by the X-axis in asc.",
            "Draw a line chart about the change of Employee_ID over Start_from , and order X-axis from low to high order please.",
            "Show me about the change of Employee_ID over Start_from in a line chart, order by the X-axis in ascending.",
            "A line chart shows the trend of Employee_ID over Start_from , order X-axis from low to high order please.",
            "Give me the trend about Employee_ID over Start_from , order by the X-axis in ascending.",
            "Visualize a line chart about the change of Employee_ID over Start_from , and sort X in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 7
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Employee_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and list y axis in desc order.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday, and I want to list y axis from high to low order please.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to display by the sum department id in descending please.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday, list by the sum department id from high to low.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart, and list y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 1010
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 930
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 910
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 900
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 890
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 860
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 830
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many treatments in each month? Return a bar chart, show by the y axis from low to high please.",
            "List the number of treatments in each month with a bar chart, and show by the Y in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart shows the distribution of family_name and author_tutor_ATB .",
            "Give me the comparison about author_tutor_ATB over the family_name by a bar chart.",
            "Give me the comparison about author_tutor_ATB over the family_name .",
            "Return a bar chart about the distribution of family_name and author_tutor_ATB .",
            "Draw a bar chart about the distribution of family_name and author_tutor_ATB ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rohan",
                        "y_data": 817
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 331
                    },
                    {
                        "x_data": "Greenholt",
                        "y_data": 229
                    },
                    {
                        "x_data": "Reichel",
                        "y_data": 349
                    },
                    {
                        "x_data": "Champlin",
                        "y_data": 159
                    },
                    {
                        "x_data": "Crist",
                        "y_data": 833
                    },
                    {
                        "x_data": "Zboncak",
                        "y_data": 505
                    },
                    {
                        "x_data": "Nader",
                        "y_data": 782
                    },
                    {
                        "x_data": "Rowe",
                        "y_data": 557
                    },
                    {
                        "x_data": "Treutel",
                        "y_data": 869
                    },
                    {
                        "x_data": "Effertz",
                        "y_data": 613
                    },
                    {
                        "x_data": "Armstrong",
                        "y_data": 975
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 974
                    },
                    {
                        "x_data": "Kreiger",
                        "y_data": 847
                    },
                    {
                        "x_data": "Barrows",
                        "y_data": 388
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "family_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_tutor_ATB"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between code and manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the correlation between code and manufacturer , and group by attribute founder in a scatter chart.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, what is the relationship between code and manufacturer , and group by attribute founder?",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and manufacturer , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 5,
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": 8,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 9,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 11,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 1,
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": 6,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 7,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 10,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 2,
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": 4,
                        "y_data": 6,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the Year interval and then shows the amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 9,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 7,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 12,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 7,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 15,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 11,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 18,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 12,
                        "classify": "Visa"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Payment_Made)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "mailshot_campaigns"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show all distinct product categories along with the number of mailshots in each category in a pie chart.",
            "Draw a pie chart with all distinct product categories along with the number of mailshots in each category.",
            "I want to know the proportion of total number for each product category."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "clothes",
                        "y_data": 9
                    },
                    {
                        "x_data": "food",
                        "y_data": 11
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just list the first name of the employee and show the location id of the corresponding department using a bar chart, could you rank by the x axis from high to low please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susan",
                        "y_data": 2400
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1800
                    },
                    {
                        "x_data": "John",
                        "y_data": 2500
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 2700
                    },
                    {
                        "x_data": "Den",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 1400
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 1500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "LOCATION_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Create a bar chart showing capacity across name, order Name in desc order.",
            "Show the capacity for each cinema in a bar chart, list x axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oriel",
                        "y_data": 330
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 908
                    },
                    {
                        "x_data": "Moneypoint",
                        "y_data": 225
                    },
                    {
                        "x_data": "Grouse Lodge",
                        "y_data": 203
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 208
                    },
                    {
                        "x_data": "Glenough",
                        "y_data": 325
                    },
                    {
                        "x_data": "Glenmore",
                        "y_data": 305
                    },
                    {
                        "x_data": "Dublin Array",
                        "y_data": 364
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 1100
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 368
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses",
            "Ref_budget_codes"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents for different budget type code in a pie chart.",
            "Return a pie chart to show how many documents for different budget type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GV",
                        "y_data": 6
                    },
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    },
                    {
                        "x_data": "SF",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Budget_Type_Code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of manufacturer , and group by attribute name in a bar chart, and rank by the bars in desc.",
            "For those records from the products and each product's manufacturer, find name and the sum of manufacturer , and group by attribute name, and visualize them by a bar chart, and I want to show in desc by the x axis.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name, and rank by the bars in desc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the name , and group by attribute name by a bar chart, and rank by the bars in desc.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of manufacturer , and group by attribute name, I want to show in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road.",
            "Visualize a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road.",
            "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road.",
            "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart.",
            "Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road.",
            "Bar chart x axis acc road y axis total number of school id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 9
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each course description? Show me a stacked bar chart The x-axis is course description and group by office name, and sort by the CRS_DESCRIPTION from low to high please.",
            "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by office name, I want to rank by the names in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 300"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assessment_Notes",
            "Teachers"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Find the ids and first names of the 3 teachers that have the most number of assessment notes. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Trystan",
                        "y_data": 3
                    },
                    {
                        "x_data": "Citlalli",
                        "y_data": 6
                    },
                    {
                        "x_data": "Woodrow",
                        "y_data": 9
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "teacher_id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show me how many type by type in a histogram, and I want to display x axis in descending order.",
            "Return a bar chart showing the total number of each ship type, and I want to display X in descending order.",
            "Show me the comparison of the total number of every ship type with a bar graph, list Type in desc order.",
            "What is the total number of each ship type? Give me a bar chart, and list Type in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cargo ship",
                        "y_data": 5
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the average of revenue , and group by attribute headquarter in a bar chart, show x-axis in asc order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of revenue , and group by attribute headquarter, and I want to list from low to high by the Headquarter.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of revenue , and group by attribute headquarter, list in asc by the x-axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the headquarter , and group by attribute headquarter, list in asc by the x-axis.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of revenue , and group by attribute headquarter, and I want to order by the Headquarter from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 100
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 50
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 30
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Create a bar chart showing maximal revenue across headquarter, sort from high to low by the y axis.",
            "Give me a bar chart to show the revenue of the company that earns the highest revenue in each headquarter city, and I want to display by the maximal revenue in descending please.",
            "Please tell the revenues of the companies with the highest revenues in each headquarter city, sort from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 100
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 50
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show me a line chart of how the number of creation change over the creation, sort by the Creation in descending.",
            "Show the number of departments created in different year and bin creation time by year in a line chart, list x axis in descending order.",
            "Show me a line chart of how the number of creation change over the creation, rank in desc by the x-axis please.",
            "Show the number of departments created in different year and bin creation time by year in a line chart, and show X in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1999~2002",
                        "y_data": 1
                    },
                    {
                        "x_data": "1978~1998",
                        "y_data": 2
                    },
                    {
                        "x_data": "1957~1977",
                        "y_data": 3
                    },
                    {
                        "x_data": "1936~1956",
                        "y_data": 2
                    },
                    {
                        "x_data": "1915~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1894~1914",
                        "y_data": 2
                    },
                    {
                        "x_data": "1873~1893",
                        "y_data": 1
                    },
                    {
                        "x_data": "1852~1872",
                        "y_data": 1
                    },
                    {
                        "x_data": "1831~1851",
                        "y_data": 1
                    },
                    {
                        "x_data": "1810~1830",
                        "y_data": 0
                    },
                    {
                        "x_data": "1789~1809",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Creation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway",
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show id and location of railways that are associated with more than one train Visualize by bar chart, could you sort x axis in desc order?",
            "Show id and location of railways that are associated with more than one train by a bar chart, sort by the X-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bressingham",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Railway_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name does not contain the letter M, give me a line chart to show the hire date and the corresponding salaries, show in asc by the x-axis please.",
            "For employees without the letter M in their first name, give me a line chart to show the salary change over their hire date using a line chart, order from low to high by the X.",
            "For employees without the letter M in their first name, give me a line chart to show the salary change over their hire date using a line chart, and sort by the HIRE_DATE in asc.",
            "For those employees whose first name does not contain the letter M, give me a line chart to show the hire date and the corresponding salaries, and sort x-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 5800
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 2100
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 3500
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 14000
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 13500
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 9600
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 7300
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 8600
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 8400
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 3400
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 3800
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 3900
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 4400
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the sum of price of productd supplied by supplier id 3 for different product type code in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 1634
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(product_price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "What are the average ages of artists by countries? Visualize the result with a histogram, order in descending by the X-axis.",
            "Compare the average of artists' age by country in a bar graph, I want to sort by the X from high to low.",
            "Show the average of artists' age by country, and I want to sort by the X from high to low.",
            "Bar chart x axis country y axis the average of age, and display by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Zimbabwe",
                        "y_data": 48
                    },
                    {
                        "x_data": "United States",
                        "y_data": 49.6
                    },
                    {
                        "x_data": "Fiji",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    }
]